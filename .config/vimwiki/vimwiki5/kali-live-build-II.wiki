
   #[1]Kali Linux

   [2]11th Birthday! 🎉️
     * [3]Get Kali
     * [4]Blog
     * Documentation
       [5]Documentation Pages [6]Kali Tools Documentation [7]Frequently
       Asked Questions [8]Known Issues
     * Community
       [9]Community Support [10]Kali Linux Forums [11]Discord [12]Join
       Newsletter [13]Mirror Location [14]Get Involved
     * Courses
       [15]Kali Linux Revealed (KLCP/PEN-103) [16]PEN-200 (PWK/OSCP)
       [17]PEN-210 (WiFu/OSWP) [18]PEN-300 (ETBD/OSEP) [19]WEB-200
       (WAWK/OSWA) [20]WEB-300 (AWAE/OSWE) [21]EXP-301 (WUMED/OSED)
       [22]EXP-312 (MCB/OSMR) [23]EXP-401 (AWE/OSEE) [24]SOC-200 (OSDA)
     * Developers
       [25]Git Repositories [26]Packages [27]Auto Package Test [28]Bug
       Tracker [29]Kali NetHunter Stats
     * About
       [30]Kali Linux Overview [31]Press Pack [32]Meet The Kali Team
       [33]Partnerships [34]Contact Us

   (BUTTON)

     * [35]Kali Development
          + [36]Contributing run-time tests with autopkgtest
          + [37]Custom Beaglebone Black Image
          + [38]Custom Chromebook Image
          + [39]Custom CuBox Image
          + [40]Custom EfikaMX Image
          + [41]Custom MK/SS808 Image
          + [42]Custom ODROID X2 U2 Image
          + [43]Custom Raspberry Pi Image
          + [44]Setting up a system for packaging
          + [45]Introduction to packaging step-by-step example
          + [46]Intermediate packaging step-by-step example
          + [47]Advanced Packaging Step-By-Step Example (FinalRecon &
            Python-icmplib)
          + [48]Getting the best out of the Kali Bot
          + [49]Generate an Updated Kali ISO
          + [50]Creating A Custom Kali ISO
          + [51]Building Custom Kali ISOs
          + [52]Rebuilding a Source Package
          + [53]Recompiling the Kali Linux Kernel
          + [54]Preparing a Kali Linux ARM chroot
          + [55]ARM Build Scripts
          + [56]ARM Cross-Compilation
          + [57]Packaging Applications with Kaboxer

   LIGHT [ ]
   DARK

Creating A Custom Kali ISO

   Table of Contents

     * [58]An Introduction to Building Your Own Kali ISO
     * [59]Where Should You Build Your ISO?
     * [60]Kali Environment
          +
               o [61]Getting Ready - Setting Up The build-script Kali
                 System
               o [62]Building an Updated Live Image
               o [63]Building an Updated Installer Image
     * [64]Non-Kali Debian-Based Environment
          +
               o [65]Setting Up The build-script Non-Kali Debian-Based
                 System
     * [66]Re-building the Latest Kali Image
     * [67]Configuring The Kali ISO Build (Optional)
          +
               o [68]Building Kali Live With Different Desktop
                 Environments
               o [69]Controlling The Packages Included In Your Build
               o [70]Overlaying Files In Your Build
               o [71]Build Hooks, Binary and Chroot
     * [72]Building a Kali Linux ISO for Different Architectures
       (Optional)
          +
               o [73]Building a Kali Linux ISO for Older i386
                 Architectures
     * [74]Using A Custom Network Mirror For Building (Optional)
     * [75]Help Screen
     * [76]Testing Built Image

   [77]

An Introduction to Building Your Own Kali ISO

   Building a customized Kali Linux image is not as complex as you may be
   thinking. It is easy, fun, and rewarding! Kali Linux traditionally, has
   been a Live Image, but since [78]Kali 2020.1 an Installer Image was
   introduced. Both these images have [79]different functions, and are
   also built in different ways.
     * Live Image - allows you to try Kali, without altering the system
       (making it great for [80]USB). It is created using [81]live-build
     * Installer Image - allows for you to customize Kali by picking
       packaging during installation, such as picking the [82]desktop
       environment as well as what [83]metapackages get installed. This
       image is powered by [84]simple-cdd (which uses debian-cd to make
       Debian-Installer).

   You can configure virtually any aspect of your Kali ISO build, such as
   adding packages from outside of Kali network repositories, unattended
   installations to changing the default wallpaper. Our build-scripts
   provides a framework that uses a configuration set to automate and
   customize all aspects of building the images. The Kali Linux
   development team use the same build-scripts to produce the official
   Kali ISO releases.
   [85]

Where Should You Build Your ISO?

   Ideally, you should build your custom Kali ISO from within a
   pre-existing Kali environment, as there is less chance of items going
   wrong. However, it is possible to generate the images on a Non-Kali but
   still a Debian-Based system.
   [86]

Kali Environment

   [87]

Getting Ready - Setting Up The build-script Kali System

   We first need to prepare the Kali ISO build environment by installing
   and setting up the required packages with the following commands:
kali@kali:~$ sudo apt update
kali@kali:~$ sudo apt install -y git live-build simple-cdd cdebootstrap curl
kali@kali:~$
kali@kali:~$ git clone https://gitlab.com/kalilinux/build-scripts/live-build-con
fig.git

[88]

Building an Updated Live Image

   Now you can simply build an updated Kali ISO (with our default
   configuration) by entering the live-build-config/ directory and running
   our build.sh wrapper script, as follows:
kali@kali:~$ cd live-build-config/
kali@kali:~/live-build-config$ ./build.sh --verbose
[...]
***
GENERATED KALI IMAGE: ./images/kali-linux-rolling-live-amd64.iso
***
kali@kali:~$

   The build.sh script will take a while to complete, as it downloads all
   of the required packages needed to create your ISO. Good time for a
   drink.
   [89]

Building an Updated Installer Image

   By default, it will generate a Live Image. If you want an Installer
   Image, add --installer:
kali@kali:~/live-build-config$ ./build.sh --verbose --installer

   We are using the --verbose to output more on the screen rather than it
   being captured in just the build.log output. If you want even more
   output, you can use --debug instead, which will then give even more
   information.
     __________________________________________________________________

   [90]

Non-Kali Debian-Based Environment

   [91]

Setting Up The build-script Non-Kali Debian-Based System

   You can build an Kali ISO on a Debian-based systems other than Kali
   Linux. The instructions below have been tested to work with both Debian
   and Ubuntu.

   First, we prepare the system by ensuring it is fully updated, then
   proceed to download the Kali archive keyring and packages:
$ sudo apt update
$ sudo apt full-upgrade -y
$
$ wget https://http.kali.org/pool/main/k/kali-archive-keyring/kali-archive-keyri
ng_2022.1_all.deb
$ wget https://http.kali.org/pool/main/l/live-build/live-build_20230502+kali3_al
l.deb

   Note: You must check thatkali-archive-keyring_20YY.X_all.deb &
   live-build_20YYMMDD+kaliX_all.deb are the latest files.

   With that completed, we install some additional dependencies and the
   previously downloaded files:
$ sudo apt install -y git live-build simple-cdd cdebootstrap curl
$
$ sudo dpkg -i kali-archive-keyring_2022.1_all.deb
$ sudo dpkg -i live-build_20230502+kali3_all.deb

   With the environment all prepared, we start the process by setting up
   the build-script profile and clone out the build config:
$ cd /usr/share/debootstrap/scripts/
$ (echo "default_mirror http://http.kali.org/kali"; sed -e "s/debian-archive-key
ring.gpg/kali-archive-keyring.gpg/g" sid) > /tmp/kali
$ sudo mv /tmp/kali .
$ sudo ln -s kali kali-rolling
$
$ cd ~/
$ git clone https://gitlab.com/kalilinux/build-scripts/live-build-config.git
$
$ cd live-build-config/

   At this point, depending on the host OS and its version, we may need to
   edit build.sh to bypass a version check for debootstrap. We do this by
   commenting out the exit 1 below:
$ cat build.sh
[...]
                ver_debootstrap=$(dpkg-query -f '${Version}' -W debootstrap)
                if dpkg --compare-versions "$ver_debootstrap" lt "1.0.97"; then
                        echo "ERROR: You need debootstrap (>= 1.0.97), you have
$ver_debootstrap" >&2
                        exit 1
                fi
[...]
$

   With the above change made, build.sh should look similar:
$ cat build.sh
[...]
                ver_debootstrap=$(dpkg-query -f '${Version}' -W debootstrap)
                if dpkg --compare-versions "$ver_debootstrap" lt "1.0.97"; then
                        echo "ERROR: You need debootstrap (>= 1.0.97), you have
$ver_debootstrap" >&2
                        #exit 1
                fi
[...]
$

   At this point, we can build our ISO as normal:
$ ./build.sh --verbose
     __________________________________________________________________

   [92]

Re-building the Latest Kali Image

   By using the [93]kali-last-snapshot branch, you are able to re-create
   the latest distributed image. We can do this by using --distribution
   kali-last-snapshot:
kali@kali:~$ time ./build.sh \
  --verbose \
  --installer \
  --distribution kali-last-snapshot \
  --version 2024.1 \
  --subdir kali-2024.1
[...]
***
GENERATED KALI IMAGE: ./images/kali-2024.1/kali-linux-2024.1-installer-amd64.iso
***
kali@kali:~$
     __________________________________________________________________

   [94]

Configuring The Kali ISO Build (Optional)

   If you want to customize your Kali Linux ISO, this section will explain
   some of the details. Through the kali-config/ directory, there are a
   wide range of customization options, which are well-documented for
   [95]live-build page. Simple-CD is a little more limited with options.
   For the impatient, here are some of the highlights.
   [96]

Building Kali Live With Different Desktop Environments

   Since [97]Kali 2.0, we now support built in configurations for various
   [98]desktop environments, including Xfce (default), Gnome, KDE, E17,
   I3WM, LXDE, MATE. To build any of these, you would use syntax similar
   to the following:
kali@kali:~/live-build-config$ # These are the different Desktop Environment bui
ld options:
kali@kali:~/live-build-config$ #./build.sh --variant {xfce,gnome,kde,mate,e17,lx
de,i3} --verbose
kali@kali:~/live-build-config$
kali@kali:~/live-build-config$ # To build a Gnome ISO:
kali@kali:~/live-build-config$ ./build.sh --variant gnome --verbose
kali@kali:~/live-build-config$
kali@kali:~/live-build-config$ # To build a KDE ISO:
kali@kali:~/live-build-config$ ./build.sh --variant kde --verbose

   This is not required with the installer images, as it includes Xfce,
   Gnome and KDE by default. You can add others by including their
   packages as explained in the section below.
   [99]

Controlling The Packages Included In Your Build

   The list of packages included in your build will be present in the the
   respective kali-config/ directory. For example, if you’re wanting to
   edit:
     * The default Installer ISO, you would use the following package
       lists file - kali-config/installer-default/packages
     * The default Live ISO, you would use the following package lists
       file - kali-config/variant-default/package-lists/kali.list.chroot
     * A non-default Live ISO desktop environment, such as Gnome -
       kali-config/variant-gnome/package-lists/kali.list.chroot (You can
       replace Gnome with any supported desktop environments)

   By default, these lists will includes the [100]kali-linux-default
   metapackage, as well as some others. These can be commented out and
   replaced with a manual list of packages to include in the ISO for
   greater granularity.
   [101]

Overlaying Files In Your Build

   With Live images, you have the option to include additional files or
   scripts in your build by overlaying them on the existing file-system,
   inside the includes.{chroot,binary,installer} directories,
   respectively.

   For example, if we wanted to include our own custom script into the
   /root/ directory of the ISO (this would correspond to the chroot
   stage), then we would drop this script file in the
   kali-config/common/includes.chroot/ directory before building the ISO.

   For more information see the [102]live-build documentation.
   [103]

Build Hooks, Binary and Chroot

   For live images, live-build supports hooks allows us to “hook scripts”
   in various stages of the Kali ISO live image. For more detailed
   information about hooks and how to use them, refer to the
   [104]live-build manual.

   As an example, we recommend you check out the existing hooks in
   kali-config/common/hooks/.
     __________________________________________________________________

   [105]

Building a Kali Linux ISO for Different Architectures (Optional)

   By default, the build-script will generate the Kali image based on the
   architectures of the current operating system. If you wish to alter
   this:
     * x64: ./build.sh --verbose --arch amd64
     * x86: ./build.sh --verbose --arch i386

   [106]

Building a Kali Linux ISO for Older i386 Architectures

   The Kali Linux i386 ISO has PAE enabled. If you require a default
   kernel for older hardware with PAE disabled, you will need to rebuild a
   Kali Linux ISO. The rebuilding process is much the same as described
   above, except that the 686-pae parameter needs to be changed to 686 in
   auto/config before building:
kali@kali:~/live-build-config$ sed -i 's/686-pae/686/g' auto/config
kali@kali:~/live-build-config$
kali@kali:~/live-build-config$ ./build.sh --verbose --arch i386
     __________________________________________________________________

   [107]

Using A Custom Network Mirror For Building (Optional)

   If you build multiple images, you will find you are often waiting on
   build.sh to finish. There are a few ways to speed up the build process,
   such as:
     * Building Installer images as they often build quicker than Live
       images
     * Have less packages included (such as switching kali-linux-default
       to kali-linux-top10)
     * Improve access to packages

   You often find that you are waiting on packages to be pulled down. You
   can either setup a local proxy on the same machine (such as apt-cacher
   or apt-cacher-ng). Alternatively, you can setup a [108]local network
   mirror.

   We can instruct the build-script to use a different mirror, by doing
   the following (assuming our network mirror is located at
   http://192.168.0.101/kali):
kali@kali:~/live-build-config$ echo "http://192.168.0.101/kali/" > .mirror
kali@kali:~/live-build-config$ ./build.sh --verbose
     __________________________________________________________________

   [109]

Help Screen

   You can see all the available command-line options by doing --help:
kali@kali:~/live-build-config$ ./build.sh --help
Usage: ./build.sh [<option>...]

  --distribution <arg>
  --proposed-updates
  --arch <arg>
  --verbose
  --debug
  --salt
  --installer
  --live
  --variant <arg>
  --version <arg>
  --subdir <arg>
  --get-image-path
  --no-clean
  --clean
  --help

More information: https://www.kali.org/docs/development/live-build-a-custom-kali
-iso/
kali@bDesktop:~/live-build-config$
     __________________________________________________________________

   [110]

Testing Built Image

   After producing the issue, you can treat it like any Kali base image,
   so you can [111]install it (either on bare metal or [112]virtually), or
   copy to a CD/DVD/[113]USB.

   If you are wanting to quickly test the image before putting it “in
   production”, we can use [114]qemu (and [115]ovmf for UEFI). First we
   install the packages:
kali@kali:$ sudo apt update
kali@kali:$ sudo apt install -y qemu qemu-system-x86 ovmf

   Next we produce a hard disk to use:
kali@kali:$ qemu-img create \
  -f qcow2 \
  /tmp/kali-test.hdd.img \
  20G

   Afterwards, to boot from the image produced (we will be using the Live
   image on x64):
kali@kali:$ qemu-system-x86_64 \
  -enable-kvm \
  -drive if=virtio,aio=threads,cache=unsafe,format=qcow2,file=/tmp/kali-test.hdd
.img \
  -cdrom /home/kali/live-build-config/images/kali-linux-rolling-live-amd64.iso \
  -boot once=d

   The above will be a “BIOS” boot. For a “UEFI” boot:
kali@kali:$ qemu-system-x86_64 \
  -enable-kvm \
  -drive if=virtio,aio=threads,cache=unsafe,format=qcow2,file=/tmp/kali-test.hdd
.img \
  -drive if=pflash,format=raw,readonly,file=/usr/share/OVMF/OVMF_CODE.fd \
  -drive if=pflash,format=raw,readonly,file=/usr/share/OVMF/OVMF_VARS.fd \
  -cdrom /home/kali/live-build-config/images/kali-linux-rolling-live-amd64.iso \
  -boot once=d

   Note: We have set UEFI configuration file to be read only
     __________________________________________________________________

   Updated on: 2024-Feb-28
   Author: [116]g0tmi1k
     __________________________________________________________________

   [117]Edit this page [118]Create a new page
   [119]Generate an Updated Kali ISO [120]Building Custom Kali ISOs

   LIGHT [ ]
   DARK

Links

   [121]Home [122]Download / Get Kali [123]Blog [124]OS Documentation
   [125]Tool Documentation [126]System Status [127]Archived Releases

Platforms

   [128]ARM (SBC) [129]NetHunter (Mobile)
   [130]Amazon AWS [131]Docker [132]Linode [133]Microsoft Azure
   [134]Microsoft Store (WSL) [135]Vagrant

Development

   [136]Bug Tracker [137]Continuous Integration [138]Network Mirror
   [139]Package Tracker [140]GitLab

Community

   [141]Discord [142]Support Forum

Follow Us

   [143]Facebook [144]Instagram [145]Mastodon [146]Twitter
   [147]Newsletter [148]RSS

Policies

   [149]Cookie Policy [150]Privacy Policy [151]Trademark Policy
   © OffSec Services Limited 2024. All rights reserved.

References

   Visible links:
   1. https://www.kali.org/rss.xml
   2. https://www.kali.org/
   3. https://www.kali.org/get-kali/
   4. https://www.kali.org/blog/
   5. https://www.kali.org/docs/
   6. https://www.kali.org/tools/
   7. https://www.kali.org/faq/
   8. https://bugs.kali.org/search.php?project_id=1&category_id[]=General Bug&category_id[]=Kali Package Bug&category_id[]=Kali Package Improvement&status[]=30&status[]=40&status[]=50&sticky=on&sort=id,last_updated&dir=DESC,DESC&hide_status=-2&match_type=0
   9. https://www.kali.org/community/
  10. https://forums.kali.org/
  11. https://discord.kali.org/
  12. https://www.kali.org/newsletter/
  13. https://http.kali.org/README?mirrorlist
  14. https://www.kali.org/docs/community/contribute/
  15. https://www.offsec.com/courses/pen-103/
  16. https://www.offsec.com/courses/pen-200/
  17. https://www.offsec.com/courses/pen-210/
  18. https://www.offsec.com/courses/pen-300/
  19. https://www.offsec.com/courses/web-200/
  20. https://www.offsec.com/courses/web-300/
  21. https://www.offsec.com/courses/exp-301/
  22. https://www.offsec.com/courses/exp-312/
  23. https://www.offsec.com/courses/exp-401/
  24. https://www.offsec.com/courses/soc-200/
  25. https://gitlab.com/kalilinux
  26. https://pkg.kali.org/
  27. https://autopkgtest.kali.org/
  28. https://bugs.kali.org/
  29. https://nethunter.kali.org/
  30. https://www.kali.org/features/
  31. https://gitlab.com/kalilinux/documentation/press-pack/-/archive/main/press-pack-main.zip
  32. https://www.kali.org/about-us/
  33. https://www.kali.org/partnerships/
  34. https://www.kali.org/contact/
  35. https://www.kali.org/docs/development/
  36. https://www.kali.org/docs/development/contributing-runtime-tests/
  37. https://www.kali.org/docs/development/custom-beaglebone-black-image/
  38. https://www.kali.org/docs/development/custom-chromebook-kernel-image/
  39. https://www.kali.org/docs/development/custom-cubox-image/
  40. https://www.kali.org/docs/development/custom-efikamx-image/
  41. https://www.kali.org/docs/development/custom-kali-arm-ss808-image/
  42. https://www.kali.org/docs/development/custom-odroid-kernel-image/
  43. https://www.kali.org/docs/development/custom-raspberry-pi-image/
  44. https://www.kali.org/docs/development/setting-up-packaging-system/
  45. https://www.kali.org/docs/development/intro-to-packaging-example/
  46. https://www.kali.org/docs/development/intermediate-packaging-example/
  47. https://www.kali.org/docs/development/advanced-packaging-example/
  48. https://www.kali.org/docs/development/leveraging-the-kali-bot/
  49. https://www.kali.org/docs/development/generate-updated-kali-iso/
  50. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/
  51. https://www.kali.org/docs/development/dojo-mastering-live-build/
  52. https://www.kali.org/docs/development/rebuilding-a-package-from-source/
  53. https://www.kali.org/docs/development/recompiling-the-kali-linux-kernel/
  54. https://www.kali.org/docs/development/kali-linux-arm-chroot/
  55. https://www.kali.org/docs/development/arm-build-scripts/
  56. https://www.kali.org/docs/development/arm-cross-compilation-environment/
  57. https://www.kali.org/docs/development/packaging-apps-with-kaboxer/
  58. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#an-introduction-to-building-your-own-kali-iso
  59. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#where-should-you-build-your-iso
  60. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#kali-environment
  61. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#getting-ready---setting-up-the-build-script-kali-system
  62. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-an-updated-live-image
  63. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-an-updated-installer-image
  64. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#non-kali-debian-based-environment
  65. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#setting-up-the-build-script-non-kali-debian-based-system
  66. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#re-building-the-latest-kali-image
  67. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#configuring-the-kali-iso-build-optional
  68. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-kali-live-with-different-desktop-environments
  69. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#controlling-the-packages-included-in-your-build
  70. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#overlaying-files-in-your-build
  71. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#build-hooks-binary-and-chroot
  72. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-a-kali-linux-iso-for-different-architectures-optional
  73. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-a-kali-linux-iso-for-older-i386-architectures
  74. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#using-a-custom-network-mirror-for-building-optional
  75. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#help-screen
  76. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#testing-built-image
  77. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#an-introduction-to-building-your-own-kali-iso
  78. https://www.kali.org/blog/kali-linux-2020-1-release/
  79. https://www.kali.org/docs/introduction/what-image-to-download/
  80. https://www.kali.org/docs/usb/
  81. https://live-team.pages.debian.net/live-manual/html/live-manual/index.en.html
  82. https://www.kali.org/docs/general-use/switching-desktop-environments/
  83. https://www.kali.org/docs/general-use/metapackages/
  84. https://wiki.debian.org/Simple-CDD
  85. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#where-should-you-build-your-iso
  86. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#kali-environment
  87. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#getting-ready---setting-up-the-build-script-kali-system
  88. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-an-updated-live-image
  89. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-an-updated-installer-image
  90. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#non-kali-debian-based-environment
  91. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#setting-up-the-build-script-non-kali-debian-based-system
  92. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#re-building-the-latest-kali-image
  93. https://www.kali.org/docs/general-use/kali-branches/
  94. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#configuring-the-kali-iso-build-optional
  95. https://live-team.pages.debian.net/live-manual/html/live-manual/customization-overview.en.html
  96. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-kali-live-with-different-desktop-environments
  97. https://www.kali.org/blog/kali-linux-2-0-release/
  98. https://www.kali.org/docs/general-use/switching-desktop-environments/
  99. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#controlling-the-packages-included-in-your-build
 100. https://www.kali.org/docs/general-use/metapackages/
 101. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#overlaying-files-in-your-build
 102. https://live-team.pages.debian.net/live-manual/html/live-manual/customizing-contents.en.html
 103. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#build-hooks-binary-and-chroot
 104. https://live-team.pages.debian.net/live-manual/html/live-manual/customizing-contents.en.html#507
 105. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-a-kali-linux-iso-for-different-architectures-optional
 106. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#building-a-kali-linux-iso-for-older-i386-architectures
 107. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#using-a-custom-network-mirror-for-building-optional
 108. https://www.kali.org/docs/community/setting-up-a-kali-linux-mirror/
 109. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#help-screen
 110. https://www.kali.org/docs/development/live-build-a-custom-kali-iso/#testing-built-image
 111. https://www.kali.org/docs/installation/
 112. https://www.kali.org/docs/virtualization/
 113. https://www.kali.org/docs/usb/
 114. https://packages.debian.org/sid/qemu
 115. https://packages.debian.org/sid/ovmf
 116. https://gitlab.com/g0tmi1k
 117. https://gitlab.com/-/ide/project/kalilinux/documentation/kali-docs/edit/master/-/development/live-build-a-custom-kali-iso/index.md
 118. https://gitlab.com/-/ide/project/kalilinux/documentation/kali-docs/edit/master/-/development/live-build-a-custom-kali-iso/
 119. https://www.kali.org/docs/development/generate-updated-kali-iso/
 120. https://www.kali.org/docs/development/dojo-mastering-live-build/
 121. https://www.kali.org/
 122. https://www.kali.org/get-kali/
 123. https://www.kali.org/blog/
 124. https://www.kali.org/docs/
 125. https://www.kali.org/tools/
 126. https://status.kali.org/
 127. https://old.kali.org/
 128. https://arm.kali.org/
 129. https://nethunter.kali.org/
 130. https://aws.amazon.com/marketplace/pp/B08LL91KKB
 131. https://hub.docker.com/u/kalilinux
 132. https://www.linode.com/marketplace/apps/kali-linux/kali-linux/
 133. https://azuremarketplace.microsoft.com/en/marketplace/apps/kali-linux.kali
 134. https://www.microsoft.com/en-us/p/kali-linux/9pkr34tncv07
 135. https://app.vagrantup.com/kalilinux
 136. https://bugs.kali.org/
 137. https://autopkgtest.kali.org/
 138. https://http.kali.org/README?mirrorlist
 139. https://pkg.kali.org/
 140. https://gitlab.com/kalilinux
 141. https://discord.kali.org/
 142. https://forums.kali.org/
 143. https://www.facebook.com/kalilinux
 144. https://www.instagram.com/kalilinux/
 145. https://infosec.exchange/@kalilinux
 146. https://twitter.com/kalilinux
 147. https://www.kali.org/newsletter/
 148. https://www.kali.org/rss.xml
 149. https://www.kali.org/docs/policy/cookie/
 150. https://www.kali.org/docs/policy/privacy/
 151. https://www.kali.org/docs/policy/trademark/

   Hidden links:
 153. https://www.kali.org/docs/development/
