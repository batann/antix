
= flatpak usb sideload repo =



For example, if you want to put Gedit on a USB drive:

    First identify the Application ID using
`
flatpak list --app
`
In the case of Gedit it is org.gnome.gedit. Use
`
flatpak info -o com.tutanota.Tutanota
`
to determine the origin remote. For example that may be flathub.

    Ensure the origin remote has a collection ID set by using
`
flatpak remotes -d
`
and checking the “Collection ID” column. If not, configure one with e.g.
`
flatpak remote-modify --collection-id=org.flathub.Stable flathub
`
If any dependencies come from other remotes, those will also need a collection ID configured.

    Next, use the df command to identify the mount point for the USB drive. It may be something like /media/user/FLATPAKS.

    Now copy the flatpak and its dependencies to the drive:
`
    flatpak create-usb /media/user/FLATPAKS org.gnome.gedit
`
    Wait for the copying process to complete, at which point you should get a command prompt ($). This process can take tens of minutes especially if the USB drive and USB port aren’t USB 3.0+. Then unmount the drive before removing it:
`
     umount /media/user/FLATPAKS
`
The process for installing from such a USB drive (for example on an offline machine) differs between Flatpak versions before 1.8.0 and those after. With earlier versions you can simply use the flatpak install command as you normally would online:
`
 flatpak install flathub org.gnome.gedit
`
For versions after 1.8.0, if your linux distribution has packaged the relevant systemd units, using flatpak install with no extra arguments still works. Otherwise, you can use the --sideload-repo option in your command invocation:
