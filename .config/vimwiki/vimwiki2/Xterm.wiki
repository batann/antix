= Contents =
        - [[#xterm]]
                        - [[#Syntax]]
                        - [[#Options]]
                        - [[#General Options]]
                        - [[#Appearance And Behavior Options]]
                                - [[#The following command line arguments are provided for compatibility with older versions:]]
                                        - [[#The following standard X Toolkit command line arguments are commonly used with xterm:]]
                        - [[#Resources]]
                                - [[#The program understands all of the core X Toolkit resource names and classes.]]
                                - [[#Application specific resources (e.g., "XTerm.NAME") are as follows:]]
                        - [[#VT100 Widget Resources]]
                                - [[#The following resources are specified as part of the vt100 widget (class VT100). They are specified by patterns such as "XTerm.vt100.NAME".]]
                        - [[#Tek4014 Widget Resources]]
                                - [[#The following resources are specified as part of the tek4014 widget (clasi Tek4014). These are specified by patterns such as "XTerm.tek4014.NAME":]]
                        - [[#Menu Resources]]
                                - [[#The mainMenu has the following entries:]]
                                - [[#The vtMenu has the following entries:]]
                                - [[#The fontMenu has the following entries:]]
                                - [[#The tekMenu has the following entries:]]
                        - [[#Scrollbar Resources]]
                                - [[#The following resources are useful when specified for the Athena Scrollbar widget:]]
                        - [[#Pointer Usage]]
                        - [[#Selection]]
                        - [[#Scrolling]]
                        - [[#Tektronix Pointer]]
                        - [[#Select/Paste]]
                        - [[#Primary Selection]]
                        - [[#Clipboard]]
                        - [[#Selection Targets]]
                        - [[#Menus]]
                        - [[#Main Options]]
                                - [[#Commands for managing X events:]]
                                - [[#Commands for capturing output:]]
                                - [[#Modes for setting keyboard style:]]
                                - [[#Commands for process signalling:]]
                        - [[#VT Options]]
                                - [[#VT102/VT220 Modes:]]
                                - [[#VT102/VT220 Commands:]]
                                - [[#Commands for setting the current screen:]]
                        - [[#VT Fonts]]
                                - [[#The first section allows you to select the font from a set of alternatives:]]
                                - [[#The second section allows you to modify the way it is displayed:]]
                                - [[#The third section allows you to modify the way it is specified:]]
                - [[#uxterm -class XTerm]]
                        - [[#Security]]
                                - [[#X environments differ in their security consciousness.]]
                        - [[#Character Classes]]
                                - [[#The default table starts as follows:]]
                        - [[#Actions]]
                        - [[#The Tektronix window also has the following action:]]
                        - [[#The default bindings in the VT102 window use the SELECT token, which is set by the selectToClipboard resource:]]
                        - [[#The default bindings for the scrollbar widget are separate from the VT10 widget:]]
                        - [[#The default bindings in the Tektronix window are:]]
                        - [[#*VT100*translations:    #override \n\]]
                        - [[#*VT100.Translations: #override <Key>F13: keymap(dbx)]]
                                - [[#*VT100.dbxKeymap.translations: \]]
                        - [[#Control Sequences And Keyboard]]
                        - [[#Environment]]
                                - [[#xterm sets several environment variables:]]
                                - [[#Depending on your system configuration, xterm may also set the following:]]
                        - [[#Files]]
                                        - [[#The actual pathnames given may differ on your system:]]
                - [[#Examples]]
                        - [[#xterm]]
                        - [[#Related commands]]

= xterm =



=== Syntax ===

xterm [-toolkitoption ...] [-option ...] [shell]

=== Options ===

If an option begins with a "+" instead of a "-", the option is restored to its
default value. The -version and -help options are interpreted even if xterm
cannot open a display, and along with the -class option, are checked before all
other options.

When xterm runs, it normally checks the SHELL environment variable for which
shell to run. This shell can be changed, however, by providing a parameter to
xterm, after all other options, which specifies the pathname of a shell to run.
This pathname can be an absolute path or a relative path, and xterm will search
the user's PATH environment variable for the specified shell if it cannot find
it. If no shell is specified, and the SHELL environment variable is undefined,
xterm uses the Bourne Shell, /bin/sh.

=== General Options ===

-version Print the version information for xterm, and exit.
-help    Display a help message, and exit.

=== Appearance And Behavior Options ===

                          Normally, the VT102 DECCOLM escape sequence that
                          switches between 80 and 132 column mode is ignored.
-132                      This option causes the DECCOLM escape sequence to be
                          recognized, and the xterm window will resize
                          appropriately.
                          This option indicates that xterm should always
-ah                       highlight the text cursor. By default, xterm displays
                          a hollow text cursor whenever the focus is lost or
                          the pointer leaves the window.
+ah                       This option indicates that xterm should do text
                          cursor highlighting based on focus.
                          This option disables active icon support if that
-ai                       feature was compiled into xterm. This is equivalent
                          to setting the vt100 resource activeIcon to "false".
                          This option enables active icon support if that
+ai                       feature was compiled into xterm. This is equivalent
                          to setting the vt100 resource activeIcon to "true".
                          This option indicates that auto-wraparound should be
-aw                       allowed. This allows the cursor to automatically wrap
                          to the beginning of the next line when it is at the
                          rightmost position of a line and text is output.
+aw                       This option indicates that auto-wraparound should not
                          be allowed.
                          This option specifies the size of the inner border
                          (the distance between the outer edge of the
-b number                 characters and the window border) in pixels. That is
                          the vt100 internalBorder resource. The default is "2
                          ".
+bc                       Turn off text cursor blinking. This overrides the
                          cursorBlink resource.
-bc                       Turn on text cursor blinking. This overrides the
                          cursorBlink resource.
-bcf milliseconds         Set the amount of time text cursor is off when
                          blinking via the cursorOffTime resource.
-bcn milliseconds         Set the amount of time text cursor is on when
                          blinking via the cursorOffTime resource.
                          Set the vt100 resource colorBDMode to "false",
-bdc                      disabling the display of characters with bold
                          attribute as color.
                          Set the vt100 resource colorBDMode to "true",
+bdc                      enabling the display of characters with bold
                          attribute as color rather than bold.
-cb                       Set the vt100 resource cutToBeginningOfLine to "false
                          ".
+cb                       Set the vt100 resource cutToBeginningOfLine to "true
                          ".
                          This sets classes indicated by the given ranges for
-cc characterclassrange:  using in selecting by words. See the section
value[,...]               specifying character classes, and discussion of the
                          charClass resource.
                          Set the cjkWidth resource to "true". When turned on,
                          characters with East Asian Ambiguous (A) category in
                          UTR 11 have a column width of 2. Otherwise, they have
                          a column width of 1. This may be useful for some
-cjk_width                legacy CJK text terminal-based programs assuming box
                          drawings and others to have a column width of 2. It
                          also should be turned on when you specify a TrueType
                          CJK double-width (bi-width/monospace) font either
                          with -fa at the command line or faceName resource.
                          The default is "false".
+cjk_width                Reset the cjkWidth resource.
                          This option allows you to override xterm's resource
-class string             class. Normally it is "XTerm", but can be set to
                          another class such as "UXTerm" to override selected
                          resources.
                          This option disables recognition of ANSI color-change
-cm                       escape sequences. It sets the colorMode resource to "
                          false".
                          This option enables recognition of ANSI color-change
+cm                       escape sequences. This is the same as the vt100
                          resource colorMode.
                          This option indicates that newlines should not be cut
-cn                       in line-mode selections. It sets the cutNewline
                          resource to "false".
                          This option indicates that newlines should be cut in
+cn                       line-mode selections. It sets the cutNewline resource
                          to "true".
                          This option specifies the color to use for text
-cr color                 cursor. The default is to use the same foreground
                          color that is used for text. It sets the cursorColor
                          resource according to the parameter.
                          This option indicates that xterm should work around a
                          bug in the more program that causes it to incorrectly
-cu                       display lines that are exactly the width of the
                          window and are followed by a line beginning with a
                          tab (the leading tabs are not displayed).
+cu                       This option indicates that xterm should not work
                          around the more bug mentioned above.
                          This option disables the escape sequence to change
                          dynamic colors: the vt100 foreground and background
                          colors, its text cursor color, the pointer cursor
-dc                       foreground and background colors, the Tektronix
                          emulator foreground and background colors, its text
                          cursor color and highlight color. The option sets the
                          dynamicColors option to "false".
                          This option enables the escape sequence to change
+dc                       dynamic colors. The option sets the dynamicColors
                          option to "true".
                          This option specifies the program (and its command
                          line arguments) to be run in the xterm window. It
-e program [ arguments    also sets the window title and icon name to be the
... ]                     basename of the program being executed if neither -T
                          nor -n are given on the command line. This must be
                          the last option on the command line.
                          This option determines the encoding on which xterm
                          runs. It sets the locale resource. Encodings other
                          than UTF-8 are supported using luit (a tool used to
-en encoding              translate the character set of a program so that its
                          output can be displayed correctly on a terminal
                          emulator that uses a different character set). The
                          -lc option should be used instead of -en for systems
                          with locale support.
                          This option specifies a font to be used when
                          displaying bold text. It sets the boldFont resource.

                          This font must be the same height and width as the
                          normal font, otherwise it is ignored. If only one of
-fb font                  the normal or bold fonts is specified, it is used as
                          the normal font and the bold font is produced by
                          overstriking this font.

                          See also the discussion of boldMode and
                          alwaysBoldMode resources.
                          This option sets the pattern for fonts selected from
                          the FreeType library if support for that library was
                          compiled into xterm. This corresponds to the faceName
                          resource. When a CJK double-width font is specified,
-fa pattern               you also need to turn on the cjkWidth resource.

                          See also the renderFont resource, which combines with
                          this to determine whether FreeType fonts are
                          initially active.
                          This option indicates that xterm should compare
-fbb                      normal and bold fonts bounding boxes to ensure they
                          are compatible. It sets the freeBoldBox resource to "
                          false".
                          This option indicates that xterm should not compare
+fbb                      normal and bold fonts bounding boxes to ensure they
                          are compatible. It sets the freeBoldBox resource to "
                          true".
                          This option indicates that xterm should not assume
                          that the normal and bold fonts have VT100
-fbx                      line-drawing characters. If any are missing, xterm
                          will draw the characters directly. It sets the
                          forceBoxChars resource to "false".
                          This option indicates that xterm should assume that
+fbx                      the normal and bold fonts have VT100 line-drawing
                          characters. It sets the forceBoxChars resource to "
                          true".
                          This option sets the pattern for double-width fonts
-fd pattern               selected from the FreeType library if support for
                          that library was compiled into xterm. This
                          corresponds to the faceNameDoublesize resource.
                          This option sets the font for active icons if that
-fi font                  feature was compiled into xterm.

                          See also the iconFont resource.
                          This option sets the pointsize for fonts selected
-fs size                  from the FreeType library if support for that library
                          was compiled into xterm. This corresponds to the
                          faceSize resource.
                          This option indicates that xterm should ask the
-fullscreen               window manager to let it use the full-screen for
                          display, e.g., without window decorations. It sets
                          the fullscreen resource to "true".
                          This option indicates that xterm should not ask the
+fullscreen               window manager to let it use the full-screen for
                          display. It sets the fullscreen resource to "false".
                          This option specifies the font to be used for
                          displaying wide text. By default, it will attempt to
-fw font                  use a font twice as wide as the font that will be
                          used to draw normal text. If no double-width font is
                          found, it will improvise, by stretching the normal
                          font. This corresponds to the wideFont resource.
                          This option specifies the font to be used for
                          displaying bold wide text. By default, it will
                          attempt to use a font twice as wide as the font that
-fwb font                 will be used to draw bold text. If no double-width
                          font is found, it will improvise, by stretching the
                          bold font. This corresponds to the wideBoldFont
                          resource.
                          This option specifies the font to be used for
                          displaying the preedit string in the "OverTheSpot"
-fx font                  input method.

                          See also the discussion of the ximFont resource.
-hc color                 See -selbg.
                          This option indicates that HP Function Key escape
-hf                       codes should be generated for function keys. It sets
                          the hpFunctionKeys resource to "true".
                          This option indicates that HP Function Key escape
+hf                       codes should not be generated for function keys. It
                          sets the hpFunctionKeys resource to "false".
                          Tells xterm to use highlightTextColor and
-hm                       highlightColor to override the reversed foreground/
                          background colors in a selection. It sets the
                          highlightColorMode resource to "true".
                          Tells xterm not to use highlightTextColor and
+hm                       highlightColor to override the reversed foreground/
                          background colors in a selection. It sets the
                          highlightColorMode resource to "false".
                          Turn on the hold resource, i.e., xterm will not
                          immediately destroy its window when the shell command
-hold                     completes. It will wait until you use the window
                          manager to destroy/kill the window, or if you use the
                          menu entries that send a signal, e.g., HUP or KILL.
                          Turn off the hold resource, i.e., xterm will
+hold                     immediately destroy its window when the shell command
                          completes.
-ie                       Turn on the ptyInitialErase resource, i.e., use the
                          pseudo-terminal's sense of the stty erase value.
                          Turn off the ptyInitialErase resource, i.e., set the
+ie                       stty erase value using the kb string from the termcap
                          entry as a reference, if available.
                          Turn on the useInsertMode resource, which forces use
-im                       of insert mode by adding appropriate entries to the
                          TERMCAP environment variable.
+im                       Turn off the useInsertMode resource.
                          Given an X window identifier (an integer, which can
                          be hexadecimal, octal or decimal according to whether
-into windowId            it begins with "0x", "0" or neither), xterm will
                          reparent its top-level shell widget to that window.
                          This is used to embed xterm within other
                          applications.
                          This option indicates that xterm should do jump
                          scrolling. It corresponds to the jumpScroll resource.
                          Normally, text is scrolled one line at a time; this
                          option allows xterm to move multiple lines at a time
-j                        so that it does not fall as far behind. Its use is
                          strongly recommended since it makes xterm much faster
                          when scanning through large amounts of text. The
                          VT100 escape sequences for enabling and disabling
                          smooth scroll as well as the "VT Options" menu can be
                          used to turn this feature on or off.
+j                        This option indicates that xterm should not do jump
                          scrolling.
                          This option sets the allowC1Printable resource. When
-k8                       allowC1Printable is set, xterm overrides the mapping
                          of C1 control characters (code 128-159) to treat them
                          as printable.
+k8                       This option resets the allowC1Printable resource.
                          This option sets the keyboardType resource. Possible
                          values include: "unknown", "default", "hp", "sco", "
                          sun", "tcap" and "vt220".

                          The value "unknown", causes the corresponding
-kt keyboardtype          resource to be ignored.

                          The value "default", suppresses the associated
                          resources hpFunctionKeys, scoFunctionKeys,
                          sunFunctionKeys, tcapFunctionKeys and sunKeyboard,
                          using the Sun/PC keyboard layout.
                          Turn logging on. Normally logging is not supported,
                          due to security concerns. Some versions of xterm may
                          have logging enabled. The logfile is written to the
                          directory from which xterm is invoked. The file name
                          is generated, of the form


-l                        XtermLog.XXXXXX

                          or


                          Xterm.log.hostname.yyyy.mm.dd.hh.mm.ss.XXXXXX

                          ...depending on how xterm was built.
+l                        Turn logging off.
                          Turn on support of various encodings according to the
                          users' locale setting, i.e., LC_ALL, LC_CTYPE, or
                          LANG environment variables. This is achieved by
                          turning on UTF-8 mode and by invoking luit for
                          conversion between locale encodings and UTF-8. luit
                          is not invoked in UTF-8 locales. This corresponds to
-lc                       the locale resource.

                          The actual list of encodings that are supported is
                          determined by luit. Consult the luit manual page for
                          further details.

                          See also the -u8 option which supports UTF-8 locales.
                          Turn off support of automatic selection of locale
+lc                       encodings. Conventional 8bit mode or, in UTF-8
                          locales or with -u8 option, UTF-8 mode will be used.
                          File name for the encoding converter from/to locale
-lcc path                 encodings and UTF-8 that is used with -lc option or
                          locale resource. This corresponds to the localeFilter
                          resource.
                          Force scrollbar to the left side of VT100 screen.
-leftbar                  This is the default, unless you have set the
                          rightScrollBar resource.
-lf filename              Specify the log-filename. See the -l option.
                          This option indicates that the shell that is started
                          in the xterm window will be a login shell (i.e., the
                          first character of argv[0] will be a dash, indicating
                          to the shell that it should read the user's .login or
                          .profile).

                          The -ls flag and the loginShell resource are ignored
                          if -e is also given, because xterm does not know how
                          to make the shell start the given command after
                          whatever it does when it is a login shell; the user's
                          shell of choice need not be a Bourne shell after all.
                          Also, xterm -e is supposed to provide a consistent
-ls                       functionality for other applications that need to
                          start text-mode programs in a window, and if
                          loginShell were not ignored, the result of ~/.profile
                          might interfere with that.

                          If you do want the effect of -ls and -e
                          simultaneously, you may use something like


                          xterm -e /bin/bash -l -c "my command here"

                          Finally, -ls is not completely ignored, because xterm
                          -ls -e does write a /var/log/wtmp entry (if
                          configured to do so), whereas xterm -e does not.
                          This option indicates that xterm should ask the
                          window manager to maximize its layout on startup.
-maximized                This corresponds to the maximized resource.

                          Maximizing is not the reverse of iconifying; it is
                          possible to do both with certain window managers.
+maximized                This option indicates that xterm should ask the
                          window manager to maximize its layout on startup.
                          This option indicates that the shell that is started
+ls                       should not be a login shell (i.e., it will be a
                          normal "subshell").
                          This option indicates that xterm should ring a margin
-mb                       bell when the user types near the right end of a
                          line.
+mb                       This option indicates that margin bell should not be
                          rung.
-mc milliseconds          This option specifies the maximum time between
                          multi-click selections.
-mesg                     Turn off the messages resource, i.e., disallow write
                          access to the terminal.
+mesg                     Turn on the messages resource, i.e., allow write
                          access to the terminal.
                          Set the mkWidth resource to "true". This makes xterm
-mk_width                 use a built-in version of the wide-character width
                          calculation. The default is "false"
+mk_width                 Reset the mkWidth resource.
                          This option specifies the color to be used for the
-ms color                 pointer cursor. The default is to use the foreground
                          color. This sets the pointerColor resource.
                          This option specifies the number of characters from
-nb number                the right end of a line at which the margin bell, if
                          enabled, will ring. The default is "10".
-nul                      This option disables the display of underlining.
+nul                      This option enables the display of underlining.
-pc                       This option enables the PC-style use of bold colors
                          (see boldColors resource).
+pc                       This option disables the PC-style use of bold colors.
-pob                      This option indicates that the window should be
                          raised whenever a Control-G is received.
+pob                      This option indicates that the window should not be
                          raised whenever a Control-G is received.
-rightbar                 Force scrollbar to the right side of VT100 screen.
-rvc                      This option disables the display of characters with
                          reverse attribute as color.
+rvc                      This option enables the display of characters with
                          reverse attribute as color.
                          This option indicates that reverse-wraparound should
                          be allowed. This allows the cursor to back up from
                          the leftmost column of one line to the rightmost
-rw                       column of the previous line. This is very useful for
                          editing long shell command lines and is encouraged.
                          This option can be turned on and off from the "VT
                          Options" menu.
+rw                       This option indicates that reverse-wraparound should
                          not be allowed.
                          This option indicates that xterm may scroll
                          asynchronously, meaning that the screen does not have
                          to be kept completely up to date while scrolling.
-s                        This allows xterm to run faster when network
                          latencies are very high and is typically useful when
                          running across a very large intranet or many gateways
                          .
+s                        This option indicates that xterm should scroll
                          synchronously.
                          Does not send title and icon name change requests
                          when the request would have no effect: the name is
-samename                 not changed. This has the advantage of preventing
                          flicker and the disadvantage of requiring an extra
                          round trip to the server to find out the previous
                          value. In practice this should never be a problem.
+samename                 Always send title and icon name change requests.
                          This option indicates that some number of lines that
                          are scrolled off the top of the window should be
-sb                       saved and that a scrollbar should be displayed so
                          that those lines can be viewed. This option may be
                          turned on and off from the "VT Options" menu.
+sb                       This option indicates that a scrollbar should not be
                          displayed.
                          This option specifies the color to use for the
-selbg color              background of selected text. If not specified,
                          reverse video is used. See the discussion of the
                          highlightColor resource.
                          This option specifies the color to use for selected
-selfg color              text. If not specified, reverse video is used. See
                          the discussion of the highlightTextColor resource.
-sf                       This option indicates that Sun Function Key escape
                          codes should be generated for function keys.
+sf                       This option indicates that the standard escape codes
                          should be generated for function keys.
-sh number                Scale line-height values by the given number. See the
                          discussion of the scaleHeight resource.
                          This option indicates that output to a window should
-si                       not automatically reposition the screen to the bottom
                          of the scrolling region. This option can be turned on
                          and off from the "VT Options" menu.
+si                       This option indicates that output to a window should
                          cause it to scroll to the bottom.
                          This option indicates that pressing a key while using
                          the scrollbar to review previous lines of text should
-sk                       cause the window to be repositioned automatically in
                          the normal position at the bottom of the scroll
                          region.
                          This option indicates that pressing a key while using
+sk                       the scrollbar should not cause the window to be
                          repositioned.
                          This option specifies the number of lines to save
-sl number                that have been scrolled off the top of the screen.
                          This corresponds to the saveLines resource. The
                          default is "64".
                          This option, corresponding to the sessionMgt
-sm                       resource, indicates that xterm should set up session
                          manager callbacks.
+sm                       This option indicates that xterm should not set up
                          session manager callbacks.
                          This option indicates that Sun/PC keyboard should be
-sp                       assumed, providing mapping for keypad "+" to ",", and
                          Ctrl-F1 to F13, Ctrl-F2 to F14, etc.
+sp                       This option indicates that the standard escape codes
                          should be generated for keypad and function keys.
                          This option indicates that xterm should start in
                          Tektronix mode, rather than in VT102 mode. Switching
                          between the two windows is done using the "Options"
-t                        menus. Termcap entries that work with xterm are "
                          tek4014", "tek4015", "tek4012", "tek4013", "tek4010",
                          and "dumb". xterm automatically searches the termcap
                          file in this order for these entries and then sets
                          the "TERM" and the "TERMCAP" environment variables.
+t                        This option indicates that xterm should start in
                          VT102 mode.
                          This option, corresponding to the toolBar resource,
                          indicates that xterm should display a toolbar (or
-tb                       menubar) at the top of its window. The buttons in the
                          toolbar correspond to the popup menus, e.g., control/
                          left/mouse for "Main Options".
+tb                       This option indicates that xterm should not set up a
                          toolbar.
                          Specify the name used by xterm to select the correct
                          response to terminal ID queries. It also specifies
                          the emulation level, used to determine the type of
-ti term_id               response to a DA control sequence. Valid values
                          include vt52, vt100, vt101, vt102, and vt220 (the "vt
                          " is optional). The default is "vt100". The term_id
                          argument specifies the terminal ID to use. (This is
                          the same as the decTerminalID resource).
                          This option specifies a series of terminal setting
                          keywords followed by the characters that should be
-tm string                bound to those functions, similar to the stty
                          program. The keywords and their values are described
                          in detail in the ttyModes resource.
                          This option specifies the name of the terminal type
                          to be set in the TERM environment variable. It
                          corresponds to the termName resource. This terminal
-tn name                  type must exist in the terminal database (termcap or
                          terminfo, depending on how xterm is built) and should
                          have li# and co# entries. If the terminal type is not
                          found, xterm uses the built-in list "xterm", "vt102",
                          etc.
                          This option sets the utf8 resource. When utf8 is set,
                          xterm interprets incoming data as UTF-8. This sets
                          the wideChars resource as a side effect, but the
                          UTF-8 mode set by this option prevents it from being
                          turned off. If you must turn it on and off, use the
                          wideChars resource.

-u8                       This option and the utf8 resource are overridden by
                          the -lc and -en options and locale resource. That is,
                          if xterm has been compiled to support luit, and the
                          locale resource is not "false" this option is
                          ignored. We recommend using the -lc option or the "
                          locale: true" resource in UTF-8 locales when your
                          operating system supports locale, or -en UTF-8 option
                          or the "locale: UTF-8" resource when your operating
                          system does not support locale.
+u8                       This option resets the utf8 resource.
-uc                       This option makes the cursor underlined instead of a
                          box.
+uc                       This option makes the cursor a box instead of
                          underlined.
                          This option disables the display of characters with
-ulc                      underline attribute as color rather than with
                          underlining.
                          This option enables the display of characters with
+ulc                      underline attribute as color rather than with
                          underlining.
                          This option, corresponding to the italicULMode
-ulit                     resource, disables the display of characters with
                          underline attribute as italics rather than with
                          underlining.
                          This option, corresponding to the italicULMode
+ulit                     resource, enables the display of characters with
                          underline attribute as italics rather than with
                          underlining.
-ut                       This option indicates that xterm should not write a
                          record into the system utmp log file.
+ut                       This option indicates that xterm should write a
                          record into the system utmp log file.
                          This option indicates that a visual bell is preferred
-vb                       over an audible one. Instead of ringing the terminal
                          bell whenever a Control-G is received, the window
                          will be flashed.
+vb                       This option indicates that a visual bell should not
                          be used.
                          This option sets the wideChars resource. When
                          wideChars is set, xterm maintains internal structures
-wc                       for 16-bit characters. If you do not set this
                          resource to "true", xterm ignores the escape sequence
                          which turns UTF-8 mode on and off. The default is "
                          false".
+wc                       This option resets the wideChars resource.
                          This option indicates that xterm should wait for the
                          window to be mapped the first time before starting
-wf                       the subprocess so that the initial terminal size
                          settings and environment variables are correct. It is
                          the application's responsibility to catch subsequent
                          terminal size changes.
+wf                       This option indicates that xterm should not wait
                          before starting the subprocess.
                          Same as zIconBeep resource. If percent is non-zero,
                          xterms that produce output while iconified will cause
                          an XBell sound at the given volume and have "***"
-ziconbeep percent        prepended to their icon titles. Most window managers
                          will detect this change immediately, showing you
                          which window has the output. A similar feature was in
                          x10 xterm.
                          This option indicates that this window should receive
                          console output. This is not supported on all systems.
                          To obtain console output, you must be the owner of
                          the console device, and you must have read and write
-C                        permission for it. If you are running X under xdm on
                          the console screen you may need to have the session
                          startup and reset programs explicitly change the
                          ownership of the console device to get this option to
                          work.
                          This option allows xterm to be used as an input and
                          output channel for an existing program and is
                          sometimes used in specialized applications. The
                          option value specifies the last few letters of the
                          name of a pseudo-terminal to use in slave mode, plus
                          the number of the inherited file descriptor. If the
                          option contains a "/" character, that delimits the
                          characters used for the pseudo-terminal name from the
                          file descriptor. Otherwise, exactly two characters
                          are used from the option for the pseudo-terminal
                          name, the remainder is the file descriptor. Examples
-Sccn                     (the first two are equivalent since the descriptor
                          follows the last "/"):


                          -S/dev/pts/123/45-S123/45-Sab34

                          Note that xterm does not close any file descriptor
                          which it did not open for its own use. It is possible
                          (though probably not portable) to have an application
                          which passes an open file descriptor down to xterm
                          past the initialization or the -S option to a process
                          running in the xterm.

====The following command line arguments are provided for compatibility with older versions:====

%geom  This option specifies the preferred size and position of the Tektronix
       window. It is shorthand for specifying the "*tekGeometry" resource.
#geom  This option specifies the preferred position of the icon window. It is
       shorthand for specifying the "*iconGeometry" resource.
-T     This option specifies the title for xterm's windows. It is equivalent to
string -title.
       This option specifies the icon name for xterm's windows. It is shorthand
-n     for specifying the "*iconName" resource. Note that this is not the same
string as the toolkit option -name (see below). The default icon name is the
       application name.
-r     This option indicates that reverse video should be simulated by swapping
       the foreground and background colors. It is equivalent to -rv.
-w     This option specifies the width in pixels of the border surrounding the
number window. It is equivalent to -borderwidth or -bw.

===== The following standard X Toolkit command line arguments are commonly used with xterm: =====

               This option specifies the color to use for the border of the
-bd color      window. The corresponding resource name is borderColor. xterm
               uses the X Toolkit default, which is "XtDefaultForeground".
               This option specifies the color to use for the background of the
-bg color      window. The corresponding resource name is background. The
               default is "XtDefaultBackground".
               This option specifies the width in pixels of the border
               surrounding the window.

-bw number     This appears to be a legacy of older X releases. It sets the
               borderWidth resource of the shell widget, and may provide advice
               to your window manager to set the thickness of the window frame.
               Most window managers do not use this information. See the -b
               option, which controls the inner border of the xterm window.
-display       This option specifies the X server to contact. See the X
display        command.
               This option specifies the color to use for displaying text. The
-fg color      corresponding resource name is foreground. The default is "
               XtDefaultForeground".
               This option specifies the font to be used for displaying normal
-fn font       text. The corresponding resource name is font. The resource
               value default is fixed.
-font font     This is the same as -fn.
-geometry      This option specifies the preferred size and position of the
geometry       VT102 window.
               This option indicates that xterm should ask the window manager
-iconic        to start it as an icon rather than as the normal window. The
               corresponding resource name is iconic.
               This option specifies the application name under which resources
-name name     are to be obtained, rather than the default executable file
               name. Name should not contain "." or "*" characters.
               This option indicates that reverse video should be simulated by
-rv            swapping the foreground and background colors. The corresponding
               resource name is reverseVideo.
+rv            Disable the simulation of reverse video by swapping foreground
               and background colors.
               This option specifies the window title string, which may be
-title string  displayed by window managers if the user so chooses. The default
               title is the command line specified after the -e option, if any,
               otherwise the application name.
-xrm           This option specifies a resource string to be used. This is
resourcestring especially useful for setting resources that do not have
               separate command line options.

=== Resources ===

==== The program understands all of the core X Toolkit resource names and classes. ====
==== Application specific resources (e.g., "XTerm.NAME") are as follows: ====

    resource             class                       description
                                      Tie the VTxxx backarrowKey and
                                      ptyInitialErase resources together by
                                      setting the DECBKM state according to
ckarrowKeyIsErase BackarrowKeyIsErase whether the initial value of stty erase
                                      is a backspace (8) or delete (127)
                                      character. The default is "false", which
                                      disables this feature.
                                      Specifies whether or not xterm should ask
                                      the window manager to use a fullscreen
                                      layout on startup. xterm accepts either a
                                      keyword (ignoring case) or the number
                                      shown:


                                      keyword number          behavior
                                                     Fullscreen layout is not
                                      false   0      used initially, but may be
                                                     later via menu-selection
                                                     or control sequence.
                                                     Fullscreen layout is used
                                                     initially, but may be
fullscreen        Fullscreen          true    1      disabled later via
                                                     menu-selection or control
                                                     sequence.
                                                     Fullscreen layout is used
                                                     initially, and cannot be
                                      always  2      disabled later via
                                                     menu-selection or control
                                                     sequence.
                                                     Fullscreen layout is not
                                                     used, and cannot be
                                      never   3      enabled later via
                                                     menu-selection or control
                                                     sequence.

                                      The default is "false".
                                      If true, xterm does not immediately
                                      destroy its window when the shell command
                                      completes. It waits until you use the
                                      window manager to destroy/kill the
                                      window, or if you use the menu entries
hold              Hold                that send a signal, e.g., HUP or KILL.
                                      You may scroll back, select text, etc.,
                                      to perform most graphical operations.
                                      Resizing the display loses data, however,
                                      since this involves interaction with the
                                      shell that is no longer running.
                                      Specifies whether or not HP Function Key
                                      escape codes should be generated for
hpFunctionKeys    HpFunctionKeys      function keys instead of standard escape
                                      sequences. See also the keyboardType
                                      resource.
                                      Specifies the preferred size and position
iconGeometry      IconGeometry        of the application when iconified. It is
                                      not necessarily obeyed by all window
                                      managers.
iconName          IconName            Specifies the icon name. The default is
                                      the application name, e.g., "xterm".
                                      Enables one (or none) of the various
                                      keyboard-type resources: hpFunctionKeys,
                                      scoFunctionKeys, sunFunctionKeys,
                                      tcapFunctionKeys and sunKeyboard. The
                                      resource's value should be one of the
                                      corresponding strings "hp", "sco", "sun",
keyboardType      KeyboardType        "tcap" or "vt220". The individual
                                      resources are provided for legacy
                                      support; this resource is simpler to use.

                                      The default is "unknown", i.e., none of
                                      the associated resources are set via this
                                      resource.
                                      Specify the maximum size of the input
                                      buffer. The default is "32768". You
                                      cannot set this to a value less than the
                                      minBufSize resource. It will be increased
                                      as needed to make that value evenly
maxBufSize        MaxBufSize          divide this one.

                                      On some systems you may want to increase
                                      one or both of the maxBufSize and
                                      minBufSize resource values to achieve
                                      better performance if the operating
                                      system prefers larger buffer sizes.
                                      Specifies whether or not xterm should ask
maximized         Maximized           the window manager to maximize its layout
                                      on startup. The default is "false".
                                      Specifies whether write access to the
messages          Messages            terminal is allowed initially. See mesg.
                                      The default is "true".
                                      Specify the locale used for character-set
                                      computations when loading the popup
                                      menus. Use this to improve initialization
                                      performance of the Athena popup menus,
                                      which may load unnecessary (and very
                                      large) fonts, e.g., in a locale having
menuLocale        MenuLocale          UTF-8 encoding. The default is "C" (POSIX
                                      ).

                                      To use the current locale (only useful if
                                      you have localized the resource settings
                                      for the menu entries), set the resource
                                      to an empty string.
                                      Specify the minimum size of the input
                                      buffer, i.e., the amount of data that
minBufSize        MinBufSize          xterm requests on each read. The default
                                      is "4096". You cannot set this to a value
                                      less than 64.
                                      Selectively omit one or more parts of
                                      xterm's default translations at startup.
                                      The resource value is a comma-separated
                                      list of keywords, which may be
omitTranslation   OmitTranslation     abbreviated: "fullscreen", "scroll-lock",
                                      "shift-fonts" or "wheel-mouse". xterm
                                      also recognizes "default", but omitting
                                      that will make the program unusable
                                      unless you provide a similar definition
                                      in your resource settings.
                                      If true, xterm performs handshaking
                                      during initialization to ensure that the
                                      parent and child processes update the
                                      utmp and stty state.

ptyHandshake      PtyHandshake        See also waitForMap which waits for the
                                      pseudo-terminal's notion of the screen
                                      size, and ptySttySize which resets the
                                      screen size after other terminal
                                      initialization is complete. The default
                                      is "true".
                                      If "true", xterm uses the
                                      pseudo-terminal's sense of the stty erase
                                      value. If "false", xterm sets the stty
                                      erase value to match its own
                                      configuration, using the kb string from
ptyInitialErase   PtyInitialErase     the termcap entry as a reference, if
                                      available. In either case, the result is
                                      applied to the TERMCAP variable which
                                      xterm sets.

                                      See also the ttyModes resource, which may
                                      modify this. The default is "false".
                                      If "true", xterm resets the screen size
                                      after terminal initialization is
                                      complete. This is needed for some systems
                                      whose pseudo-terminals cannot propagate
                                      terminal characteristics. Where it is not
                                      needed, it can interfere with other
                                      methods for setting the intial screen
ptySttySize       PtySttySize         size, e.g., via window manager
                                      interaction.

                                      See also waitForMap which waits for a
                                      handshake-message giving the
                                      pseudo-terminal's notion of the screen
                                      size. The default is "false" on Linux and
                                      OS X systems, "true" otherwise.
                                      If the value of this resource is "true",
                                      xterm does not send title and icon name
                                      change requests when the request would
                                      have no effect: the name is not changed.
sameName          SameName            This has the advantage of preventing
                                      flicker and the disadvantage of requiring
                                      an extra round trip to the server to find
                                      out the previous value. In practice this
                                      should never be a problem. The default is
                                      "true".
                                      Scale line-height values by the resource
                                      value, which is limited to "0.9" to "1.5
                                      ". The default value is "1.0",

                                      While this resource applies to either
                                      bitmap or TrueType fonts, its main
                                      purpose is to help work around
                                      incompatible changes in the Xft library's
scaleHeight       ScaleHeight         font metrics. Xterm checks the font
                                      metrics to find what the library claims
                                      are the bounding boxes for each glyph
                                      (character). However, some of Xft's
                                      features (such as the autohinter) can
                                      cause the glyphs to be scaled larger than
                                      the bounding boxes, and be partly
                                      overwritten by the next row.

                                      See useClipping for a related resource.
                                      Specifies whether or not SCO Function Key
                                      escape codes should be generated for
scoFunctionKeys   ScoFunctionKeys     function keys instead of standard escape
                                      sequences.

                                      See also the keyboardType resource.
                                      If the value of this resource is "true",
sessionMgt        SessionMgt          xterm sets up session manager callbacks
                                      for XtNdieCallback and XtNsaveCallback.
                                      The default is "true".
                                      Specifies whether or not Sun Function Key
                                      escape codes should be generated for
sunFunctionKeys   SunFunctionKeys     function keys instead of standard escape
                                      sequences.

                                      See also the keyboardType resource.
                                      Specifies whether or not Sun/PC keyboard
                                      layout should be assumed rather than DEC
                                      VT220. This causes the keypad "+" to be
                                      mapped to ",". and Ctrl F1-F12 to
                                      F11-F20, depending on the setting of the
                                      ctrlFKeys resource. so xterm emulates a
                                      DEC VT220 more accurately. Otherwise,
                                      (the default, with sunKeyboard set to "
                                      false"), xterm uses PC-style bindings for
                                      the function keys and keypad.
sunKeyboard       SunKeyboard
                                      PC-style bindings use the Shift, Alt,
                                      Control and Meta keys as modifiers for
                                      function-keys and keypad. The PC-style
                                      bindings are analogous to PCTerm, but not
                                      the same thing. Normally these bindings
                                      do not conflict with the use of the Meta
                                      key as described for the eightBitInput
                                      resource. If they do, note that the
                                      PC-style bindings are evaluated first.

                                      See also the keyboardType resource.
                                      Specifies whether or not function key
                                      escape codes read from the termcap/
                                      terminfo entry should be generated for
tcapFunctionKeys  TcapFunctionKeys    function keys instead of standard escape
                                      sequences. The default is "false", i.e.,
                                      this feature is disabled.

                                      See also the keyboardType resource.
termName          TermName            Specifies the terminal type name to be
                                      set in the TERM environment variable.
                                      Specifies a string that may be used by
title             Title               the window manager when displaying this
                                      application.
                                      Specifies whether or not the toolbar
toolBar           ToolBar             should be displayed. The default is "true
                                      ".
                                      Specifies a string containing terminal
                                      setting keywords and the characters to
                                      which they may be bound. Allowable
                                      keywords include: brk, dsusp, eof, eol,
                                      eol2, erase, erase2, flush, intr, kill,
                                      lnext, quit, rprnt, start, status, stop,
                                      susp, swtch and weras. Control characters
                                      may be specified as ^char (e.g., ^c or ^u
                                      ) and ^? may be used to indicate delete (
                                      127). Use ^- to denote undef. Use \034 to
                                      represent ^\, since a literal backslash
                                      in an X resource escapes the next
ttyModes          TtyModes            character.

                                      This is very useful for overriding the
                                      default terminal settings without having
                                      to do an stty every time an xterm is
                                      started. Note, however, that the stty
                                      program on a given host may use different
                                      keywords; xterm's table is built-in.

                                      If the ttyModes resource specifies a
                                      value for erase, that overrides the
                                      ptyInitialErase resource setting, i.e.,
                                      xterm initializes the terminal to match
                                      that value.
                                      Force use of insert mode by adding
                                      appropriate entries to the TERMCAP
useInsertMode     UseInsertMode       environment variable. This is useful if
                                      the system termcap is broken. The default
                                      is "false".
                                      Specifies whether or not xterm should try
                                      to record the display identifier (display
utmpDisplayId     UtmpDisplayId       number and screen number), and the
                                      hostname in the system utmp log file. The
                                      default is "true".
                                      Specifies whether or not xterm should try
utmpInhibit       UtmpInhibit         to record the user's terminal in the
                                      system utmp log file. If true, xterm does
                                      not try. The default is "false".
                                      Specifies whether or not xterm should
                                      wait for the initial window map before
                                      starting the subprocess. This is part of
                                      the ptyHandshake logic. When xterm is
                                      directed to wait in this fashion, it
waitForMap        WaitForMap          passes the terminal size from the display
                                      end of the pseudo-terminal to the
                                      terminal I/O connection, e.g., according
                                      to the window manager. Otherwise, it uses
                                      the size as given in resource values or
                                      command-line option -geom. The default is
                                      "false".
                                      Same as -ziconbeep command line argument.
                                      If the value of this resource is
                                      non-zero, xterms that produce output
                                      while iconified causes an XBell sound at
zIconBeep         ZIconBeep           the given volume and have "***" prepended
                                      to their icon titles. Most window
                                      managers detects this change immediately,
                                      showing you which window has the output.
                                      A similar feature was in x10 xterm. The
                                      default is "false".

=== VT100 Widget Resources ===

==== The following resources are specified as part of the vt100 widget (class VT100). They are specified by patterns such as "XTerm.vt100.NAME". ====

If your xterm is configured to support the "toolbar", then those patterns need
an extra level for the form-widget which holds the toolbar and vt100 widget. A
wildcard between the top-level "XTerm" and the "vt100" widget makes the
resource settings work for either, e.g., "XTerm*vt100.NAME".

       resource                class                                     description
                                              Specifies whether or not active icon windows are to be used when
                                              the xterm window is iconified, if this feature is compiled into
                                              xterm. The active icon is a miniature representation of the
activeIcon             ActiveIcon             content of the window and updates as the content changes. Not all
                                              window managers necessarily support application icon windows.
                                              Some window managers allows you to enter keystrokes into the
                                              active icon window. The default is "false".
allowBoldFonts         AllowBoldFonts         When set to "false", xterm does not use bold fonts. This
                                              overrides both the alwaysBoldMode and the boldMode resources.
                                              If "true", overrides the mapping of C1 controls (codes 128-159)
allowC1Printable       AllowC1Printable       to make them be treated as if they were printable characters.
                                              Although this corresponds to no particular standard, some users
                                              insist it is a VT100. The default is "false".
                                              Specifies whether control sequences that set/query the dynamic
allowColorOps          AllowColorOps          colors should be allowed. ANSI colors are unaffected by this
                                              resource setting. The default is "true".
allowFontOps           AllowFontOps           Specifies whether control sequences that set/query the font
                                              should be allowed. The default is "false".
                                              Specifies whether control sequences that set/query the Scroll
                                              Lock key should be allowed, as well as whether the Scroll Lock
                                              key responds to user's keypress. The default is "false".

                                              When this feature is enabled, xterm will sense the state of the
                                              Scroll Lock key each time it acquires focus. Pressing the Scroll
                                              Lock key toggles xterm's internal state, and toggles the
                                              associated LED. While the Scroll Lock is active, xterm attempts
allowScrollLock        AllowScrollLock        to keep a viewport on the same set of lines. If the current
                                              viewport is scrolled past the limit set by the saveLines
                                              resource, then Scroll Lock has no further effect.

                                              The reason for setting the default to "false" is to avoid user
                                              surprise. This key is generally unused in keyboard
                                              configurations, and has not acquired a standard meaning even when
                                              it is used in that manner. Consequently, users have assigned it
                                              for ad hoc purposes.
                                              Specifies whether or not synthetic key and button events
                                              (generated using the X protocol SendEvent request) should be
allowSendEvents        AllowSendEvents        interpreted or discarded. The default is "false" meaning they are
                                              discarded. Note that allowing such events would create a very
                                              large security hole, therefore enabling this resource forcefully
                                              disables the allowXXXOps resources. The default is "false".
                                              Specifies whether control sequences that query the terminal's
                                              notion of its function-key strings, as termcap or terminfo
                                              capabilities should be allowed. The default is "false".

                                              A few programs, e.g., vim, use this feature to get an accurate
                                              description of the terminal's capabilities, independent of the
                                              termcap/terminfo setting:

allowTcapOps           AllowTcapOps           1. xterm can tell the querying program how many colors it
                                              supports. This is a constant, depending on how it is compiled,
                                              typically 16. It does not change if you alter resource settings,
                                              e.g., the boldColors resource.

                                              2. xterm can tell the querying program what strings are sent by
                                              modified (shift-, control-, alt-) function- and keypad-keys.
                                              Reporting control- and alt-modifiers is a feature that relies on
                                              the ncurses extended naming.
allowTitleOps          AllowTitleOps          Specifies whether control sequences that modify the window title
                                              or icon name should be allowed. The default is "true".
                                              Specifies whether extended window control sequences (as used in
                                              dtterm) should be allowed. These include several control
                                              sequences which manipulate the window size or position, and
allowWindowOps         AllowWindowOps         reporting these values and the title or icon name. Each of these
                                              can be abused in a script; curiously enough most terminal
                                              emulators that implement these restrict only a small part of the
                                              repertoire. For fine-tuning, see disallowedWindowOps. The default
                                              is "false".
                                              If "true", treat the Alt key as if it were the Meta-key. Your
                                              keyboard may happen to be configured so they are the same. But if
altIsNotMeta           AltIsNotMeta           they are not, this allows you to use the same prefix- and
                                              shifting operations with the Alt-key as with the Meta-key. See
                                              altSendsEscape and metaSendsEscape. The default is "false".
                                              This is an additional keyboard operation that may be processed
                                              after the logic for metaSendsEscape. It is only available if the
                                              altIsNotMeta resource is set.

                                              · If "true", Alt characters (a character combined with the
                                              modifier associated with left/right Alt-keys) are converted into
                                              a two- character sequence with the character itself preceded by
                                              Esc. This applies as well to function key control sequences,
altSendsEscape         AltSendsEscape         unless xterm sees that Alt is used in your key translations.

                                              · If "false", Alt characters input from the keyboard cause a
                                              shift to 8-bit characters (just like metaSendsEscape). By
                                              combining the Alt- and Meta-modifiers, you can create
                                              corresponding combinations of Esc-prefix and 8-bit characters.
                                              The default is "false".

                                              xterm provides a menu option for toggling this resource.
                                              Specifies whether xterm should check if the normal and bold fonts
                                              are distinct before deciding whether to use overstriking to
                                              simulate bold fonts. If this resource is "true", xterm does not
                                              make the check for distinct fonts when deciding how to handle the
                                              boldMode resource. The default is "false".


alwaysBoldMode         AlwaysBoldMode         boldMode alwaysBoldMode Comparison   Action
                                              false    false          ignored    use font
                                              false    true           ignored    use font
                                              true     false          same       overstrike
                                              true     false          different  use font
                                              true     true           ignored    overstrike

                                              As an alternative, setting the allowBoldFonts resource to "false"
                                              overrides both the alwaysBoldMode and the boldMode resources.
                                              Specifies whether or not xterm should always display a
                                              highlighted text cursor. By default (if this resource is "false
alwaysHighlight        AlwaysHighlight        "), a hollow text cursor is displayed whenever the pointer moves
                                              out of the window or the window loses the input focus. The
                                              default is "false".
                                              Override the numLock resource, telling xterm to use the Alt and
                                              Meta modifiers to construct parameters for function key sequences
alwaysUseMods          AlwaysUseMods          even if those modifiers appear in the translations resource.
                                              Normally xterm checks if Alt or Meta is used in a translation
                                              that would conflict with function key modifiers, and ignores
                                              these modifiers in that special case. The default is "false".
                                              Specifies the string that xterm sends in response to an ENQ
answerbackString       AnswerbackString       (control/E) character from the host. The default is a blank
                                              string, i.e., "". A hardware VT100 implements this feature as a
                                              setup option.
                                              If "true", the cursor keys are initially in application mode.
appcursorDefault       AppcursorDefault       This is the same as the VT102 private DECCKM mode, The default is
                                              "false".
appkeypadDefault       AppkeypadDefault       If "true", the keypad keys are initially in application mode. The
                                              default is "false".
autoWrap               AutoWrap               Specifies whether or not auto-wraparound should be enabled. This
                                              is the same as the VT102 DECAWM. The default is "true".
                                              Specifies whether or not the xterm uses a 50 millisecond timeout
awaitInput             AwaitInput             to await input (i.e., to support the Xaw3d arrow scrollbar). The
                                              default is "false".
                                              Specifies whether the backarrow key transmits a backspace (8) or
backarrowKey           BackarrowKey           delete (127) character. This corresponds to the DECBKM control
                                              sequence. The default (backspace) is "true". Pressing the control
                                              key toggles this behavior.
background             Background             Specifies the color to use for the background of the window. The
                                              default is "XtDefaultBackground".
bellIsUrgent           BellIsUrgent           Specifies whether to set the Urgency hint for the window manager
                                              when making a bell sound. The default is "false".
bellOnReset            BellOnReset            Specifies whether to sound a bell when doing a hard reset. The
                                              default is "true".
                                              Number of milliseconds after a bell command is sent during which
                                              additional bells will be suppressed. Default is 200. If set
bellSuppressTime       BellSuppressTime       non-zero, additional bells will also be suppressed until the
                                              server reports that processing of the first bell has been
                                              completed; this feature is most useful with the visible bell.
                                              Specifies whether to combine bold attribute with colors like the
boldColors             ColorMode              IBM PC, i.e., map colors 0 through 7 to colors 8 through 15.
                                              These normally are the brighter versions of the first 8 colors,
                                              hence bold. The default is "true".
                                              Specifies the name of the bold font to use instead of
                                              overstriking. There is no default for this resource.

                                              This font must be the same height and width as the normal font,
boldFont               BoldFont               otherwise it is ignored. If only one of the normal or bold fonts
                                              is specified, it will be used as the normal font and the bold
                                              font will be produced by overstriking this font.

                                              See also the discussion of boldMode and alwaysBoldMode resources.
                                              This specifies whether or not text with the bold attribute should
                                              be overstruck to simulate bold fonts if the resolved bold font is
                                              the same as the normal font. It may be desirable to disable bold
                                              fonts when color is being used for the bold attribute.

                                              Note that xterm has one bold font which you may set explicitly.
                                              xterm attempts to derive a bold font for the other font
                                              selections (font1 through font6). If it cannot find a bold font,
                                              it will use the normal font. In each case (whether the explicit
                                              resource or the derived font), if the normal and bold fonts are
                                              distinct, this resource has no effect. The default is "true".

                                              See the alwaysBoldMode resource which can modify the behavior of
                                              this resource.

                                              Although xterm attempts to derive a bold font for other font
                                              selections, the font server may not cooperate. Since X11R6,
                                              bitmap fonts have been scaled. The font server claims to provide
                                              the bold font that xterm requests, but the result is not always
boldMode               BoldMode               readable. XFree86 introduced a feature which can be used to
                                              suppress the scaling. In the X server's configuration file (e.g.,
                                              "/etc/X11/XFree86"), you can add ":unscaled" to the end of the
                                              directory specification for the "misc" fonts, which comprise the
                                              fixed-pitch fonts that are used by xterm. For example


                                              FontPath "/usr/lib/X11/fonts/misc/"

                                              would become


                                              FontPath "/usr/lib/X11/fonts/misc/:unscaled"

                                              Depending on your configuration, the font server may have its own
                                              configuration file. The same ":unscaled" can be added to its
                                              configuration file at the end of the directory specification for
                                              "misc".

                                              The bitmap scaling feature is also used by xterm to implement
                                              VT102 double-width and double-height characters.
                                              If true, xterm applies a workaround to ignore malformed control
brokenLinuxOSC         BrokenLinuxOSC         sequences that a Linux script might send. Compare the palette
                                              control sequences documented in console_codes with ECMA-48. The
                                              default is "true".
                                              If "true", xterm in 8-bit mode will interpret STRING selections
                                              as carrying text in the current locale's encoding. Normally
brokenSelections       BrokenSelections       STRING selections carry ISO-8859-1 encoded text. Setting this
                                              resource to "true" violates the ICCCM; it may, however, be useful
                                              for interacting with some broken X clients. The default is "false
                                              ".
                                              provides a work-around for some ISDN routers which start an
                                              application control string without completing it. Set this to "
                                              true" if xterm appears to freeze when connecting. The default is
                                              "false".

                                              xterm's state parser recognizes several types of control strings
                                              which can contain text, e.g.,

                                              APC (Application Program Command),

                                              DCS (Device Control String),

                                              OSC (Operating System Command),

                                              PM (Privacy Message), and

                                              SOS (Start of String)

                                              Each should end with a string-terminator (a special character
                                              which cannot appear in these strings). Ordinary control
                                              characters found within the string are not ignored; they are
                                              processed without interfering with the process of accumulating
                                              the control string's content. xterm recognizes these controls in
                                              all modes, although some of the functions may be suppressed after
                                              parsing the control.
brokenStringTerm       BrokenStringTerm
                                              When enabled, this feature allows the user to exit from an
                                              unterminated control string when any of these ordinary control
                                              characters are found:

                                              control/D (used as an end of file in many shells),

                                              control/H (backspace),

                                              control/I (tab-feed),

                                              control/J (line feed aka newline),

                                              control/K (vertical tab),

                                              control/L (form feed),

                                              control/M (carriage return),

                                              control/N (shift-out),

                                              control/O (shift-in),

                                              control/Q (XOFF),

                                              control/X (cancel)
                                              Specifies whether or not the VT102 DECCOLM escape sequence, used
c132                   C132                   to switch between 80 and 132 columns, should be honored. The
                                              default is "false".
cacheDoublesize        CacheDoublesize        Tells whether to cache double-sized fonts by xterm. Set this to
                                              zero to disable double-sized fonts altogether.
                                              Specifies comma-separated lists of character class bindings of
charClass              CharClass              the form [low-]high:value. These are used in determining which
                                              sets of characters should be treated the same when doing cut and
                                              paste. See the Character Classes section.
                                              Specifies whether xterm should follow the traditional East Asian
                                              width convention. When turned on, characters with East Asian
                                              Ambiguous (A) category in UTR 11 have a column width of 2. You
cjkWidth               CjkWidth               may have to set this option to "true" if you have some old East
                                              Asian terminal based programs that assume that line-drawing
                                              characters have a column width of 2. If this resource is "false",
                                              the mkWidth resource controls the choice between the system's
                                              wcwidth and xterm's built-in tables. The default is "false".
                                              These specify the colors for the ISO-6429 extension. The defaults
                                              are, respectively, black, red3, green3, yellow3, a customizable
color0 through color7  Color0 through Color7  dark blue, magenta3, cyan3, and gray90. The default shades of
                                              color are chosen to allow the colors 8-15 to be used as brighter
                                              versions.
                                              These specify the colors for the ISO-6429 extension if the bold
color8 through color15 Color8 through Color15 attribute is also enabled. The default resource values are
                                              respectively, gray30, red, green, yellow, a customizable light
                                              blue, magenta, cyan, and white.
                                              These specify the colors for the 256-color extension. The default
                                              resource values are for colors 16 through 231 to make a 6x6x6
                                              color cube, and colors 232 through 255 to make a grayscale ramp.

                                              Resources past color15 are available as a compile-time option.
                                              Due to a hardcoded limit in the X libraries on the total number
                                              of resources (to 400), the resources for 256-colors are omitted
color16 through        Color16 through        when wide-character support and luit are enabled. Besides
color255               Color255               inconsistent behavior if only part of the resources were allowed,
                                              determining the exact cutoff is difficult, and the X libraries
                                              tend to crash if the number of resources exceeds the limit. The
                                              color palette is still initialized to the same default values,
                                              and can be modified via control sequences.

                                              On the other hand, the resource limit does permit including the
                                              entire range for 88-colors.
                                              Specifies whether colorBD, colorBL, colorRV, and colorUL should
colorAttrMode          ColorAttrMode          override ANSI colors. If not, these are displayed only when no
                                              ANSI colors have been set for the corresponding position. The
                                              default is "false".
                                              This specifies the color to use to display bold characters if the
colorBD                ColorBD                "colorBDMode" resource is enabled. The default is "
                                              XtDefaultForeground".
                                              Specifies whether characters with the bold attribute should be
colorBDMode            ColorAttrMode          displayed in color or as bold characters. Note that setting
                                              colorMode off disables all colors, including bold. The default is
                                              "false".
                                              This specifies the color to use to display blink characters if
colorBL                ColorBL                the "colorBLMode" resource is enabled. The default is "
                                              XtDefaultForeground".
                                              Specifies whether characters with the blink attribute should be
colorBLMode            ColorAttrMode          displayed in color. Note that setting colorMode off disables all
                                              colors, including this. The default is "false".
colorMode              ColorMode              Specifies whether or not recognition of ANSI (ISO-6429) color
                                              change escape sequences should be enabled. The default is "true".
                                              This specifies the color to use to display reverse characters if
colorRV                ColorRV                the "colorRVMode" resource is enabled. The default is "
                                              XtDefaultForeground".
                                              Specifies whether characters with the reverse attribute should be
colorRVMode            ColorAttrMode          displayed in color. Note that setting colorMode off disables all
                                              colors, including this. The default is "false".
                                              This specifies the color to use to display underlined characters
colorUL                ColorUL                if the "colorULMode" resource is enabled. The default is "
                                              XtDefaultForeground".
                                              Specifies whether characters with the underline attribute should
colorULMode            ColorAttrMode          be displayed in color or as underlined characters. Note that
                                              setting colorMode off disables all colors, including underlining.
                                              The default is "false".
                                              Specifies the number of wide-characters which can be stored in a
combiningChars         CombiningChars         cell to overstrike (combine) with the base character of the cell.
                                              This can be set to values in the range 0 to 4. The default is "2
                                              ".
                                              In VT220 keyboard mode (see sunKeyboard resource), specifies the
                                              amount by which to shift F1-F12 given a control modifier (Ctrl).
ctrlFKeys              CtrlFKeys              This allows you to generate key symbols for F10-F20 on a Sun/PC
                                              keyboard. The default is "10", which means that Ctrl F1 generates
                                              the key symbol for F11.
                                              Specifies whether or not the last column bug in more should be
curses                 Curses                 worked around. See the -cu option for details. The default is "
                                              false".
cursorBlink            CursorBlink            Specifies whether to make the cursor blink. The default is "false
                                              ".
                                              Specifies the color to use for the text cursor. The default is "
                                              XtDefaultForeground". By default, xterm attempts to keep this
                                              color from being the same as the background color, since it draws
                                              the cursor by filling the background of a text cell. The same
cursorColor            CursorColor            restriction applies to control sequences which may change this
                                              color.

                                              Setting this resource overrides most of xterm's adjustments to
                                              cursor color. It will still use reverse-video to disallow some
                                              cases, such as a black cursor on a black background.
                                              Specifies the duration of the "off" part of the cursor blink
cursorOffTime          CursorOffTime          cycle-time in milliseconds. The same timer is used for text
                                              blinking. The default is "300".
                                              Specifies the duration of the "on" part of the cursor blink
cursorOnTime           CursorOnTime           cycle-time, in milliseconds. The same timer is used for text
                                              blinking. The default is "600".
                                              If "false", triple clicking to select a line does not include the
cutNewline             CutNewline             Newline at the end of the line. If "true", the Newline is
                                              selected. The default is "true".
cursorUnderLine        CursorUnderLine        Specifies whether to make the cursor underlined or a box. The
                                              default is "false".
                                              If "false", triple clicking to select a line selects only from
cutToBeginningOfLine   CutToBeginningOfLine   the current word forward. If "true", the entire line is selected.
                                              The default is "true".
                                              Specifies the emulation level (100=VT100, 220=VT220, etc.), used
decTerminalID          DecTerminalID          to determine the type of response to a DA control sequence.
                                              Leading non-digit characters are ignored, e.g., "vt100" and "100"
                                              are the same. The default is "100".
                                              Specify the character (or string) which xterm will substitute
                                              when pasted text includes a character which cannot be represented
                                              in the current encoding. For instance, pasting UTF-8 text into a
                                              display of ISO-8859-1 characters will only be able to display
defaultString          DefaultString          codes 0-255, while UTF-8 text can include Unicode values above
                                              255. The default is "#" (a single pound sign).

                                              If the undisplayable text would be double-width, xterm will add a
                                              space after the "#" character, to give roughly the same layout on
                                              the screen as the original text.
                                              Specifies whether the Delete key on the editing keypad should
deleteIsDEL            DeleteIsDEL            send DEL (127) or the VT220-style Remove escape sequence. The
                                              default is "false", for the latter.
                                              Specify which features will be disabled if allowColorOps is "
                                              false". This is a comma-separated list of names. The default
                                              value is "SetColor,GetColor,GetAnsiColor".

                                              The names are listed below. xterm ignores capitalization, but
                                              they are shown in mixed-case for clarity.
disallowedColorOps     DisallowedColorOps

                                              SetColor     Set a specific dynamic color.
                                              GetColor     Report the current setting of a given dynamic color.
                                                           Report the current setting of a given ANSI color
                                              GetAnsiColor (actually any of the colors set via ANSI-style
                                                           controls).

                                              Specify which features will be disabled if allowFontOps is "false
                                              ". This is a comma-separated list of names. The default value is
                                              "SetFont,GetFont".

                                              The names are listed below. xterm ignores capitalization, but
disallowedFontOps      DisallowedFontOps      they are shown in mixed-case for clarity.


                                              SetFont Set the specified font.
                                              GetFont Report the specified font.

                                              Specify which features will be disabled if allowTcapOps is "false
                                              ". This is a comma-separated list of names. The default value is
                                              "SetTcap,GetTcap".

                                              The names are listed below. xterm ignores capitalization, but
disallowedTcapOps      DisallowedTcapOps      they are shown in mixed-case for clarity.


                                              SetTcap (not implemented)
                                              GetTcap Report specified function- and other special keys.

                                              Specify which features will be disabled if allowWindowOps is "
                                              false". This is a comma-separated list of names, or (for the
                                              controls adapted from dtterm the operation number). The default
                                              value is "1,2,3,4,5,6,7,8,9,11, 13,14,18,19,20,21,GetSelection,
                                              SetSelection,SetWinLines,SetXprop" (i.e. no operations are
                                              allowed).

                                              The names are listed below. xterm ignores capitalization, but
                                              they are shown in mixed-case for clarity. Where a number can be
                                              used as an alternative, it is given after the name.


                                                 feature name    #                  description
                                              GetIconTitle       20 Report xterm window's icon label as a
                                                                    string.
                                              GetScreenSizeChars 19 Report the size of the screen in characters
                                                                    as numbers.
                                              GetSelection          Report selection data as a base64 string.
                                              GetWinPosition     13 Report xterm window position as numbers.
                                              GetWinSizeChars    18 Report the size of the text area in
                                                                    characters as numbers.
                                              GetWinSizePixels   14 Report xterm window in pixels as numbers.
                                              GetWinState        11 Report xterm window state as a number.
disallowedWindowOps    DisallowedWindowOps    GetWinTitle        21 Report xterm window's title as a string.
                                              LowerWin           6  Lower the xterm window to the bottom of the
                                                                    stacking order.
                                              MaximizeWin        9  Maximize window (i.e., resize to screen
                                                                    size).
                                              FullscreenWin      10 Use full screen (i.e., resize to screen
                                                                    size, without window decorations).
                                              MinimizeWin        2  Iconify window.
                                              PopTitle           23 Pop title from internal stack.
                                              PushTitle          22 Push title to internal stack.
                                              RaiseWin           5  Raise the xterm window to the front of the
                                                                    stacking order.
                                              RefreshWin         7  Refresh the xterm window.
                                              RestoreWin         1  De-iconify window.
                                              SetSelection          Set selection data.
                                              SetWinLines           Resize to a given number of lines, at least
                                                                    24.
                                              SetWinPosition     3  Move window to given coordinates.
                                              SetWinSizeChars    8  Resize the text area to given size in
                                                                    characters.
                                              SetWinSizePixels   4  Resize the xterm window to given size in
                                                                    pixels.
                                              SetXprop              Set X property on top-level window.

dynamicColors          DynamicColors          Specifies whether or not escape sequences to change colors
                                              assigned to different attributes are recognized.
                                              Specifies whether or not control sequences sent by the terminal
eightBitControl        EightBitControl        should be eight-bit characters or escape sequences. The default
                                              is "false".
                                              If "true", Meta characters (a single-byte character combined with
                                              the Meta modifier key) input from the keyboard are presented as a
                                              single character, modified according to the eightBitMeta
                                              resource. If "false", Meta characters are converted into a
                                              two-character sequence with the character itself preceded by Esc.
                                              The default is "true".

                                              The metaSendsEscape and altSendsEscape resources may override
                                              this feature. Generally keyboards do not have a key labeled
                                              "Meta", but "Alt" keys are common, and they are conventionally
                                              used for "Meta". If they were synonymous, it would have been
                                              reasonable to name this resource "altSendsEscape", reversing its
                                              sense. For more background on this, see the meta function in
                                              curses.

                                              Note that the Alt key is not necessarily the same as the Meta
                                              modifier. xmodmap lists your key modifiers. X defines modifiers
                                              for shift, (caps) lock and control, as well as 5 additional
                                              modifiers that are generally used to configure key modifiers.
                                              xterm inspects the same information to find the modifier
                                              associated with either Meta key (left or right), and uses that
                                              key as the Meta modifier. It also looks for the NumLock key, to
                                              recognize the modifier that is associated with that.

eightBitInput          EightBitInput          If your xmodmap configuration uses the same keycodes for Alt- and
                                              Meta-keys, xterm will only see the Alt-key definitions, since
                                              those are tested before Meta-keys. NumLock is tested first. It is
                                              important to keep these keys distinct; otherwise some of xterm's
                                              functionality is not available.

                                              The eightBitInput resource is tested at startup time. If "true",
                                              the xterm tries to put the terminal into 8-bit mode. If "false",
                                              on startup, xterm tries to put the terminal into 7-bit mode. For
                                              some configurations this is unsuccessful; failure is ignored.
                                              After startup, xterm does not change the terminal between 8-bit
                                              and 7-bit mode.

                                              As originally implemented in X11, the resource value did not
                                              change after startup. However (since patch #216 in 2006) xterm
                                              can modify eightBitInput after startup via a control sequence.
                                              The corresponding terminfo capabilities smm (set meta mode) and
                                              rmm (reset meta mode) have been recognized by bash for some time.
                                              Interestingly enough, bash's notion of "meta mode" differs from
                                              the standard definition (in the terminfo manual), which describes
                                              the change to the eighth bit of a character. It happens that bash
                                              views "meta mode" as the Esc character that xterm puts before a
                                              character when a special meta key is pressed. bash's early
                                              documentation talks about the Esc character and ignores the
                                              eighth bit.
                                              This controls the way xterm modifies the eighth bit of a
                                              single-byte key when the eightBitInput resource is set. The
                                              default is "locale".

                                              The resource value is a string, evaluated as a boolean after
                                              startup.


                                              false  The key is sent unmodified.
eightBitMeta           EightBitMeta           locale The key is modified only if the locale uses eight-bit
                                                     encoding.
                                              true   The key is sent modified.
                                              never  The key is always sent unmodified.

                                              Except for the never choice, xterm honors the terminfo
                                              capabilities smm (set meta mode) and rmm (reset meta mode),
                                              allowing the feature to be turned on or off dynamically.

                                              If eightBitMeta is enabled when the locale uses UTF-8, xterm
                                              encodes the value as UTF-8 (since patch #183 in 2003).
                                              Specifies whether or not eight-bit characters sent from the host
eightBitOutput         EightBitOutput         should be accepted as is or stripped when printed. The default is
                                              "true", which means that they are accepted as is.
                                              Override xterm's default selection target list (see Select/Paste)
eightBitSelectTypes    EightBitSelectTypes    for selections in normal (ISO-8859-1) mode. The default is an
                                              empty string, i.e., "", which does not override anything.
                                              Specify the pattern for scalable fonts selected from the FreeType
                                              library if support for that library was compiled into xterm.
                                              There is no default value.

                                              If not specified, or if there is no match for both normal and
                                              bold fonts, xterm uses the bitmap font and related resources.

                                              It is possible to select suitable bitmap fonts using a script
                                              such as this:

faceName               FaceName
                                              #!/bin/shFONT=`xfontsel -print`test -n "$FONT" && xfd -fn "$FONT"

                                              However (even though xfd accepts a "-fa" option to denote
                                              FreeType fonts), xfontsel has not been similarly extended. As a
                                              workaround, you may try


                                              fc-list :scalable=true:spacing=mono: family

                                              to find a list of scalable fixed-pitch fonts which may be used
                                              for the faceName resource value.
                                              Specify a double-width scalable font for cases where an
                                              application requires this, e.g., in CJK applications. There is no
                                              default value.
faceNameDoublesize     FaceNameDoublesize
                                              If the application uses double-wide characters and this resource
                                              is not given, xterm will use a scaled version of the font given
                                              by faceName.
                                              Specify the pointsize for fonts selected from the FreeType
                                              library if support for that library was compiled into xterm. The
                                              default is "14.0" On the VT Fonts menu, this corresponds to the
                                              Default entry.

                                              Although the default is "14.0", this may not be the same as the
                                              pointsize for the default bitmap font, i.e., that assigned with
                                              the -fn option, or the font resource. For example, the "fixed"
                                              font usually has a pointsize of "8.0". If you set faceSize to
                                              match the size of the bitmap font, then switching between bitmap
                                              and TrueType fonts via the font menu gives comparable sizes for
faceSize               FaceSize               the window.

                                              You can specify the pointsize for TrueType fonts selected with
                                              the other size-related menu entries, such as Medium, Huge, etc.,
                                              using one of the following resource values. If you do not specify
                                              a value, they default to "0.0", which causes xterm to use the
                                              ratio of font sizes from the corresponding bitmap font resources
                                              to obtain a TrueType pointsize.

                                              If all of the faceSize resources are set, then xterm uses this
                                              information to determine the next smaller/larger TrueType font
                                              for the larger-vt-font() and smaller-vt-font() actions. If any
                                              are not set, xterm uses only the areas of the bitmap fonts.
faceSize1              FaceSize1              Specifies the pointsize of the first alternative font.
faceSize               FaceSize2              Specifies the pointsize of the second alternative font.
faceSize3              FaceSize3              Specifies the pointsize of the third alternative font.
faceSize4              FaceSize4              Specifies the pointsize of the fourth alternative font.
faceSize5              FaceSize5              Specifies the pointsize of the fifth alternative font.
faceSize6              FaceSize6              Specifies the pointsize of the sixth alternative font.
                                              Specifies the name of the normal font. The default is "fixed".

                                              See the discussion of the locale resource, which describes how
                                              this font may be overridden.

                                              Note that some resource files use patterns such as


                                              *font: fixed

font                   Font                   ...which are overly broad, affecting both


                                              xterm.vt100.font

                                              and


                                              xterm.vt100.utf8Fonts.font

                                              ...which is probably not what you intended.
                                              Modifies the effect of jump scroll (jumpScroll) by suppressing
fastScroll             FastScroll             screen refreshes for the special case when output to the screen
                                              has completely shifted the contents off-screen. For instance, cat
                                              'ing a large file to the screen does this.
font1                  Font1                  Specifies the name of the first alternative font.
font2                  Font2                  Specifies the name of the second alternative font.
font3                  Font3                  Specifies the name of the third alternative font.
font4                  Font4                  Specifies the name of the fourth alternative font.
font5                  Font5                  Specifies the name of the fifth alternative font.
font6                  Font6                  Specifies the name of the sixth alternative font.
                                              Specifies whether xterm should attempt to use font scaling to
                                              draw double-sized characters. Some older font servers cannot do
fontDoublesize         FontDoublesize         this properly, will return misleading font metrics. The default
                                              is "true". If disabled, xterm will simulate double-sized
                                              characters by drawing normal characters with spaces between them.
                                              Specify whether xterm should report an error if it fails to load
                                              a font:


fontWarnings           FontWarnings           0 Never report an error (though the X libraries may).
                                              1 Report an error if the font name was given as a resource
                                                setting.
                                              2 Always report an error on failure to load a font.

                                              The default is "1".
                                              Specifies whether xterm should assume the normal and bold fonts
                                              have VT100 line-drawing characters:

                                              The fixed-pitch ISO-8859-*-encoded fonts used by xterm normally
                                              have the VT100 line-drawing glyphs in cells 1-31. Other
                                              fixed-pitch fonts may be more attractive, but lack these glyphs.

forceBoxChars          ForceBoxChars          When using an ISO-10646-1 font and the wideChars resource is
                                              true, xterm uses the Unicode glyphs which match the VT100
                                              line-drawing glyphs.

                                              If "false", xterm checks for missing glyphs in the font and makes
                                              line-drawing characters directly as needed. If "true", xterm
                                              assumes the font does not contain the line-drawing characters,
                                              and draws them directly. The default is "false".
                                              Specifies whether xterm should use the maximum or minimum glyph
forcePackedFont        ForcePackedFont        width when displaying using a bitmap font. Use the maximum width
                                              to help with proportional fonts. The default is "true", denoting
                                              the minimum width.
                                              Specifies the color to use for displaying text in the window.
foreground             Foreground             Setting the class name instead of the instance name is an easy
                                              way to have everything that would normally appear in the text
                                              color change color. The default is "XtDefaultForeground".
                                              Overrides the format of the escape sequence used to report
                                              modified keys with the modifyOtherKeys resource.

formatOtherKeys        FormatOtherKeys
                                              0 send modified keys as parameters for function-key 27 (default).
                                              1 send modified keys as parameters for CSI u.

                                              Specifies whether xterm should assume the bounding boxes for
                                              normal and bold fonts are compatible. If "false", xterm compares
freeBoldBox            FreeBoldBox            them and will reject choices of bold fonts that do not match the
                                              size of the normal font. The default is "false", which means that
                                              the comparison is performed.
geometry               Geometry               Specifies the preferred size and position of the VT102 window.
                                              There is no default for this resource.
                                              Specifies the color to use for the background of selected
highlightColor         HighlightColor         (highlighted) text. If not specified (i.e., matching the default
                                              foreground), reverse video is used. The default is "
                                              XtDefaultForeground".
                                              Specifies whether xterm should use highlightTextColor and
                                              highlightColor to override the reversed foreground/background
                                              colors in a selection. The default is unspecified: at startup,
                                              xterm checks if those resources are set to something other than
                                              the default foreground and background colors. Setting this
                                              resource disables the check.

                                              The following table shows the interaction of the highlighting
                                              resources, abbreviated as follows:

                                              HCM: highlightColorMode

                                              HR: highlightReverse

                                              HBG: highlightColor

                                              HFG: highlightTextColor


                                               HCM:    HR:   HBG:    HFG:   Highlight:
                                              false   false default default bg/fg
                                              false   false default set     bg/fg
highlightColorMode     HighlightColorMode     false   false set     default fg/HBG
                                              false   false set     set     fg/HBG
                                              false   true  default default bg/fg
                                              false   true  default set     bg/fg
                                              false   true  set     default fg/HBG
                                              false   true  set     set     fg/HBG
                                              true    false default default bg/fg
                                              true    false default set     HFG/fg
                                              true    false set     default bg/HBG
                                              true    false set     set     HFG/HBG
                                              true    true  default default fg/fg
                                              true    true  default set     HFG/fg
                                              true    true  set     default fg/HBG
                                              true    true  set     set     HFG/HBG
                                              default false default default bg/fg
                                              default false default set     bg/fg
                                              default false set     default fg/HBG
                                              default false set     set     HFG/HBG
                                              default true  default default bg/fg
                                              default true  default set     bg/fg
                                              default true  set     default fg/HBG
                                              default true  set     set     HFG/HBG

                                              Specifies whether xterm should reverse the selection foreground
                                              and background colors when selecting text with reverse-video
highlightReverse       HighlightReverse       attribute. This applies only to the highlightColor and
                                              highlightTextColor resources, e.g., to match the color scheme of
                                              xwsh. If "true", xterm reverses the colors, If "false", xterm
                                              does not reverse colors, The default is "true".
                                              If "false", selecting with the mouse highlights all positions on
                                              the screen between the beginning of the selection and the current
                                              position. If "true", xterm highlights only the positions that
                                              contain text that can be selected. The default is "false".

highlightSelection     HighlightSelection     Depending on the way your applications write to the screen, there
                                              may be trailing blanks on a line. xterm stores data as it is
                                              shown on the screen. Erasing the display changes the internal
                                              state of each cell so it is not considered a blank for the
                                              purpose of selection. Blanks written since the last erase are
                                              selectable. If you do not wish to have trailing blanks in a
                                              selection, use the trimSelection resource.
                                              Specifies the color to use for the foreground of selected
highlightTextColor     HighlightTextColor     (highlighted) text. If not specified (i.e., matching the default
                                              background), reverse video is used. The default is "
                                              XtDefaultBackground".
                                              Specifies whether to work around a bug in HP's xdb, which ignores
hpLowerleftBugCompat   HpLowerleftBugCompat   termcap and always sends Esc F to move to the lower left corner.
                                              "true" causes xterm to interpret Esc F as a request to move to
                                              the lower left corner of the screen. The default is "false".
                                              If false, xterm will not request the targets COMPOUND_TEXT or
i18nSelections         I18nSelections         TEXT. The default is "true". It may be set to false to work
                                              around ICCCM violations by other X clients.
                                              Specifies the border color for the active icon window if this
iconBorderColor        BorderColor            feature is compiled into xterm. Not all window managers will make
                                              the icon border visible.
                                              Specifies the border width for the active icon window if this
iconBorderWidth        BorderWidth            feature is compiled into xterm. The default is "2". Not all
                                              window managers will make the border visible.
iconFont               IconFont               Specifies the font for the miniature active icon window, if this
                                              feature is compiled into xterm. The default is "nil2".
                                              Specifies which of the VT100 fonts to use initially. Values are
initialFont            InitialFont            the same as for the set-vt-font action. The default is "d", i.e.,
                                              "default".
inputMethod            XtCInputMethod         Tells xterm which type of input method to use. There is no
                                              default method.
internalBorder         BorderWidth            Specifies the number of pixels between the characters and the
                                              window border. The default is "2".
                                              Specifies whether characters with the underline attribute should
italicULMode           ColorAttrMode          be displayed in an italic font or as underlined characters. It is
                                              implemented only for TrueType fonts.
                                              Specifies whether or not jump scroll should be used. This
jumpScroll             JumpScroll             corresponds to the VT102 DECSCLM private mode. The default is "
                                              true". See fastScroll for a variation.
                                              Specifies whether xterm will keep the selection even after the
keepSelection          KeepSelection          selected area was touched by some output to the terminal. The
                                              default is "true".
                                              Specifies the initial keyboard dialect, as well as the default
                                              value when the terminal is reset. The value given is the same as
keyboardDialect        KeyboardDialect        the final character in the control sequences which change
                                              character sets. The default is "B", which corresponds to US ASCII
                                              .
nameKeymap             NameKeymap             See the keymap() action.
limitResize            LimitResize            Limits resizing of the screen via control sequence to a given
                                              multiple of the display dimensions. The default is "1".
                                              Specifies how to use luit, an encoding converter between UTF-8
                                              and locale encodings. The resource value (ignoring case) may be:


                                                        xterm will use the encoding specified by the users'
                                                        LC_CTYPE locale (i.e., LC_ALL, LC_CTYPE, or LANG
                                              true      variables) as far as possible. This is realized by
                                                        always enabling UTF-8 mode and invoking luit in
                                                        non-UTF-8 locales.
                                                        xterm will follow users' LC_CTYPE locale only for
                                                        UTF-8, east Asian, and Thai locales, where the
                                              medium    encodings were not supported by conventional 8bit mode
                                                        with changing fonts. For other locales, xterm will use
                                                        conventional 8bit mode.
                                                        If mini-luit is compiled-in, xterm will check if a
                                                        Unicode font has been specified. If so, it checks if
                                                        the character encoding for the current locale is POSIX,
                                              checkfont Latin-1 or Latin-9, uses the appropriate mapping to
                                                        support those with the Unicode font. For other
                                                        encodings, xterm assumes that UTF-8 encoding is
locale                 Locale                           required.
                                                        xterm will use conventional 8bit mode or UTF-8 mode
                                                        according to utf8 resource or -u8 option.

                                              false     Any other value, e.g., "UTF-8" or "ISO8859-2", is
                                                        assumed to be an encoding name; luit will be invoked to
                                                        support the encoding. The actual list of supported
                                                        encodings depends on luit. The default is "medium".

                                              Regardless of your locale and encoding, you need an ISO-10646-1
                                              font to display the result. Your configuration may not include
                                              this font, or locale-support by xterm may not be needed. At
                                              startup, xterm uses a mechanism equivalent to the load-vt-fonts
                                              (utf8Fonts, Utf8Fonts) action to load font name subresources of
                                              the VT100 widget. That is, resource patterns such as "
                                              *vt100.utf8Fonts.font" will be loaded, and (if this resource is
                                              enabled), override the normal fonts. If no subresources are
                                              found, the normal fonts such as "*vt100.font", etc., are used.
                                              The resource files distributed with xterm use ISO-10646-1 fonts,
                                              but do not rely on them unless you are using the locale
                                              mechanism.
                                              Specifies the file name for the encoding converter from/to locale
                                              encodings and UTF-8 that is used with the -lc option or locale
                                              resource. The help message shown by "xterm -help" lists the
                                              default value, which depends on your system configuration.

                                              If the encoding converter requires command-line parameters, you
localeFilter           LocaleFilter           can add those after the command, e.g.,


                                              *localeFilter: xterm-filter -p

                                              Alternatively, you may put those parameter within a shell script
                                              to execute the converter, and set this resource to point to the
                                              shell script.
loginShell             LoginShell             Specifies whether or not the shell to be run in the window should
                                              be started as a login shell. The default is "false".
marginBell             MarginBell             Specifies whether or not the bell should be rung when the user
                                              types near the right margin. The default is "false".
                                              If "true", Meta characters (a character combined with the Meta
                                              modifier key) are converted into a two-character sequence with
                                              the character itself preceded by Esc. This applies as well to
metaSendsEscape        MetaSendsEscape        function key control sequences, unless xterm sees that Meta is
                                              used in your key translations. If "false", Meta characters input
                                              from the keyboard are handled according to the eightBitInput
                                              resource. The default is "false".
                                              If mkSampleSize is nonzero, and mkWidth (and cjkWidth) are false,
                                              on startup xterm compares its built-in tables to the system's
mkSamplePass           MkSamplePass           wide character width data to decide if it will use the system's
                                              data. It tests the first mkSampleSize character values, and
                                              allows up to mkSamplePass mismatches before the test fails. The
                                              default (for the allowed number of mismatches) is 256.
                                              With mkSamplePass, this specifies a startup test used for
mkSampleSize           MkSampleSize           initializing wide character width calculations. The default
                                              (number of characters to check) is 1024.
                                              Specifies whether xterm should use a built-in version of the wide
                                              character width calculation. See also the cjkWidth resource which
                                              can override this. The default is "false".

                                              Here is a summary of the resources which control the choice of
                                              wide character width calculation:
mkWidth                MkWidth

                                              cjkWidth: mkWidth:                  Action:
                                              false     false    use system tables subject to mkSamplePass
                                              false     true     use built-in tables
                                              true      false    use built-in CJK tables
                                              true      true     use built-in CJK tables

                                              Tells how to handle the special case where Control-, Shift-, Alt-
                                              or Meta-modifiers are used to add a parameter to the escape
                                              sequence returned by a cursor-key. The default is "2": Set it to
                                              -1 to disable it.

                                              Set it to 0 to use the old/obsolete behavior.
modifyCursorKeys       ModifyCursorKeys
                                              Set it to 1 to prefix modified sequences with CSI.

                                              Set it to 2 to force the modifier to be the second parameter if
                                              it would otherwise be the first.

                                              Set it to 3 to mark the sequence with a ">" to hint that it is
                                              private.
                                              Tells how to handle the special case where Control-, Shift-, Alt-
                                              or Meta-modifiers are used to add a parameter to the escape
                                              sequence returned by a (numbered) function-key. The default is "2
                                              ". The resource values are similar to modifyCursorKeys:

                                              Set it to -1 to permit the user to use shift- and
                                              control-modifiers to construct function-key strings using the
                                              normal encoding scheme.

                                              Set it to 0 to use the old/obsolete behavior.

                                              Set it to 1 to prefix modified sequences with CSI.

                                              Set it to 2 to force the modifier to be the second parameter if
                                              it would otherwise be the first.

                                              Set it to 3 to mark the sequence with a ">" to hint that it is
modifyFunctionKeys     ModifyFunctionKeys     private.

                                              If modifyFunctionKeys is zero, xterm uses Control- and
                                              Shift-modifiers to allow the user to construct numbered
                                              function-keys beyond the set provided by the keyboard:


                                              Control      adds the value given by the ctrlFKeys resource.
                                              Shift        adds twice the value given by the ctrlFKeys
                                                           resource.
                                              Control/     adds three times the value given by the ctrlFKeys
                                              Shift        resource.

                                              As a special case, legacy (when oldFunctionKeys is true) or vt220
                                              (when sunKeyboard is true) keyboards interpret only the
                                              Control-modifier when constructing numbered function-keys. This
                                              is done to provide compatible keyboards for DEC VT220 and related
                                              terminals that implement user-defined keys (UDK).
                                              Like modifyCursorKeys, tells xterm to construct an escape
                                              sequence for other keys (such as "2") when modified by Control-,
                                              Alt- or Meta- modifiers. This feature does not apply to function
                                              keys and well-defined keys such as Esc or the control keys. The
                                              default is "0":

modifyOtherKeys        ModifyOtherKeys
                                              0 disables this feature.
                                                enables this feature for keys except for those with well-known
                                              1 behavior, e.g., Tab, Backarrow and some special control
                                                character cases, e.g., Control-Space to make a NUL.
                                              2 enables this feature for keys including the exceptions listed.

multiClickTime         MultiClickTime         Specifies the maximum time in milliseconds between multi-click
                                              select events. The default is "250" milliseconds.
multiScroll            MultiScroll            Specifies whether or not scrolling should be done asynchronously.
                                              The default is "false".
                                              Specifies the number of characters from the right margin at which
nMarginBell            Column                 the margin bell should be rung, when enabled by the marginBell
                                              resource. The default is "10".
                                              If "true", xterm checks if NumLock is used as a modifier. If so,
                                              this modifier is used to simplify the logic when implementing
numLock                NumLock                special NumLock for the sunKeyboard resource. Also (when
                                              sunKeyboard is "false"), similar logic is used to find the
                                              modifier associated with the left and right Alt keys. The default
                                              is "true".
                                              If "true", xterm will use old-style control sequences for
oldXtermFKeys          OldXtermFKeys          function keys F1 to F4, for compatibility with X Consortium xterm
                                              . Otherwise, it uses the VT100-style codes for PF1 to PF4. The
                                              default is "false".
                                              Specify selection behavior in response to multiple mouse clicks.
                                              A single mouse click is always interpreted as described in the
                                              Selection section (see Pointer Usage). Multiple mouse clicks
                                              (using the button which activates the select-start action) are
                                              interpreted according to the resource values of on2Clicks, etc.
                                              The resource value can be one of these:


                                              word  Select a "word" as determined by the charClass resource.
                                                    See the Character Classes section.
                                              line  Select a line (counting wrapping).
                                                    Select a group of adjacent lines (counting wrapping). The
                                              group selection stops on a blank line, and does not extend
on2Clicks through      On2Clicks through            outside the current page.
on5Clicks              On5Clicks              page  Select all visible lines, i.e., the page.
                                              all   Select all lines, i.e., including the saved lines.
                                              regex Select a "word" as determined by the regular expression
                                                    which follows in the resource value.
                                                    No selection action is associated with this resource. The
                                              none  xterm command interprets it as the end of the list. For
                                                    example, you may use it to disable triple (and higher)
                                                    clicking by setting on3Clicks to "none".

                                              The default values for on2Clicks and on3Clicks are "word" and "
                                              line", respectively. There is no default value for on4Clicks or
                                              on5Clicks, making those inactive. On startup, xterm determines
                                              the maximum number of clicks by the onXClicks resource values
                                              that are set.
openIm                 XtCOpenIm              Tells xterm whether to open the input method at startup. The
                                              default is "true".
pointerColor           PointerColor           Specifies the foreground color of the pointer. The default is "
                                              XtDefaultForeground".
pointerColorBackground PointerColorBackground Specifies the background color of the pointer. The default is "
                                              XtDefaultBackground".
                                              Specifies when the pointer may be hidden as the user types. It
                                              will be redisplayed if the user moves the mouse, or clicks one of
                                              its buttons:

pointerMode            PointerMode
                                              0 never.
                                              1 the application running in xterm has not activated mouse mode.
                                                This is the default.
                                              2 always.

pointerShape           Cursor                 Specifies the name of the shape of the pointer. The default is "
                                              xterm".
                                              Specifies whether the window would be raised when Control-G is
                                              received. The default is "false".
popOnBell              PopOnBell
                                              If the window is iconified, this has no effect. However, the
                                              zIconBeep resource provides you with the ability to see which
                                              iconified windows have sounded a bell.
preeditType            XtCPreeditType         Tells xterm which types of preedit (preconversion) string to
                                              display. The default is "OverTheSpot,Root".
                                              Specifies whether to print graphic attributes along with the
                                              text. A real DEC VTxxx terminal will print the underline,
                                              highlighting codes but your printer may not handle these.

                                              "0" disables the attributes.
printAttributes        PrintAttributes
                                              "1" prints the normal set of attributes (bold, underline, inverse
                                              and blink) as VT100-style control sequences.

                                              "2" prints ANSI color attributes as well.

                                              The default is "1".
                                              When the print-immediate action is invoked, xterm prints the
                                              screen contents directly to a file. Set this resource to the
                                              prefix of the file name (a timestamp will be appended to the
printFileImmediate     PrintFileImmediate     actual name).

                                              The default is an empty string, i.e., "", However, when the
                                              print-immediate action is invoked, if the string is empty, then "
                                              XTerm" is used.
                                              If xterm exits with an X error, e.g., your connection is broken
                                              when the server crashes, it can be told to write the contents of
                                              the screen to a file. To enable the feature, set this resource to
                                              the prefix of the file name (a timestamp will be appended to the
                                              actual name).
printFileOnXError      PrintFileOnXError
                                              The default is an empty string, i.e., "", which disables this
                                              feature. However, when the print-on-error action is invoked, if
                                              the string is empty, then "XTermError" is used.

                                              These error codes are handled: ERROR_XERROR, ERROR_XIOERROR and
                                              ERROR_ICEERROR.
                                              When the print-immediate action is invoked, xterm prints the
                                              screen contents directly to a file. You can use the
printModeImmediate     PrintModeImmediate     printModeImmediate resource to tell it to use escape sequences to
                                              reconstruct the video attributes and colors. This uses the same
                                              values as the printAttributes resource. The default is "0".
                                              xterm implements the printFileOnXError feature using the printer
                                              feature, although the output is written directly to a file. You
printModeOnXError      PrintModeOnXError      can use the printModeOnXError resource to tell it to use escape
                                              sequences to reconstruct the video attributes and colors. This
                                              uses the same values as the printAttributes resource. The default
                                              is "0".
                                              Specify the range of text that is printed to a file when the
                                              print-immediately action is invoked.

                                              · If zero (0), then this selects the current (visible screen)
                                              plus the saved lines, except if the alternate screen is being
                                              used. In that case, only the alternate screen is selectd.

                                              · If nonzero, the bits of this resource value (checked in
                                              descending order) select the range:

printOptsImmediate     PrintOptsImmediate     8 selects the saved lines.

                                              4 selects the alternate screen.

                                              2 selects the normal screen.

                                              1 selects the current screen, which can be either the normal or
                                              alternate screen.

                                              The default is "9", which selects the current visible screen plus
                                              saved lines, with no special case for the alternated screen.
                                              Specify the range of text that is printed to a file when the
                                              print-on-error action is invoked. The resource value is
printOptsOnXError      PrintOptsOnXError      interpreted the same as in printOptsImmediate.

                                              The default is "9", which selects the current visible screen plus
                                              saved lines, with no special case for the alternated screen.
                                              If "true", xterm will close the printer (a pipe) when the
printerAutoClose       PrinterAutoClose       application switches the printer offline with a Media Copy
                                              command. The default is "false".
                                              Specifies a shell command to which xterm will open a pipe when
printerCommand         PrinterCommand         the first MC (Media Copy) command is initiated. The default is an
                                              empty string, i.e., "". If the resource value is given as an
                                              empty string, the printer is disabled.
                                              Specifies the printer control mode. A "1" selects autoprint mode,
                                              which causes xterm to print a line from the screen when you move
printerControlMode     PrinterControlMode     the cursor off that line with a line feed, form feed or vertical
                                              tab character, or an autowrap occurs. Autoprint mode is
                                              overridden by printer controller mode (a "2"), which causes all
                                              of the output to be directed to the printer. The default is "0".
                                              Controls whether a print page function will print the entire page
printerExtent          PrinterExtent          (true), or only the portion within the scrolling margins (false).
                                              The default is "false".
printerFormFeed        PrinterFormFeed        Controls whether a form feed is sent to the printer at the end of
                                              a print page function. The default is "false".
printerNewLine         PrinterNewLine         Controls whether a newline is sent to the printer at the end of a
                                              print page function. The default is "true".
                                              Controls whether the cursor is repainted when NotifyGrab and
quietGrab              QuietGrab              NotifyUngrab event types are received during change of focus. The
                                              default is "false".
                                              If xterm is built with the Xft library, this controls whether the
                                              faceName resource is used. The default is "default".

                                              The resource values are strings, evaluated as booleans after
                                              startup.


                                              false   disable the feature and use the normal (bitmap) font.
                                                      startup using the TrueType font specified by the faceName
                                                      and faceSize resource settings. If there is no value for
                                                      faceName, disable the feature and use the normal (bitmap)
                                              true    font.
renderFont             RenderFont
                                                      After startup, you can still switch to/from the bitmap
                                                      font using the "TrueType Fonts" menu entry.
                                                      startup using the normal (bitmap) font, but enable the
                                                      "TrueType Fonts" menu entry to allow runtime switching to
                                                      /from TrueType fonts.

                                              default If there is no faceName resource set, then runtime
                                                      switching to TrueType fonts is disabled. xterm has a
                                                      separate compiled-in value for faceName for the special
                                                      case where renderFont is "default". That is normally "
                                                      mono".

                                              Affects the behavior when the window is resized to be taller or
                                              shorter. NorthWest specifies that the top line of text on the
                                              screen stay fixed. If the window is made shorter, lines are
                                              dropped from the bottom; if the window is made taller, blank
resizeGravity          ResizeGravity          lines are added at the bottom. This is compatible with the
                                              behavior in R4. SouthWest (the default) specifies that the bottom
                                              line of text on the screen stay fixed. If the window is made
                                              taller, additional saved lines will be scrolled down onto the
                                              screen; if the window is made shorter, lines will be scrolled off
                                              the top of the screen, and the top saved lines will be dropped.
                                              Tells xterm how many times to retry, in case the input-method
                                              server is not responding. This is a different issue than
retryInputMethod       XtCRetryInputMethod    unsupported preedit type, etc. You may encounter retries if your
                                              X configuration (and its libraries) are missing pieces. Setting
                                              this resource to zero "0" will cancel the retrying. The default
                                              is "3".
                                              Specifies whether or not reverse video should be simulated. The
                                              default is "false".

                                              There are several aspects to reverse video in xterm:

                                              · The command-line -rv option tells the X libraries to reverse
                                              the foreground and background colors. xterm's command-line
                                              options set resource values. In particular, the X Toolkit sets
                                              the reverseVideo resource when the -rv option is used.

                                              · If the user has also used command-line options -fg or -bg to
                                              set the foreground and background colors, xterm does not see
                                              these options directly. Instead, it examines the resource values
                                              to reconstruct the command-line options, and determine which of
                                              the colors is the user's intended foreground, etc. Their actual
                                              values are irrelevant to the reverse video function; some users
                                              prefer the X defaults (black text on a white background), others
                                              prefer white text on a black background.

                                              · After startup, the user can toggle the "Enable Reverse Video"
reverseVideo           ReverseVideo           menu entry. This exchanges the current foreground and background
                                              colors of the VT100 widget, and repaints the screen. Because of
                                              the X resource hierarchy, the reverseVideo resource applies to
                                              more than the VT100 widget.

                                              Programs running in an xterm can also use control sequences to
                                              enable the VT100 reverse video mode. These are independent of the
                                              reverseVideo resource and the menu entry. xterm exchanges the
                                              current foreground and background colors when drawing text
                                              affected by these control sequences.

                                              Other control sequences can alter the foreground and background
                                              colors that are used:

                                              · Programs can also use the ANSI color control sequences to set
                                              the foreground and background colors.

                                              · Extensions to the ANSI color controls (such as 16-, 88- or
                                              256-colors) are treated similarly to the ANSI control.

                                              · Using other control sequences (the "dynamic colors" feature), a
                                              program can change the foreground and background colors.
                                              Specifies whether or not reverse-wraparound should be enabled.
reverseWrap            ReverseWrap            This corresponds to xterm's private mode 45. The default is "
                                              false".
rightScrollBar         RightScrollBar         Specifies whether or not the scrollbar should be displayed on the
                                              right rather than the left. The default is "false".
saveLines              SaveLines              Specifies the number of lines to save beyond the top of the
                                              screen when a scrollbar is turned on. The default is "64".
scrollBar              ScrollBar              Specifies whether or not the scrollbar should be displayed. The
                                              default is "false".
                                              Specifies the width of the scrollbar border. Note that this is
scrollBarBorder        ScrollBarBorder        drawn to overlap the border of the xterm window. Modifying the
                                              scrollbar's border affects only the line between the VT100 widget
                                              and the scrollbar. The default value is 1.
                                              Specifies whether or not pressing a key should automatically
scrollKey              ScrollCond             cause the scrollbar to go to the bottom of the scrolling region.
                                              This corresponds to xterm's private mode 1011. The default is "
                                              false".
                                              Specifies the number of lines that the scroll-back and
scrollLines            ScrollLines            scroll-forw actions should use as a default. The default value is
                                              1.
                                              Specifies whether or not output to the terminal should
scrollTtyOutput        ScrollCond             automatically cause the scrollbar to go to the bottom of the
                                              scrolling region. The default is "true".
                                              Tells xterm whether to use the PRIMARY or CLIPBOARD for SELECT
                                              tokens in the selection mechanism. The set-select action can
selectToClipboard      SelectToClipboard      change this at runtime, allowing the user to work with programs
                                              that handle only one of these mechanisms. The default is "false",
                                              which tells it to use PRIMARY.
                                              Specifies whether to enable the actions larger-vt-font() and
shiftFonts             ShiftFonts             smaller-vt-font(), which are normally bound to the shifted KP_Add
                                              and KP_Subtract. The default is "true".
                                              Tells xterm whether to display text with blink-attribute the same
showBlinkAsBold        ShowBlinkAsBold        as bold. If xterm has not been configured to support blinking
                                              text, the default is "true", which corresponds to older versions
                                              of xterm, otherwise the default is "false".
                                              Tells xterm whether to display a box outlining places where a
showMissingGlyphs      ShowMissingGlyphs      character has been used that the font does not represent. The
                                              default is "false".
                                              For debugging xterm and applications that may manipulate the
showWrapMarks          ShowWrapMarks          wrapped-line flag by writing text at the right margin, show a
                                              mark on the right inner-border of the window. The mark shows
                                              which lines have the flag set.
                                              Specifies whether or not the entries in the "Main Options" menu
signalInhibit          SignalInhibit          for sending signals to xterm should be disallowed. The default is
                                              "false".
tekGeometry            Geometry               Specifies the preferred size and position of the Tektronix
                                              window. There is no default for this resource.
tekInhibit             TekInhibit             Specifies whether or not the escape sequence to enter Tektronix
                                              mode should be ignored. The default is "false".
                                              Specifies whether or not the Tektronix mode window should start
tekSmall               TekSmall               in its smallest size if no explicit geometry is given. This is
                                              useful when running xterm on displays with small screens. The
                                              default is "false".
tekStartup             TekStartup             Specifies whether or not xterm should start up in Tektronix mode.
                                              The default is "false".
                                              Specifies whether xterm should scroll to a new page when
                                              processing the ti termcap entry, i.e., the private modes 47, 1047
                                              or 1049. This is only in effect if titeInhibit is "true", because
tiXtraScroll           TiXtraScroll           the intent of this option is to provide a picture of the
                                              full-screen application's display on the scrollback without
                                              wiping out the text that would be shown before the application
                                              was initialized. The default for this resource is "false".
                                              Specifies whether or not xterm should remove ti and te termcap
                                              entries (used to switch between alternate screens on startup of
                                              many screen-oriented programs) from the TERMCAP string. If set,
titeInhibit            TiteInhibit            xterm also ignores the escape sequence to switch to the alternate
                                              screen. xterm supports terminfo in a different way, supporting
                                              composite control sequences (also known as private modes) 1047,
                                              1048 and 1049 which have the same effect as the original 47
                                              control sequence. The default for this resource is "false".
                                              Tells xterm whether to accept or return window- and icon-labels
                                              in ISO-8859-1 (the default) or UTF-8. Either can be encoded in
                                              hexadecimal. The default for this resource is "0".

                                              Each bit (bit "0" is 1, bit "1" is 2, etc.) corresponds to one of
                                              the parameters set by the title modes control sequence:
titleModes             TitleModes

                                              0 Set window/icon labels using hexadecimal
                                              1 Query window/icon labels using hexadecimal
                                              2 Set window/icon labels using UTF-8 (overrides utf8Titles
                                                resource).
                                              3 Query window/icon labels using UTF-8

                                              Specifies the key and button bindings for menus, selections,
translations           Translations           "programmed strings", etc. The translations resource, which
                                              provides much of xterm's configurability, is a feature of the X
                                              Toolkit Intrinsics library (Xt). See the Actions section.
                                              If you set highlightSelection, you can see the text that is
                                              selected, including any trailing spaces. Clearing the screen (or
                                              a line) resets it to a state containing no spaces. Some lines may
                                              contain trailing spaces when an application writes them to the
trimSelection          TrimSelection          screen. However, you may not wish to paste lines with trailing
                                              spaces. If this resource is true, xterm will trim trailing spaces
                                              from text that is selected. It does not affect spaces which
                                              result in a wrapped line, nor will it trim the trailing newline
                                              from your selection. The default is "false".
                                              This specifies whether or not text with the underline attribute
underLine              UnderLine              should be underlined. It may be desirable to disable underlining
                                              when color is being used for the underline attribute. The default
                                              is "true".
                                              Tell xterm whether to use clipping to keep from producing dots
useClipping            UseClipping            outside the text drawing area. Originally used to work around for
                                              overstriking effects, this is also needed to work with some
                                              incorrectly-sized fonts. The default is "true".
                                              This specifies whether xterm will run in UTF-8 mode. If you set
                                              this resource, xterm also sets the wideChars resource as a
                                              side-effect. The resource can be set via the menu entry "UTF-8
                                              Encoding". The default is "default".

                                              xterm accepts either a keyword (ignoring case) or the number
                                              shown:


                                                        UTF-8 mode is initially off. The command-line option
                                              false   0 +u8 sets the resource to this value. Escape sequences
                                                        for turning UTF-8 mode on/off are allowed.
                                              true    1 UTF-8 mode is initially on. Escape sequences for
utf8                   Utf8                             turning UTF-8 mode on/off are allowed.
                                                        The command-line option -u8 sets the resource to this
                                              always  2 value. Escape sequences for turning UTF-8 mode on/off
                                                        are ignored.
                                                        This is the default value of the resource. It is
                                                        changed during initialization depending on whether the
                                                        locale resource was set, to false (0) or always (2).
                                                        See the locale resource for additional discussion of
                                              default 3 non-UTF-8 locales.

                                                        If you want to set the value of utf8, it should be in
                                                        this range. Other nonzero values are treated the same
                                                        as "1", i.e., UTF-8 mode is initially on, and escape
                                                        sequences for turning UTF-8 mode on/off are allowed.

                                              See the discussion of the locale resource. This specifies whether
                                              xterm will use UTF-8 fonts specified via resource patterns such
                                              as "*vt100.utf8Fonts.font" or normal (ISO-8859-1) fonts via
                                              patterns such as "*vt100.font". The resource can be set via the
                                              menu entry "UTF-8 Fonts". The default is "default".

                                              xterm accepts either a keyword (ignoring case) or the number
                                              shown:

utf8Fonts              Utf8Fonts
                                              false   0 Use the ISO-8859-1 fonts. The menu entry is enabled,
                                                        allowing the choice of fonts to be changed at runtime.
                                              true    1 Use the UTF-8 fonts. The menu entry is enabled,
                                                        allowing the choice of fonts to be changed at runtime.
                                              always  2 Always use the UTF-8 fonts. This also disables the menu
                                                        entry.
                                              default 3 At startup, the resource is set to true or false,
                                                        according to the effective value of the utf8 resource.

                                              If true, allow an ISO-8859-1 normal font to be combined with an
utf8Latin1             Utf8Latin1             ISO-10646 font if the latter is given via the -fw option or its
                                              corresponding resource value. The default is "false".
                                              Override xterm's default selection target list (see Select/Paste)
utf8SelectTypes        Utf8SelectTypes        for selections in wide-character (UTF-8) mode. The default is an
                                              empty string, i.e., "", which does not override anything.
                                              Applications can set xterm's title by writing a control sequence.
                                              Normally this control sequence follows the VT220 convention,
                                              which encodes the string in ISO-8859-1 and allows for an 8-bit
                                              string terminator. If xterm is started in a UTF-8 locale, it
                                              translates the ISO-8859-1 string to UTF-8 to work with the X
                                              libraries which assume the string is UTF-8.

                                              However, some users may want to write a title string encoded in
                                              UTF-8. The window manager is responsible for drawing window
                                              titles. Some window managers (not all) support UTF-8 encoding of
utf8Title              Utf8Title              window titles. Set this resource to "true" to allow UTF-8 encoded
                                              title strings. That cancels the translation to UTF-8, allowing
                                              UTF-8 strings to be displayed as is.

                                              This feature is available as a menu entry, since it is related to
                                              the particular applications you are running within xterm. You can
                                              also use a control sequence (see the discussion of "Title Modes"
                                              in the control sequences document), to set an equivalent flag.
                                              The titleModes resource sets the same value, which overrides this
                                              resource.

                                              The default is "false".
                                              Specifies whether to combine video attributes with colors
                                              specified by colorBD, colorBL, colorRV and colorUL. The resource
                                              value is the sum of values for each attribute:

                                              1 for reverse,

veryBoldColors         VeryBoldColors         2 for underline,

                                              4 for bold and

                                              8 for blink.

                                              The default is "0".
                                              Specifies whether or not a visible bell (i.e., flashing) should
visualBell             VisualBell             be used instead of an audible bell when Control-G is received.
                                              The default is "false", which tells xterm to use an audible bell.
                                              Number of milliseconds to delay when displaying a visual bell.
visualBellDelay        VisualBellDelay        Default is 100. If set to zero, no visual bell is displayed. This
                                              is useful for very slow displays, e.g., an LCD display on a
                                              laptop.
                                              Specifies whether to flash only the current line when displaying
visualBellLine         VisualBellLine         a visual bell. Rather than flashing the entire screen: The
                                              default is "false", which tells xterm to flash the entire screen.
                                              This specifies whether xterm will interpret VT100 graphic
vt100Graphics          VT100Graphics          character escape sequences while in UTF-8 mode. The default is "
                                              true", to provide support for various legacy applications.
                                              This option specifies the font to be used for displaying bold
                                              wide text. By default, it will attempt to use a font twice as
wideBoldFont           WideBoldFont           wide as the font that will be used to draw bold text. If no
                                              double-width font is found, it will improvise, by stretching the
                                              bold font.
wideChars              WideChars              Specifies if xterm should respond to control sequences that
                                              process 16-bit characters. The default is "false".
                                              This option specifies the font to be used for displaying wide
                                              text. By default, it will attempt to use a font twice as wide as
wideFont               WideFont               the font that will be used to draw normal text. If no
                                              double-width font is found, it will improvise, by stretching the
                                              normal font.
                                              This option specifies the font to be used for displaying the
                                              preedit string in the "OverTheSpot" input method. In
                                              "OverTheSpot" preedit type, the preedit (preconversion) string is
                                              displayed at the position of the cursor. It is the XIM server's
                                              responsibility to display the preedit string. The XIM client must
ximFont                XimFont                inform the XIM server of the cursor position. For best results,
                                              the preedit string must be displayed with a proper font.
                                              Therefore, xterm informs the XIM server of the proper font. The
                                              font is be supplied by a "fontset", whose default value is "*".
                                              This matches every font, the X library automatically chooses
                                              fonts with proper charsets. The ximFont resource is provided to
                                              override this default font setting.

=== Tek4014 Widget Resources ===

==== The following resources are specified as part of the tek4014 widget (clasi Tek4014). These are specified by patterns such as "XTerm.tek4014.NAME": ====

  resource        class                         description
font2         Font          Specifies font number 2 to use in the Tektronix
                            window.
font3         Font          Specifies font number 3 to use in the Tektronix
                            window.
fontLarge     Font          Specifies the large font to use in the Tektronix
                            window.
fontSmall     Font          Specifies the small font to use in the Tektronix
                            window.
                            Specifies what character(s) should follow a GIN
                            report or status report. The possibilities are "
ginTerminator GinTerminator none", which sends no terminating characters, "
                            CRonly", which sends CR, and "CR&EOT", which sends
                            both CR and EOT. The default is "none".
height        Height        Specifies the height of the Tektronix window in
                            pixels.
                            Specifies which of the four Tektronix fonts to use
initialFont   InitialFont   initially. Values are the same as for the
                            set-tek-text action. The default is "large".
width         Width         Specifies the width of the Tektronix window in
                            pixels.

=== Menu Resources ===

The resources that may be specified for the various menus are described in the
documentation for the Athena SimpleMenu widget. The name and classes of the
entries in each of the menus are listed below. Resources named "lineN" where N
is a number are separators with class SmeLine.

==== The mainMenu has the following entries: ====

   resource     class                        description
toolbar         SmeBSB This entry invokes the set-toolbar(toggle) action.
securekbd       SmeBSB This entry invokes the secure() action.
allowsends      SmeBSB This entry invokes the allow-send-events(toggle) action.
redraw          SmeBSB This entry invokes the redraw() action.
logging         SmeBSB This entry invokes the logging(toggle) action.
print-immediate SmeBSB This entry invokes the print-immediate() action.
print-on-error  SmeBSB This entry invokes the print-on-error() action.
print           SmeBSB This entry invokes the print() action.
print-redir     SmeBSB This entry invokes the print-redir() action.
8-bit-control   SmeBSB This entry invokes the set-8-bit-control(toggle) action.
backarrow key   SmeBSB This entry invokes the set-backarrow(toggle) action.
num-lock        SmeBSB This entry invokes the set-num-lock(toggle) action.
alt-esc         SmeBSB This entry invokes the alt-sends-escape(toggle) action.
meta-esc        SmeBSB This entry invokes the meta-sends-escape(toggle) action.
delete-is-del   SmeBSB This entry invokes the delete-is-del(toggle) action.
oldFunctionKeys SmeBSB This entry invokes the old-function-keys(toggle) action.
hpFunctionKeys  SmeBSB This entry invokes the hp-function-keys(toggle) action.
scoFunctionKeys SmeBSB This entry invokes the sco-function-keys(toggle) action.
sunFunctionKeys SmeBSB This entry invokes the sun-function-keys(toggle) action.
sunKeyboard     SmeBSB This entry invokes the sunKeyboard(toggle) action.
suspend         SmeBSB This entry invokes the send-signal(tstp) action on
                       systems that support job control.
continue        SmeBSB This entry invokes the send-signal(cont) action on
                       systems that support job control.
interrupt       SmeBSB This entry invokes the send-signal(int) action.
hangup          SmeBSB This entry invokes the send-signal(hup) action.
terminate       SmeBSB This entry invokes the send-signal(term) action.
kill            SmeBSB This entry invokes the send-signal(kill) action.
quit            SmeBSB This entry invokes the quit() action.

==== The vtMenu has the following entries: ====

   resource     class                        description
scrollbar       SmeBSB This entry invokes the set-scrollbar(toggle) action.
jumpscroll      SmeBSB This entry invokes the set-jumpscroll(toggle) action.
reversevideo    SmeBSB This entry invokes the set-reverse-video(toggle) action.
autowrap        SmeBSB This entry invokes the set-autowrap(toggle) action.
reversewrap     SmeBSB This entry invokes the set-reversewrap(toggle) action.
autolinefeed    SmeBSB This entry invokes the set-autolinefeed(toggle) action.
appcursor       SmeBSB This entry invokes the set-appcursor(toggle) action.
appkeypad       SmeBSB This entry invokes the set-appkeypad(toggle) action.
scrollkey       SmeBSB This entry invokes the set-scroll-on-key(toggle) action.
scrollttyoutput SmeBSB This entry invokes the set-scroll-on-tty-output(toggle)
                       action.
allow132        SmeBSB This entry invokes the set-allow132(toggle) action.
cursesemul      SmeBSB This entry invokes the set-cursesemul(toggle) action.
visualbell      SmeBSB This entry invokes the set-visualbell(toggle) action.
bellIsUrgent    SmeBSB This entry invokes the set-bellIsUrgent(toggle) action.
poponbell       SmeBSB This entry invokes the set-poponbell(toggle) action.
cursorblink     SmeBSB This entry invokes the set-cursorblink(toggle) action.
titeInhibit     SmeBSB This entry invokes the set-titeInhibit(toggle) action.
                       This entry toggles active icons on and off if this
activeicon      SmeBSB feature was compiled into xterm. It is enabled only if
                       xterm was started with the command line option +ai or
                       the activeIcon resource is set to "true".
softreset       SmeBSB This entry invokes the soft-reset() action.
hardreset       SmeBSB This entry invokes the hard-reset() action.
clearsavedlines SmeBSB This entry invokes the clear-saved-lines() action.
tekshow         SmeBSB This entry invokes the set-visibility(tek,toggle)
                       action.
tekmode         SmeBSB This entry invokes the set-terminal-type(tek) action.
vthide          SmeBSB This entry invokes the set-visibility(vt,off) action.
altscreen       SmeBSB This entry invokes the set-altscreen(toggle) action.

==== The fontMenu has the following entries: ====

    resource     class                       description
fontdefault      SmeBSB This entry invokes the set-vt-font(d) action.
font1            SmeBSB This entry invokes the set-vt-font(1) action.
font2            SmeBSB This entry invokes the set-vt-font(2) action.
font3            SmeBSB This entry invokes the set-vt-font(3) action.
font4            SmeBSB This entry invokes the set-vt-font(4) action.
font5            SmeBSB This entry invokes the set-vt-font(5) action.
font6            SmeBSB This entry invokes the set-vt-font(6) action.
fontescape       SmeBSB This entry invokes the set-vt-font(e) action.
fontsel          SmeBSB This entry invokes the set-vt-font(s) action.
font-linedrawing SmeBSB This entry invokes the set-font-linedrawing(s) action.
font-packed      SmeBSB This entry invokes the set-font-packed(s) action.
font-doublesize  SmeBSB This entry invokes the set-font-doublesize(s) action.
render-font      SmeBSB This entry invokes the set-render-font(s) action.
utf8-mode        SmeBSB This entry invokes the set-utf8-mode(s) action.
utf8-title       SmeBSB This entry invokes the set-utf8-title(s) action.

==== The tekMenu has the following entries: ====

  resource   class                         description
tektextlarge SmeBSB This entry invokes the set-tek-text(large) action.
tektext2     SmeBSB This entry invokes the set-tek-text(2) action.
tektext3     SmeBSB This entry invokes the set-tek-text(3) action.
tektextsmall SmeBSB This entry invokes the set-tek-text(small) action.
tekpage      SmeBSB This entry invokes the tek-page() action.
tekreset     SmeBSB This entry invokes the tek-reset() action.
tekcopy      SmeBSB This entry invokes the tek-copy() action.
vtshow       SmeBSB This entry invokes the set-visibility(vt,toggle) action.
vtmode       SmeBSB This entry invokes the set-terminal-type(vt) action.
tekhide      SmeBSB This entry invokes the set-visibility(tek,toggle) action.

=== Scrollbar Resources ===

==== The following resources are useful when specified for the Athena Scrollbar widget: ====

 resource    class                           description
thickness  Thickness  Specifies the width in pixels of the scrollbar.
background Background Specifies the color to use for the background of the
                      scrollbar.
                      Specifies the color to use for the foreground of the
foreground Foreground scrollbar. The "thumb" of the scrollbar is a simple
                      checkerboard pattern alternating pixels for foreground
                      and background color.

=== Pointer Usage ===

Once the VT102 window is created, xterm allows you to select text and copy it
within the same or other windows.

=== Selection ===

The selection functions are invoked when the pointer buttons are used with no
modifiers, and when they are used with the "shift" key. The assignment of the
functions described below to keys and buttons may be changed through the
resource database; see Actions, below.

Pointer button one (usually left) is used to save text into the cut buffer.
Move the cursor to beginning of the text, and then hold the button down while
moving the cursor to the end of the region and releasing the button. The
selected text is highlighted and is saved in the global cut buffer and made the
PRIMARY selection when the button is released. Normally (but see the discussion
of on2Clicks, etc):

  • Double-clicking selects by words.
  • Triple-clicking selects by lines.
  • Quadruple-clicking goes back to characters, etc.

Multiple-click is determined by the time from button up to button down, so you
can change the selection unit in the middle of a selection. Logical words and
lines selected by double- or triple-clicking may wrap across more than one
screen line if lines were wrapped by xterm itself rather than by the
application running in the window. If the key/button bindings specify that an X
selection is to be made, xterm will leave the selected text highlighted for as
long as it is the selection owner.

Pointer button two (usually middle) "types" (pastes) the text from the PRIMARY
selection, if any, otherwise from the cut buffer, inserting it as keyboard
input.

Pointer button three (usually right) extends the current selection. Without
loss of generality, you can swap "right" and "left" everywhere in the rest of
this paragraph. If pressed while closer to the right edge of the selection than
the left, it extends/contracts the right edge of the selection. If you contract
the selection past the left edge of the selection, xterm assumes you really
meant the left edge, restores the original selection, then extends/contracts
the left edge of the selection. Extension starts in the selection unit mode
that the last selection or extension was performed in; you can multiple-click
to cycle through them.

By cutting and pasting pieces of text without trailing new lines, you can take
text from several places in different windows and form a command to the shell,
for example, or take output from a program and insert it into your favorite
editor. Since cut buffers are globally shared among different applications, you
may regard each as a "file" whose contents you know. The terminal emulator and
other text programs should be treating it as if it were a text file, i.e., the
text is delimited by new lines.

=== Scrolling ===

The scroll region displays the position and amount of text currently showing in
the window (highlighted) relative to the amount of text actually saved. As more
text is saved (up to the maximum), the size of the highlighted area decreases.

Clicking button one with the pointer in the scroll region moves the adjacent
line to the top of the display window.

Clicking button three moves the top line of the display window down to the
pointer position.

Clicking button two moves the display to a position in the saved text that
corresponds to the pointer's position in the scrollbar.

=== Tektronix Pointer ===

Unlike the VT102 window, the Tektronix window does not allow the copying of
text. It does allow Tektronix GIN mode, and in this mode the cursor will change
from an arrow to a cross. Pressing any key will send that key and the current
coordinate of the cross cursor. Pressing button one, two, or three will return
the letters "l", "m", and "r", respectively. If the Shift key is pressed when a
pointer button is pressed, the corresponding upper case letter is sent. To
distinguish a pointer button from a key, the high bit of the character is set
(but this is bit is normally stripped unless the terminal mode is RAW).

=== Select/Paste ===

X clients provide select and paste support by responding to requests conveyed
by the server, as detailed in the following sections:

=== Primary Selection ===

When configured to use the primary selection, (the default) xterm can provide
the selection data in ways which help to retain character encoding information
as it is pasted.

A user "selects" text on xterm, which highlights the selected text. A
subsequent "paste" to another client forwards a request to the client owning
the selection. If xterm owns the primary selection, it makes the data available
in the form of one or more "selection targets". If it does not own the primary
selection, e.g., if it has released it or another client has asserted
ownership, it relies on cut-buffers to pass the data. But cut-buffers handle
only ISO-8859-1 data (officially, some clients ignore the rules).

=== Clipboard ===

When configured to use the clipboard (see resource selectToClipboard), the
problem with persistence of ownership is bypassed. Otherwise, there is no
difference regarding the data which can be passed via selection.

=== Selection Targets ===

The different types of data that are passed depend on what the request from the
receiving client. These are termed selection targets.

When asking for the selection data, xterm tries the following types in this
order:

              This is an XFree86 extension, which denotes that the data is
UTF8_STRING   encoded in UTF-8. When xterm is built with wide-character
              support, it both accepts and provides this type.
TEXT          the text is in the encoding which corresponds to your current
              locale.
COMPOUND_TEXT this is a format for multiple character set data, such as
              multi-lingual text. It can store UTF-8 data as a special case.
STRING        This is Latin 1 (ISO-8859-1) data.

The middle two (TEXT and COMPOUND_TEXT) are added if xterm is configured with
the i18nSelections resource set to "true".

UTF8_STRING is preferred (therefore first in the list) since xterm stores text
as Unicode data when running in wide-character mode, and no translation is
needed. On the other hand, TEXT and COMPOUND_TEXT may require translation. If
the translation is incomplete, they will insert X's "defaultString" whose value
cannot be set, and may be empty. xterm's defaultString resource specifies the
string to use for incomplete translations of the UTF8_STRING.

You can alter the types which xterm tries using the eightBitSelectTypes or
utf8SelectTypes resources. For instance, you might have some specific locale
setting which does not use UTF-8 encoding. The resource value is a
comma-separated list of the selection targets, which consist of the names
shown. You can use the special name I18N to denote the optional inclusion of
TEXT and COMPOUND_TEXT. The names are matched ignoring case, and can be
abbreviated. The default list can be expressed in several ways, for example:

UTF8_STRING,I18N,STRING
utf8,i18n,string
u,i,s

=== Menus ===

xterm has four menus, named mainMenu, vtMenu, fontMenu, and tekMenu. Each menu
pops up under the correct combinations of key and button presses. Each menu is
divided into sections, separated by a horizontal line. Some menu entries
correspond to modes that can be altered. A check mark appears next to a mode
that is currently active. Selecting one of these modes toggles its state. Other
menu entries are commands; selecting one of these performs the indicated
function.

All of the menu entries correspond to X actions. In the list below, the menu
label is shown followed by the action's name:

=== Main Options ===

The xterm mainMenu pops up when the "control" key and pointer button one are
pressed in a window. This menu contains items that apply to both the VT102 and
Tektronix windows. There are several sections:

==== Commands for managing X events: ====

menu label   action                          description
              name
Toolbar    (none)     Clicking the "Toolbar" menu entry hides the toolbar if it
                      is visible, and shows it if it is not.
                      The Secure Keyboard mode is helpful when typing in
Secure     securekbd  passwords or other sensitive data in an unsecure
Keyboard              environment; see Security below (but read the limitations
                      carefully).
                      Specifies whether or not synthetic key and button events
Allow      allowsends generated using the X protocol SendEvent request should
SendEvents            be interpreted or discarded. This corresponds to the
                      allowSendEvents resource.
Redraw     redraw     Forces the X display to repaint; useful in some
Window                environments.

==== Commands for capturing output: ====

menu label  action name                       description
Log to File logging     Captures text sent to the screen in a logfile, as in
                        the -l logging option.
                        Invokes the print-immediate action, sending the text of
Print-All   (none)      the current window directly to a file, as specified by
Immediately             the printFileImmediate, printModeImmediate and
                        printOptsImmediate resources.
                        Invokes the print-on-error action, which toggles a flag
Print-All               telling xterm that if it exits with an X error, to send
on Error    (none)      the text of the current window directly to a file, as
                        specified by the printFileXError, printModeXError and
                        printOptsXError resources.
Print       print       Sends the text of the current window to the program
Window                  given in the printerCommand resource.
                        This sets the printerControlMode to 0 or 2. You can use
Redirect to             this to turn the printer on as if an application had
Printer     print-redir sent the appropriate control sequence. It is also
                        useful for switching the printer off if an application
                        turns it on without resetting the print control mode.

==== Modes for setting keyboard style: ====

    menu label        action name                   description
                                     Enabled for VT220 emulation, this controls
                                     whether xterm will send 8-bit control
                                     sequences rather than using 7-bit (ASCII)
                                     controls, e.g., sending a byte in the
8-Bit Controls      8-bit-control    range 128-159 rather than the escape
                                     character followed by a second byte. xterm
                                     always interprets both 8-bit and 7-bit
                                     control sequences. This corresponds to the
                                     eightBitControl resource.
                                     Modifies the behavior of the backarrow
Backarrow Key (BS/  backarrow key    key, making it transmit either a backspace
DEL)                                 (8) or delete (127) character. This
                                     corresponds to the backarrowKey resource.
Alt/NumLock                          Controls the treatment of Alt- and
Modifiers           num-lock         NumLock-key modifiers. This corresponds to
                                     the numLock resource.
                                     Controls whether Meta keys are converted
                                     into a two-character sequence with the
Meta Sends Escape   meta-esc         character itself preceded by Esc. This
                                     corresponds to the metaSendsEscape
                                     resource.
                                     Controls whether the Delete key on the
                                     editing keypad should send DEL (127) or
Delete is DEL       delete-is-del    the VT220-style Remove escape sequence.
                                     This corresponds to the deleteIsDEL
                                     resource.
Old Function-Keys,  oldFunctionKeys,
HP Function-Keys,   hpFunctionKeys,  These act as a radio-button, selecting one
SCO Function-Keys,  scoFunctionKeys, style for the keyboard layout.
Sun Function-Keys,  sunFunctionKeys,
VT220 Keyboard      sunKeyboard

==== Commands for process signalling: ====

      menu label        action name                 description
                        suspend,     These send the SIGTSTP, SIGCONT, SIGINT,
Send STOP Signal, Send  continue,    SIGHUP, SIGTERM and SIGKILL signals
CONT Signal, Send INT   interrupt,   respectively, to the process group of the
Signal, Send HUP Signal hangup,      process running under xterm (usually the
, Send TERM Signal,     terminate,   shell). The SIGCONT function is especially
Send KILL Signal        kill         useful if the user has accidentally typed
                                     Ctrl-Z, suspending the process.
                                     Stop processing X events except to support
Quit                    quit         the -hold option, and then send a SIGHUP
                                     signal to the process group of the process
                                     running under xterm (usually the shell).

=== VT Options ===

The vtMenu sets various modes in the VT102 emulation, and is popped up when the
CONTROL key and pointer button two are pressed in the VT102 window.

==== VT102/VT220 Modes: ====

menu label     action name                       description
Enable                        Enable (or disable) the scrollbar. This
Scrollbar   scrollbar         corresponds to the -sb option and the scrollBar
                              resource.
Enable Jump                   Enable (or disable) jump scrolling. This
Scroll      jumpscroll        corresponds to the -j option and the jumpScroll
                              resource.
Enable                        Enable (or disable) reverse-video. This
Reverse     reversevideo      corresponds to the -rv option and the
Video                         reverseVideo resource.
Enable Auto                   Enable (or disable) auto-wraparound. This
Wraparound  autowrap          corresponds to the -aw option and the autoWrap
                              resource.
Enable                        Enable (or disable) reverse wraparound. This
Reverse     reversewrap       corresponds to the -rw option and the reverseWrap
Wraparound                    resource.
                              Enable (or disable) auto-linefeed. This is the
Enable Auto                   VT102 NEL function, which causes the emulator to
Linefeed    autolinefeed      emit a linefeed after each carriage return. There
                              is no corresponding command-line option or
                              resource setting.
Enable                        Enable (or disable) application cursor keys. This
Application appcursor         corresponds to the appcursorDefault resource.
Cursor Keys                   There is no corresponding command-line option.
Enable                        Enable (or disable) application keypad keys. This
Application appkeypad         corresponds to the appkeypadDefault resource.
Keypad                        There is no corresponding command-line option.
                              Enable (or disable) scrolling to the bottom of
                              the scrolling region on a keypress. This
Scroll to                     corresponds to the -sk option and the scrollKey
Bottom on   scrollkey         resource.
Key Press
                              As a special case, the XON / XOFF keys (control/S
                              and control/Q) are ignored.
Scroll to                     Enable (or disable) scrolling to the bottom of
Bottom on   scrollttyoutput   the scrolling region on output to the terminal.
Tty Output                    This corresponds to the -si option and the
                              scrollTtyOutput resource.
Allow 80/                     Enable (or disable) switching between 80 and 132
132 Column  allow132          columns. This corresponds to the -132 option and
Switching                     the c132 resource.
                              Tell xterm whether to disown the selection when
                              it stops highlighting it, e.g., when an
                              application modifies the display so that it no
Keep                          longer matches the text which has been
Selection   keepSelection     highlighted. As long as xterm continues to own
                              the selection, Bit can provide the corresponding
                              text to other clients via cut/paste. This
                              corresponds to the keepSelection resource. There
                              is no corresponding command-line option.
                              Tell xterm whether to use the PRIMARY or
                              CLIPBOARD for SELECT tokens in the translations
Select to   selectToClipboard resource which maps keyboard and mouse actions to
Clipboard                     select/paste actions. This corresponds to the
                              selectToClipboard resource. There is no
                              corresponding command-line option.
Enable                        Enable (or disable) visible bell (i.e., flashing)
Visual Bell visualbell        instead of an audible bell. This corresponds to
                              the -vb option and the visualBell resource.
Enable Bell                   Enable (or disable) Urgency window manager hint
Urgency     bellIsUrgent      when Control-G is received. This corresponds to
                              the bellIsUrgent resource.
Enable Pop                    Enable (or disable) raising of the window when
on Bell     poponbell         Control-G is received. This corresponds to the
                              -pop option and the popOnBell resource.
                              Enable (or disable) the blinking-cursor feature.
                              This corresponds to the -bc option and the
Enable                        cursorBlink resource. There is also an escape
Blinking    cursorblink       sequence. The menu entry and the escape sequence
Cursor                        states are XOR'd: if both are enabled, the cursor
                              will not blink, if only one is enabled, the
                              cursor will blink.
Enable                        Enable (or disable) switching between the normal
Alternate   titeInhibit       and alternate screens. This corresponds to the
Screen                        titeInhibit resource. There is no corresponding
Switching                     command-line option.
Enable                        Enable (or disable) the active-icon feature. This
Active Icon activeicon        corresponds to the -ai option and the activeIcon
                              resource.

==== VT102/VT220 Commands: ====

 menu     action name                         description
 label
                        Reset scroll regions. This can be convenient when some
Do Soft softreset       program has left the scroll regions set incorrectly
Reset                   (often a problem when using VMS or TOPS-20). This
                        corresponds to the VT220 DECSTR control sequence.
                        The full reset entry will clear the screen, reset tabs
                        to every eight columns, and reset the terminal modes
                        (such as wrap and smooth scroll) to their initial
Do Full hardreset       states just after xterm has finished processing the
Reset                   command line options. This corresponds to the VT102 RIS
                        control sequence, with a few obvious differences. For
                        example, your session is not disconnected as a real
                        VT102 would do.
Reset
and
Clear   clearsavedlines Perform a full reset, and also clear the saved lines.
Saved
Lines

==== Commands for setting the current screen: ====

  menu     action                           description
  label     name
Show Tek  tekshow   When enabled, pops the Tektronix 4014 window up (makes it
Window              visible). When disabled, hides the Tektronix 4014 window.
                    When enabled, pops the Tektronix 4014 window up if it is
Switch to tekmode   not already visible, and switches the input stream to that
Tek Mode            window. When disabled, hides the Tektronix 4014 window and
                    switches input back to the VTxxx window.
                    When enabled, hides the VTxxx window, shows the Tektronix
Hide VT   vthide    4014 window if it was not already visible and switches the
Window              input stream to that window. When disabled, shows the VTxxx
                    window, and switches the input stream to that window.
Show                When enabled, shows the alternate screen. When disabled,
Alternate altscreen shows the normal screen. Note that the normal screen may
Screen              have saved lines; the alternate screen does not.

=== VT Fonts ===

The fontMenu pops up when the CONTROL key and pointer button three are pressed
in a window. It sets the font used in the VT102 window, or modifies the way the
font is specified or displayed. There are several sections.

==== The first section allows you to select the font from a set of alternatives: ====

menu label action name                       description
Default    fontdefault Set the font to the default, i.e., that given by the
                       *VT100.font resource.
Unreadable font1       Set the font to that given by the *VT100.font1 resource.
Tiny       font2       Set the font to that given by the *VT100.font2 resource.
Small      font3       Set the font to that given by the *VT100.font3 resource.
Medium     font4       Set the font to that given by the *VT100.font4 resource.
Large      font5       Set the font to that given by the *VT100.font5 resource.
Huge       font6       Set the font to that given by the *VT100.font6 resource.
Escape     (none)      This allows you to set the font last specified by the
Sequence               Set Font escape sequence.
                       This allows you to set the font specified the current
Selection  fontsel     selection as a font name (if the PRIMARY selection is
                       owned).

==== The second section allows you to modify the way it is displayed: ====

 menu label    action name                       description
                              This is normally checked (enabled). When
Bold Fonts   (none)           unchecked, xterm will not use bold fonts. The
                              setting corresponds to the allowBoldFonts
                              resource.
                              When set, tells xterm to draw its own
Line-Drawing font-linedrawing line-drawing characters. Otherwise, it relies on
Characters                    the font containing these. Compare to the
                              forceBoxChars resource.
                              When set, tells xterm to use the minimum
                              glyph-width from a font when displaying
Packed Font  font-packed      characters. Use the maximum width (unchecked) to
                              help display proportional fonts. Compare to the
                              forcePackedFont resource.
Doublesized                   When set, xterm may ask the font server to
Characters   font-doublesize  produce scaled versions of the normal font, for
                              VT102 double-size characters.

==== The third section allows you to modify the way it is specified: ====

  menu   action name                        description
 label
TrueType             If the renderFont and corresponding resources were set,
Fonts    render-font this is a further control whether xterm will actually use
                     the Xft library calls to obtain a font.
                     This controls whether xterm uses UTF-8 encoding of input/
UTF-8    utf8-mode   output. It is useful for temporarily switching xterm to
Encoding             display text from an application which does not follow the
                     locale settings. It corresponds to the utf8 resource.
                     This controls whether xterm uses UTF-8 fonts for display.
UTF-8    utf8-fonts  It is useful for temporarily switching xterm to display
Fonts                text from an application which does not follow the locale
                     settings. It combines the utf8 and utf8Fonts resources.
                     This controls whether xterm accepts UTF-8 encoding for
                     title control sequences. It corresponds to the utf8Fonts
                     resource.

                     Initially the checkmark is set according to both the utf8
                     and utf8Fonts resource values. If the latter is set to "
                     always", the checkmark is disabled. Likewise, if there are
                     no fonts given in the utf8Fonts subresources, then the
UTF-8    utf8-titles checkmark also is disabled.
Titles
                     The standard XTerm app-defaults file defines both sets of
                     fonts, while the UXTerm app-defaults file defines only one
                     set. Assuming the standard app-defaults files, this
                     command will launch xterm able to switch between UTF-8 and
                     ISO-8859-1 encoded fonts:


                     == uxterm -class XTerm ==

The fourth section allows you to enable or disable special operations which can
be controlled by writing escape sequences to the terminal. These are disabled
if the SendEvents feature is enabled:

 menu    action name                          description
label
Allow                   This corresponds to the allowColorOps resource. Enable
Color  allow-font-ops   or disable control sequences that set/query the colors.
Ops
Allow                   This corresponds to the allowFontOps resource. Enable
Font   allow-font-ops   or disable control sequences that set/query the font.
Ops
Allow                   Enable or disable control sequences that query the
Tcap   allow-tcap-ops   terminal's notion of its function-key strings, as
Ops                     termcap or terminfo capabilities. This corresponds to
                        the allowTcapOps resource.
Allow                   Enable or disable control sequences that modify the
Title  allow-title-ops  window title or icon name. This corresponds to the
Ops                     allowTitleOps resource.
Allow                   Enable or disable extended window control sequences (as
Window allow-window-ops used in dtterm). This corresponds to the allowWindowOps
Ops                     resource.

=== Security ===

==== X environments differ in their security consciousness. ====

Most servers, run under xdm, are capable of using a "magic cookie"
authorization scheme that can provide a reasonable level of security for many
people. If your server is only using a host-based mechanism to control access
to the server, then if you enable access for a host and other users are also
permitted to run clients on that same host, it is possible that someone can run
an application which uses the basic services of the X protocol to snoop on your
activities, potentially capturing a transcript of everything you type at the
keyboard.

Any process which has access to your X display can manipulate it in ways that
you might not anticipate, even redirecting your keyboard to itself and sending
events to your application's windows. This is true even with the "magic cookie"
authorization scheme. While the allowSendEvents provides some protection
against rogue applications tampering with your programs, guarding against a
snooper is harder.

The X input extension for instance allows an application to bypass all of the
other (limited) authorization and security features, including the GrabKeyboard
protocol.

The possibility of an application spying on your keystrokes is of particular
concern when you want to type in a password or other sensitive data. The best
solution to this problem is to use a better authorization mechanism than is
provided by X.

Subject to all of these caveats, a simple mechanism exists for protecting
keyboard input in xterm.

The xterm menu (see Menus above) contains a Secure Keyboard entry which, when
enabled, attempts to ensure that all keyboard input is directed only to xterm
(using the GrabKeyboard protocol request). When an application prompts you for
a password (or other sensitive data), you can enable Secure Keyboard using the
menu, type in the data, and then disable Secure Keyboard using the menu again.

This ensures that you know which window is accepting your keystrokes.

It cannot ensure that there are no processes which have access to your X
display that might be observing the keystrokes as well.

Only one X client at a time can grab the keyboard, so when you attempt to
enable Secure Keyboard it may fail. In this case, the bell will sound. If the
Secure Keyboard succeeds, the foreground and background colors will be
exchanged (as if you selected the Reverse Video entry in the Modes menu); they
will be exchanged again when you exit secure mode. If the colors do not switch,
then you should be very suspicious that you are being spoofed. If the
application you are running displays a prompt before asking for the password,
it is safest to enter secure mode before the prompt gets displayed, and to make
sure that the prompt gets displayed correctly (in the new colors), to minimize
the probability of spoofing. You can also bring up the menu again and make sure
that a check mark appears next to the entry.

Secure Keyboard mode will be disabled automatically if your xterm window
becomes iconified (or otherwise unmapped), or if you start up a reparenting
window manager (that places a title bar or other decoration around the window)
while in Secure Keyboard mode. This is a feature of the X protocol not easily
overcome. When this happens, the foreground and background colors will be
switched back and the bell will sound in warning.

=== Character Classes ===

Clicking the left pointer button twice in rapid succession (double-clicking)
causes all characters of the same class (e.g., letters, white space,
punctuation) to be selected as a "word". Since different people have different
preferences for what should be selected (for example, should file names be
selected as a whole or only the separate subnames), the default mapping can be
overridden through the use of the charClass (class CharClass) resource.

This resource is a series of comma-separated of range:value pairs. The range is
either a single number or low-high in the range of 0 to 65535, corresponding to
the code for the character or characters to be set. The value is arbitrary,
although the default table uses the character number of the first character
occurring in the set. When not in UTF-8 mode, only the first 256 bytes of this
table will be used.

==== The default table starts as follows: ====

static int charClass[256] = {
/* NUL  SOH  STX  ETX  EOT  ENQ  ACK  BEL */
    32, 1, 1, 1, 1, 1, 1, 1,
/*  BS   HT   NL   VT   NP   CR   SO   SI */
     1, 32, 1, 1, 1, 1, 1, 1,
/* DLE  DC1  DC2  DC3  DC4  NAK  SYN  ETB */
     1, 1, 1, 1, 1, 1, 1, 1,
/* CAN   EM  SUB  ESC   FS   GS   RS   US */
     1, 1, 1, 1, 1, 1, 1, 1,
/*  SP    !    "    #    $    %    &    ' */
    32, 33, 34, 35, 36, 37, 38, 39,
/*   (    )    *    +    , -    .    / */
    40, 41, 42, 43, 44, 45, 46, 47,
/*   0    1    2    3    4    5    6    7 */
    48, 48, 48, 48, 48, 48, 48, 48,
/*   8    9    :    ;    <    =    >    ? */
    48, 48, 58, 59, 60, 61, 62, 63,
/*   @    A    B    C    D    E    F    G */
    64, 48, 48, 48, 48, 48, 48, 48,
/*   H    I    J    K    L    M    N    O */
    48, 48, 48, 48, 48, 48, 48, 48,
/*   P    Q    R    S    T    U    V    W */
    48, 48, 48, 48, 48, 48, 48, 48,
/*   X    Y    Z    [    \    ]    ^    _ */
    48, 48, 48, 91, 92, 93, 94, 48,
/*   `    a    b    c    d    e    f    g */
    96, 48, 48, 48, 48, 48, 48, 48,
/*   h    i    j    k    l    m    n    o */
    48, 48, 48, 48, 48, 48, 48, 48,
/*   p    q    r    s    t    u    v    w */
    48, 48, 48, 48, 48, 48, 48, 48,
/*   x    y    z    {    |    }    ~  DEL */
    48, 48, 48, 123, 124, 125, 126, 1,
/* x80  x81  x82  x83  IND  NEL  SSA  ESA */
     1, 1, 1, 1, 1, 1, 1, 1,
/* HTS  HTJ  VTS  PLD  PLU   RI  SS2  SS3 */
     1, 1, 1, 1, 1, 1, 1, 1,
/* DCS  PU1  PU2  STS  CCH   MW  SPA  EPA */
     1, 1, 1, 1, 1, 1, 1, 1,
/* x98  x99  x9A  CSI   ST  OSC   PM  APC */
     1, 1, 1, 1, 1, 1, 1, 1,
/*   -    i   c/    L   ox   Y-    |   So */
   160, 161, 162, 163, 164, 165, 166, 167,
/*  ..   c0   ip   <<    _        R0    - */
   168, 169, 170, 171, 172, 173, 174, 175,
/*   o   +-    2    3    '    u   q|    . */
   176, 177, 178, 179, 180, 181, 182, 183,
/*   , 1    2   >>  1/4  1/2  3/4    ? */
   184, 185, 186, 187, 188, 189, 190, 191,
/*  A`   A'   A^   A~   A:   Ao   AE   C, */
    48, 48, 48, 48, 48, 48, 48, 48,
/*  E`   E'   E^   E:   I`   I'   I^   I: */
    48, 48, 48, 48, 48, 48, 48, 48,
/*  D-   N~   O`   O'   O^   O~   O:    X */
    48, 48, 48, 48, 48, 48, 48, 215,
/*  O/   U`   U'   U^   U:   Y'    P    B */
    48, 48, 48, 48, 48, 48, 48, 48,
/*  a`   a'   a^   a~   a:   ao   ae   c, */
    48, 48, 48, 48, 48, 48, 48, 48,
/*  e`   e'   e^   e:    i`  i'   i^   i: */
    48, 48, 48, 48, 48, 48, 48, 48,
/*   d   n~   o`   o'   o^   o~   o:   -: */
    48, 48, 48, 48, 48, 48, 48, 247,
/*  o/   u`   u'   u^   u:   y'    P   y: */
    48, 48, 48, 48, 48, 48, 48, 48};

For example, the string "33:48,37:48,45-47:48,38:48" indicates that the
exclamation mark, percent sign, dash, period, slash, and ampersand characters
should be treated the same way as characters and numbers. This is useful for
cutting and pasting electronic mailing addresses and file names.

=== Actions ===

It is possible to rebind keys (or sequences of keys) to arbitrary strings for
input, by changing the translations resources for the vt100 or tek4014 widgets.
Changing the translations resource for events other than key and button events
is not expected, and will cause unpredictable behavior. The following actions
are provided for use within the vt100 or tek4014 translations resources:

allow-color-ops(on/off/  This action sets or toggles the allowColorOps resource and is also
toggle)                  invoked by the allow-color-ops entry in fontMenu.
allow-font-ops(on/off/   This action sets or toggles the allowFontOps resource and is also
toggle)                  invoked by the allow-font-ops entry in fontMenu.
allow-send-events(on/off This action sets or toggles the allowSendEvents resource and is also
/toggle)                 invoked by the allowsends entry in mainMenu.
allow-tcap-ops(on/off/   This action sets or toggles the allowTcapOps resource and is also
toggle)                  invoked by the allow-tcap-ops entry in fontMenu.
allow-title-ops(on/off/  This action sets or toggles the allowTitleOps resource and is also
toggle)                  invoked by the allow-title-ops entry in fontMenu.
allow-window-ops(on/off/ This action sets or toggles the allowWindowOps resource and is also
toggle)                  invoked by the allow-window-ops entry in fontMenu.
alt-sends-escape()       This action toggles the state of the altSendsEscape resource.
bell([percent])          This action rings the keyboard bell at the specified percentage above or
                         below the base volume.
                         This action does hard-reset() (see below) and also clears the history of
clear-saved-lines()      lines saved off the top of the screen. It is also invoked from the
                         clearsavedlines entry in vtMenu. The effect is identical to a hardware
                         reset (RIS) control sequence.
copy-selection(destname  This action puts the currently selected text into all of the selections
[, ...])                 or cutbuffers specified by destname. Unlike select-end, it does not send
                         a mouse position or otherwise modify the internal selection state.
                         This action creates one of the menus used by xterm, if it has not been
create-menu(m/v/f/t)     previously created. The parameter values are the menu names: mainMenu,
                         vtMenu, fontMenu, tekMenu, respectively.
                         Expands the word before cursor by searching in the preceding text on the
                         screen and in the scrollback buffer for words starting with that
                         abbreviation. Repeating dabbrev-expand() several times in sequence
                         searches for an alternative expansion by looking farther back. Lack of
                         more matches is signaled by a beep(). Attempts to expand an empty word
                         (i.e., when cursor is preceded by a space) yield successively all
                         previous words. Consecutive identical expansions are ignored. The word
dabbrev-expand()         here is defined as a sequence of non-whitespace characters. This feature
                         partially emulates the behavior of "dynamic abbreviation" expansion in
                         Emacs (bound there to M-/). Here is a resource setting for xterm which
                         will do the same thing:


                         *VT100*translations:    #override \n\ Meta <KeyPress> /:dabbrev-expand()

deiconify()              Changes the window state back to normal, if it was iconified.
delete-is-del()          This action toggles the state of the deleteIsDEL resource.
                         Handles a button event (other than press and release) by echoing the
                         event's position (i.e., character line and column) in the following
                         format:
dired-button()

                         ^X Esc G <line+" "> <col+" ">

fullscreen()             Asks the window manager to change the window to full-screen.
iconify()                Iconifies the window.
                         This action resets the scrolling region, tabs, window size, and cursor
hard-reset()             keys and clears the screen. It is also invoked from the hardreset entry
                         in vtMenu.
ignore()                 This action ignores the event but checks for special pointer position
                         escape sequences.
insert()                 This action inserts the character or string associated with the key that
                         was pressed.
                         This action inserts an eight-bit (Meta) version of the character or
                         string associated with the key that was pressed. Only single-byte values
                         are treated specially. The exact action depends on the value of the
                         altSendsEscape and the metaSendsEscape and the eightBitInput resources.
                         The metaSendsEscape resource is tested first. See the eightBitInput
                         resource for a full discussion.

                         The term "eight-bit" is misleading: xterm checks if the key is in the
insert-eight-bit()       range 128 to 255 (the eighth bit is set). If the value is in that range,
                         depending on the resource values, xterm may then do one of the
                         following:

                         · add 128 to the value, setting its eighth bit,

                         · send an Esc byte before the key, or

                         · send the key unaltered.
                         Execute an external command, using the current selection for part of the
                         command's parameters. The first parameter, format gives the basic
                         command. Succeeding parameters specify the selection source as in
                         insert-selection.

                         The format parameter allows these substitutions:


                         %% Inserts a "%".
                            The screen-position at the beginning of the highlighted region, as a
                         %P semicolon-separated pair of integers using the values that the CUP
                            control sequence would use.
exec-formatted(format,   %p The screen-position after the beginning of the highlighted region,
sourcename [, ...])         using the same convention as "%P".
                         %S The length of the string that "%s" would insert.
                         %s The content of the selection, unmodified.
                         %T The length of the string that "%t" would insert.
                         %t The selection, trimmed of leading/trailing whitespace, and newlines
                            changed to single spaces.
                            The video attributes at the beginning of the highlighted region, as a
                         %V semicolon-separated list of integers using the values that the SGR
                            control sequence would use.
                         %v The video attributes after the end of the highlighted region, using
                            the same convention as "%V".

                         After constructing the command-string, xterm forks a subprocess and
                         executes the command, which completes independently of xterm.
                         Execute an external command, using data copied from the screen for part
exec-selectable(format,  of the command's parameters. The first parameter, format gives the basic
onClicks)                command as in exec-formatted. The second parameter specifies the method
                         for copying the data as in the onClicks resource.
                         Insert the current selection or data related to it, formatted. The first
insert-formatted(format, parameter, format gives the template for the data as in exec-formatted.
sourcename [, ...])      Succeeding parameters specify the selection source as in
                         insert-selection.
                         Insert data copied from the screen, formatted. The first parameter,
insert-selectable(,      format gives the template for the data as in exec-formatted. The second
format, onClicks)        parameter specifies the method for copying the data as in the onClicks
                         resource.
                         This action inserts the string found in the selection or cutbuffer
insert-selection(        indicated by sourcename. Sources are checked in the order given (case is
sourcename [, ...])      significant) until one is found. Commonly-used selections include:
                         PRIMARY, SECONDARY, and CLIPBOARD. Cut buffers are typically named
                         CUT_BUFFER0 through CUT_BUFFER7.
                         This action is a synonym for insert(). The term "seven-bit" is
insert-seven-bit()       misleading: it only implies that xterm does not try to add 128 to the
                         key's value as in insert-eight-bit().
                         Interpret the given control sequence locally, i.e., without passing it
interpret(               to the host. This works by inserting the control sequence at the front
control-sequence)        of the input buffer. Use "\" to escape octal digits in the string. Xt
                         does not allow you to put a null character (i.e., "\000") in the string.
                         This action dynamically defines a new translation table whose resource
keymap(name)             name is name with the suffix Keymap (case is significant). The name None
                         restores the original translation table.
larger-vt-font()         Set the font to the next larger one, based on the font dimensions. See
                         also set-vt-font().
                         Load fontnames from the given subresource name and class. That is, load
                         the "*VT100.name.font", resource as "*VT100.font" etc. If no name is
                         given, the original set of fontnames is restored.
load-vt-fonts(name[,
class])                  Unlike set-vt-font(), this does not affect the escape- and select-fonts,
                         since those are not based on resource values. It does affect the fonts
                         loosely organized under the "Default" menu entry, including font,
                         boldFont, wideFont and wideBoldFont.
maximize()               Resizes the window to fill the screen.
meta-sends-escape()      This action toggles the state of the metaSendsEscape resource.
popup-menu(menuname)     This action displays the specified popup menu. Valid names (case is
                         significant) include: mainMenu, vtMenu, fontMenu, and tekMenu.
                         This action prints the window and is also invoked by the print entry in
                         mainMenu.

                         The action accepts optional parameters, which temporarily override
                         resource settings. The parameter values are matched ignoring case:


                         noFormFeed No form feed will be sent at the end of the last line printed
                                    (i.e., printerFormFeed is "false").
                         FormFeed   A form feed will be sent at the end of the last line printed
                                    (i.e., printerFormFeed is "true").
print(printer-flags)                No newline will be sent at the end of the last line printed,
                         noNewLine  and wrapped lines will be combined into long lines (i.e.,
                                    printerNewLine is "false").
                                    A newline will be sent at the end of the last line printed,
                         NewLine    and each line will be limited (by adding a newline) to the
                                    screen width (i.e., printerNewLine is "true").
                         noAttrs    The page is printed without attributes (i.e., printAttributes
                                    is "0").
                         monoAttrs  The page is printed with monochrome (vt220) attributes (i.e.,
                                    printAttributes is "1").
                         colorAttrs The page is printed with ANSI color attributes (i.e.,
                                    printAttributes is "2").

                         This action sends the entire text history, in addition to the text
print-everything(        currently visible, to the program given in the printerCommand resource.
printer-flags)           It allows the same optional parameters as the print action. With a
                         suitable printer command, the action can be used to load the text
                         history in an editor.
                         Sends the text of the current window directly to a file, as specified by
print-immediate()        the printFileImmediate, printModeImmediate and printOptsImmediate
                         resources.
                         Toggles a flag telling xterm that if it exits with an X error, to send
print-on-error()         the text of the current window directly to a file, as specified by the
                         printFileXError, printModeXError and printOptsXError resources.
                         This action toggles the printerControlMode between 0 and 2. The
print-redir()            corresponding popup menu entry is useful for switching the printer off
                         if you happen to change your mind after deciding to print random binary
                         files on the terminal.
quit()                   This action sends a SIGHUP to the subprogram and exits. It is also
                         invoked by the quit entry in mainMenu.
                         Supports the optional readline feature by echoing repeated cursor
readline-button()        forward or backward control sequences on button release event, to
                         request that the host application update its notion of the cursor's
                         position to match the button event.
redraw()                 This action redraws the window and is also invoked by the redraw entry
                         in mainMenu.
restore()                Restores the window to the size before it was last maximized.
                         This action scrolls the text window backward so that text that had
                         previously scrolled off the top of the screen is now visible.

                         The count argument indicates the number of units (which may be page,
                         halfpage, pixel, or line) by which to scroll.
scroll-back(count [,
units [,mouse] ])        An adjustment can be specified for these values by appending a "+" or "-
                         " sign followed by a number, e.g., page-2 to specify 2 lines less than a
                         page.

                         If the third parameter mouse is given, the action is ignored when mouse
                         reporting is enabled.
scroll-forw(count [,     This action is similar to scroll-back except that it scrolls in the
units [,mouse] ])        other direction.
secure()                 This action toggles the Secure Keyboard mode described in the section
                         named Security, and is invoked from the securekbd entry in mainMenu.
scroll-lock(on/off/      This action toggles internal state which tells xterm whether Scroll Lock
toggle)                  is active, subject to the allowScrollLock resource.
select-cursor-end(       This action is similar to select-end except that it should be used with
destname [, ...])        select-cursor-start.
select-cursor-extend()   This action is similar to select-extend except that it should be used
                         with select-cursor-start.
select-cursor-start()    This action is similar to select-start except that it begins the
                         selection at the current text cursor position.
                         This action puts the currently selected text into all of the selections
select-end(destname [,   or cutbuffers specified by destname. It also sends a mouse position and
...])                    updates the internal selection state to reflect the end of the selection
                         process.
select-extend()          This action tracks the pointer and extends the selection. It should only
                         be bound to Motion events.
select-set()             This action stores text that corresponds to the current selection,
                         without affecting the selection mode.
select-start()           This action begins text selection at the current pointer location. See
                         the section on Pointer Usage for information on making selections.
                         This action sends the signal named by signame to the xterm subprocess
                         (the shell or program specified with the -e command line option) and is
                         also invoked by the suspend, continue, interrupt, hangup, terminate, and
send-signal(signame)     kill entries in mainMenu. Allowable signal names are (case is not
                         significant): tstp (if supported by the operating system), suspend (same
                         as tstp), cont (if supported by the operating system), int, hup, term,
                         quit, alrm, alarm (same as alrm) and kill.
set-8-bit-control(on/off This action toggles the eightBitControl resource and is also invoked
/toggle)                 from the 8-bit-control entry in vtMenu.
set-allow132(on/off/     This action toggles the c132 resource and is also invoked from the
toggle)                  allow132 entry in vtMenu.
set-altscreen(on/off/    This action toggles between the alternate and current screens.
toggle)
set-appcursor(on/off/    This action toggles the handling Application Cursor Key mode and is also
toggle)                  invoked by the appcursor entry in vtMenu.
set-appkeypad(on/off/    This action toggles the handling of Application Keypad mode and is also
toggle)                  invoked by the appkeypad entry in vtMenu.
set-autolinefeed(on/off/ This action toggles automatic insertion of linefeeds and is also invoked
toggle)                  by the autolinefeed entry in vtMenu.
set-autowrap(on/off/     This action toggles automatic wrapping of long lines and is also invoked
toggle)                  by the autowrap entry in vtMenu.
set-backarrow(on/off/    This action toggles the backarrowKey resource and is also invoked from
toggle)                  the backarrow key entry in vtMenu.
set-bellIsUrgent(on/off/ This action toggles the bellIsUrgent resource and is also invoked by the
toggle)                  bellIsUrgent entry in vtMenu.
set-cursorblink(on/off/  This action toggles the cursorBlink resource and is also invoked from
toggle)                  the cursorblink entry in vtMenu.
set-cursesemul(on/off/   This action toggles the curses resource and is also invoked from the
toggle)                  cursesemul entry in vtMenu.
set-font-doublesize(on/  This action toggles the fontDoublesize resource and is also invoked by
off/toggle)              the font-doublesize entry in fontMenu.
set-hp-function-keys(on/ This action toggles the hpFunctionKeys resource and is also invoked by
off/toggle)              the hpFunctionKeys entry in mainMenu.
set-jumpscroll(on/off/   This action toggles the jumpscroll resource and is also invoked by the
toggle)                  jumpscroll entry in vtMenu.
set-font-linedrawing(on/ This action toggles the xterm's state regarding whether the current font
off/toggle)              has line-drawing characters and whether it should draw them directly. It
                         is also invoked by the font-linedrawing entry in fontMenu.
set-font-packed(on/off/  This action toggles the forcePackedFont's resource which controls use of
toggle)                  the font's minimum or maximum glyph width. It is also invoked by the
                         font-packed entry in fontMenu.
set-keep-selection(on/   This action toggles the keepSelection resource and is also invoked by
off/toggle)              the keepSelection entry in vtMenu.
set-logging()            This action toggles the state of the logging option.
set-old-function-keys(on This action toggles the state of legacy function keys and is also
/off/toggle)             invoked by the oldFunctionKeys entry in mainMenu.
set-marginbell(on/off/   This action toggles the marginBell resource.
toggle)
set-num-lock()           This action toggles the state of the numLock resource.
set-pop-on-bell(on/off/  This action toggles the popOnBell resource and is also invoked by the
toggle)                  poponbell entry in vtMenu.
set-render-font(on/off/  This action toggles the renderFont resource and is also invoked by the
toggle)                  render-font entry in fontMenu.
set-reverse-video(on/off This action toggles the reverseVideo resource and is also invoked by the
/toggle)                 reversevideo entry in vtMenu.
set-reversewrap(on/off/  This action toggles the reverseWrap resource and is also invoked by the
toggle)                  reversewrap entry in vtMenu.
set-scroll-on-key(on/off This action toggles the scrollKey resource and is also invoked from the
/toggle)                 scrollkey entry in vtMenu.
set-scroll-on-tty-output This action toggles the scrollTtyOutput resource and is also invoked
(on/off/toggle)          from the scrollttyoutput entry in vtMenu.
set-scrollbar(on/off/    This action toggles the scrollbar resource and is also invoked by the
toggle)                  scrollbar entry in vtMenu.
set-select(on/off/       This action toggles the selectToClipboard resource and is also invoked
toggle)                  by the selectToClipboard entry in vtMenu.
set-sco-function-keys(on This action toggles the scoFunctionKeys resource and is also invoked by
/off/toggle)             the scoFunctionKeys entry in mainMenu.
set-sun-function-keys(on This action toggles the sunFunctionKeys resource and is also invoked by
/off/toggle)             the sunFunctionKeys entry in mainMenu.
set-sun-keyboard(on/off/ This action toggles the sunKeyboard resource and is also invoked by the
toggle)                  sunKeyboard entry in mainMenu.
                         This action sets font used in the Tektronix window to the value of the
set-tek-text(large/2/3/  resources tektextlarge, tektext2, tektext3, and tektextsmall according
small)                   to the argument. It is also invoked by the entries of the same names as
                         the resources in tekMenu.
                         This action directs output to either the vt or tek windows, according to
set-terminal-type(type)  the type string. It is also invoked by the tekmode entry in vtMenu and
                         the vtmode entry in tekMenu.
set-titeInhibit(on/off/  This action toggles the titeInhibit resource, which controls switching
toggle)                  between the alternate and current screens.
set-toolbar(on/off/      This action toggles the toolbar feature and is also invoked by the
toggle)                  toolbar entry in mainMenu.
set-utf8-mode(on/off/    This action toggles the utf8 resource and is also invoked by the
toggle)                  utf8-mode entry in fontMenu.
set-utf8-title(on/off/   This action toggles the utf8Title resource and is also invoked by the
toggle)                  utf8-title entry in fontMenu.
set-visibility(vt/tek,on This action controls whether or not the vt or tek windows are visible.
/off/toggle)             It is also invoked from the tekshow and vthide entries in vtMenu and the
                         vtshow and tekhide entries in tekMenu.
set-visual-bell(on/off/  This action toggles the visualBell resource and is also invoked by the
toggle)                  visualbell entry in vtMenu.
                         This action sets the font or fonts currently being used in the VT102
                         window. The first argument is a single character that specifies the font
                         to be used:

                         d or D indicate the default font (the font initially used when xterm was
                         started),

                         1 through 6 indicate the fonts specified by the font1 through font6
set-vt-font(d/1/2/3/4/5/ resources,
6/e/s [,normalfont [,
boldfont]])              e or E indicate the normal and bold fonts that have been set through
                         escape codes (or specified as the second and third action arguments,
                         respectively), and

                         s or S indicate the font selection indicated by the second action
                         argument.

                         If xterm is configured to support wide characters, an additional two
                         optional parameters are recognized for the e argument: wide font and
                         wide bold font.
smaller-vt-font()        Set the font to the next smaller one, based on the font dimensions. See
                         also set-vt-font().
                         This action resets the scrolling region and is also invoked from the
soft-reset()             softreset entry in vtMenu. The effect is identical to a soft reset
                         (DECSTR) control sequence.
                         Spawn a new xterm process. This is available on systems which have a
                         modern version of the process filesystem, e.g., "/proc", which xterm can
                         read.

                         Use the "cwd" process entry, e.g., /proc/12345/cwd to obtain the working
spawn-new-terminal(      directory of the process that is running in the current xterm.
params)
                         On systems which have the "exe" process entry, e.g., /proc/12345/exe,
                         use this to obtain the actual executable. Otherwise, use the $PATH
                         variable to find xterm.

                         If parameters are given in the action, pass them to the new xterm
                         process.
start-extend()           This action is similar to select-start except that the selection is
                         extended to the current pointer location.
start-cursor-extend()    This action is similar to select-extend except that the selection is
                         extended to the current text cursor position.
                         This action inserts the specified text string as if it had been typed.
string(string)           Quotation is necessary if the string contains whitespace or
                         non-alphanumeric characters. If the string argument begins with the
                         characters "0x", it is interpreted as a hex character constant.
                         This action copies the escape codes used to generate the current window
tek-copy()               contents to a file in the current directory beginning with the name COPY
                         . It is also invoked from the tekcopy entry in tekMenu.
tek-page()               This action clears the Tektronix window and is also invoked by the
                         tekpage entry in tekMenu.
tek-reset()              This action resets the Tektronix window and is also invoked by the
                         tekreset entry in tekMenu.
                         Handles a button event (other than press and release) by echoing a
                         control sequence computed from the event's line number in the screen
                         relative to the current line:


                         Esc ^P

vi-button()              or


                         Esc ^N

                         ...according to whether the event is before, or after the current line,
                         respectively. The ^N (or ^P) is repeated once for each line that the
                         event differs from the current line. The control sequence is omitted
                         altogether if the button event is on the current line.
visual-bell()            This action flashes the window quickly.

=== The Tektronix window also has the following action: ===

gin-press(l/L/m/M/r/R) This action sends the indicated graphics input code.

=== The default bindings in the VT102 window use the SELECT token, which is set by the selectToClipboard resource: ===

         Shift <KeyPress> Prior:scroll-back(1,halfpage) \n\
          Shift <KeyPress> Next:scroll-forw(1,halfpage) \n\
        Shift <KeyPress> Select:select-cursor-start() \
                                select-cursor-end(SELECT, CUT_BUFFER0) \n\
        Shift <KeyPress> Insert:insert-selection(SELECT, CUT_BUFFER0) \n\
                Alt <Key>Return:fullscreen() \n\
       <KeyRelease> Scroll_Lock:scroll-lock() \n\
   Shift~Ctrl <KeyPress> KP_Add:larger-vt-font() \n\
   Shift Ctrl <KeyPress> KP_Add:smaller-vt-font() \n\
   Shift <KeyPress> KP_Subtract:smaller-vt-font() \n\
               ~Meta <KeyPress>:insert-seven-bit() \n\
                Meta <KeyPress>:insert-eight-bit() \n\
               !Ctrl <Btn1Down>:popup-menu(mainMenu) \n\
          !Lock Ctrl <Btn1Down>:popup-menu(mainMenu) \n\
!Lock Ctrl @Num_Lock <Btn1Down>:popup-menu(mainMenu) \n\
    ! @Num_Lock Ctrl <Btn1Down>:popup-menu(mainMenu) \n\
               ~Meta <Btn1Down>:select-start() \n\
             ~Meta <Btn1Motion>:select-extend() \n\
               !Ctrl <Btn2Down>:popup-menu(vtMenu) \n\
          !Lock Ctrl <Btn2Down>:popup-menu(vtMenu) \n\
!Lock Ctrl @Num_Lock <Btn2Down>:popup-menu(vtMenu) \n\
    ! @Num_Lock Ctrl <Btn2Down>:popup-menu(vtMenu) \n\
         ~Ctrl ~Meta <Btn2Down>:ignore() \n\
                Meta <Btn2Down>:clear-saved-lines() \n\
           ~Ctrl ~Meta <Btn2Up>:insert-selection(SELECT, CUT_BUFFER0) \n\
               !Ctrl <Btn3Down>:popup-menu(fontMenu) \n\
          !Lock Ctrl <Btn3Down>:popup-menu(fontMenu) \n\
!Lock Ctrl @Num_Lock <Btn3Down>:popup-menu(fontMenu) \n\
    ! @Num_Lock Ctrl <Btn3Down>:popup-menu(fontMenu) \n\
         ~Ctrl ~Meta <Btn3Down>:start-extend() \n\
             ~Meta <Btn3Motion>:select-extend() \n\
                Ctrl <Btn4Down>:scroll-back(1,halfpage,m) \n\
           Lock Ctrl <Btn4Down>:scroll-back(1,halfpage,m) \n\
 Lock @Num_Lock Ctrl <Btn4Down>:scroll-back(1,halfpage,m) \n\
      @Num_Lock Ctrl <Btn4Down>:scroll-back(1,halfpage,m) \n\
                     <Btn4Down>:scroll-back(5,line,m)     \n\
                Ctrl <Btn5Down>:scroll-forw(1,halfpage,m) \n\
           Lock Ctrl <Btn5Down>:scroll-forw(1,halfpage,m) \n\
 Lock @Num_Lock Ctrl <Btn5Down>:scroll-forw(1,halfpage,m) \n\
      @Num_Lock Ctrl <Btn5Down>:scroll-forw(1,halfpage,m) \n\
                     <Btn5Down>:scroll-forw(5,line,m)     \n\
                        <BtnUp>:select-end(SELECT, CUT_BUFFER0) \n\
                      <BtnDown>:ignore()

=== The default bindings for the scrollbar widget are separate from the VT10 widget: ===

                     <Btn5Down>: StartScroll(Forward) \n\
                     <Btn1Down>: StartScroll(Forward) \n\
                     <Btn2Down>: StartScroll(Continuous) MoveThumb() NotifyThumb() \n\
                     <Btn3Down>: StartScroll(Backward) \n\
                     <Btn4Down>: StartScroll(Backward) \n\
                   <Btn2Motion>: MoveThumb() NotifyThumb() \n\
                        <BtnUp>:    NotifyScroll(Proportional) EndScroll()

=== The default bindings in the Tektronix window are: ===

                ~Meta<KeyPress>: insert-seven-bit() \n\
                 Meta<KeyPress>: insert-eight-bit() \n\
               !Ctrl <Btn1Down>: popup-menu(mainMenu) \n\
          !Lock Ctrl <Btn1Down>: popup-menu(mainMenu) \n\
!Lock Ctrl @Num_Lock <Btn1Down>: popup-menu(mainMenu) \n\
     !Ctrl @Num_Lock <Btn1Down>: popup-menu(mainMenu) \n\
               !Ctrl <Btn2Down>: popup-menu(tekMenu) \n\
          !Lock Ctrl <Btn2Down>: popup-menu(tekMenu) \n\
!Lock Ctrl @Num_Lock <Btn2Down>: popup-menu(tekMenu) \n\
     !Ctrl @Num_Lock <Btn2Down>: popup-menu(tekMenu) \n\
          Shift ~Meta<Btn1Down>: gin-press(L) \n\
                ~Meta<Btn1Down>: gin-press(l) \n\
          Shift ~Meta<Btn2Down>: gin-press(M) \n\
                ~Meta<Btn2Down>: gin-press(m) \n\
          Shift ~Meta<Btn3Down>: gin-press(R) \n\
                ~Meta<Btn3Down>: gin-press(r)

Here is an example which uses shifted select/paste to copy to the clipboard,
and unshifted select/paste for the primary selection. In each case, a
(different) cut buffer is also a target or source of the select/paste
operation. It is important to remember however, that cut buffers store data in
ISO-8859-1 encoding, while selections can store data in a variety of formats
and encodings. While xterm owns the selection, it highlights it. When it loses
the selection, it removes the corresponding highlight. But you can still paste
from the corresponding cut buffer.

            === *VT100*translations:    #override \n\ ===
            ~Shift~Ctrl<Btn2Up>: insert-selection(PRIMARY, CUT_BUFFER0) \n\
               Shift~Ctrl<Btn2Up>:  insert-selection(CLIPBOARD, CUT_BUFFER1) \n\
               ~Shift<BtnUp>:       select-end(PRIMARY, CUT_BUFFER0) \n\
               Shift<BtnUp>:        select-end(CLIPBOARD, CUT_BUFFER1)

Below is a sample of how the keymap() action is used to add special keys for
entering commonly-typed works:

           === *VT100.Translations: #override <Key>F13: keymap(dbx) ===
           ==== *VT100.dbxKeymap.translations: \ ====
                <Key>F14: keymap(None) \n\
                <Key>F17: string("next") string(0x0d) \n\
                <Key>F18: string("step") string(0x0d) \n\
                <Key>F19: string("continue") string(0x0d) \n\
                <Key>F20: string("print ") insert-selection(PRIMARY, CUT_BUFFER0)

Some people prefer using the left pointer button for dragging the scrollbar
thumb. That can be setup by altering the translations resource, e.g.,

           *VT100.scrollbar.translations:#override \n\
                <Btn5Down>:StartScroll(Forward) \n\
                <Btn1Down>:StartScroll(Continuous) MoveThumb() NotifyThumb() \n\
                <Btn4Down>:StartScroll(Backward) \n\
                <Btn1Motion>:MoveThumb() NotifyThumb() \n\
                <BtnUp>:  NotifyScroll(Proportional) EndScroll()

=== Control Sequences And Keyboard ===

The xterm Control Sequences document lists the control sequences which an
application can send xterm to make it perform various operations. Most of these
operations are standardized, from either the DEC or Tektronix terminals, or
from more widely used standards such as ISO-6429.

=== Environment ===

==== xterm sets several environment variables: ====

DISPLAY       The display name, pointing to the X server.
TERM          Set according to the termcap (or terminfo) entry which it is
              using as a reference.
WINDOWID      Set to the X window id number of the xterm window.
XTERM_LOCALE  Shows the locale which was used by xterm on startup. Some shell
              initialization scripts may set a different locale.
              Set to the pathname of the program that is invoked. Usually that
XTERM_SHELL   is a shell program, such as /bin/sh. Since it is not necessarily
              a shell program however, it is distinct from "SHELL".
              Is set to the string displayed by the -version option. That is
              normally an identifier for the X Window libraries used to build
XTERM_VERSION xterm, followed by xterm's patch number. The patch number is also
              part of the response to a Secondary Device Attributes (DA)
              control sequence.

==== Depending on your system configuration, xterm may also set the following: ====

COLUMNS  The width of the xterm in characters.
HOME     When xterm is configured to update utmp.
LINES    The height of the xterm in characters.
LOGNAME  When xterm is configured to update utmp.
SHELL    When xterm is configured to update utmp. It is also set if you provide
         the shell name as the optional parameter.
         The contents of the termcap entry corresponding to $TERM, with lines
TERMCAP  and columns values substituted for the actual size window you have
         created.
TERMINFO May be defined to a nonstandard location in the configure script.

=== Files ===

===== The actual pathnames given may differ on your system: =====

/var/run/utmp  The system logfile, which records user logins.
/var/log/wtmp  The system logfile, which records user logins and logouts.
/etc/X11/
app-defaults/  The xterm default application resources.
XTerm
               The xterm color application resources. If your display supports
               color, use this

/etc/X11/
app-defaults/  *customization: -color
XTerm-color
               ...in your .Xdefaults file to automatically use this resource
               file rather than /etc/X11/app-defaults/XTerm. If you do not do
               this, xterm uses its compiled-in default resource settings for
               colors.

Error Messages

Most of the fatal error messages from xterm use the following format:

xterm: Error XXX, errno YYY: ZZZ

The XXX codes (which are used by xterm as its exit-code) are listed below, with
a brief explanation.

number      code                                error
1      n/a             Used for miscellaneous errors, usually accompanied by a
                       specific message.
11     ERROR_FIONBIO   main: ioctl() failed on FIONBIO
12     ERROR_F_GETFL   main: ioctl() failed on F_GETFL
13     ERROR_F_SETFL   main: ioctl() failed on F_SETFL
14     ERROR_OPDEVTTY  spawn: open() failed on /dev/tty
15     ERROR_TIOCGETP  spawn: ioctl() failed on TIOCGETP
17     ERROR_PTSNAME   spawn: ptsname() failed
18     ERROR_OPPTSNAME spawn: open() failed on ptsname
19     ERROR_PTEM      spawn: ioctl() failed on I_PUSH/"ptem"
20     ERROR_CONSEM    spawn: ioctl() failed on I_PUSH/"consem"
21     ERROR_LDTERM    spawn: ioctl() failed on I_PUSH/"ldterm"
22     ERROR_TTCOMPAT  spawn: iow3m: Can't load dump.
ctl() failed on I_PUSH/"ttcompat"
23     ERROR_TIOCSETP  spawn: ioctl() failed on TIOCSETP
24     ERROR_TIOCSETC  spawn: ioctl() failed on TIOCSETC
25     ERROR_TIOCSETD  spawn: ioctl() failed on TIOCSETD
26     ERROR_TIOCSLTC  spawn: ioctl() failed on TIOCSLTC
27     ERROR_TIOCLSET  spawn: ioctl() failed on TIOCLSET
28     ERROR_INIGROUPS spawn: initgroups() failed
29     ERROR_FORK      spawn: fork() failed
30     ERROR_EXEC      spawn: exec() failed
32     ERROR_PTYS      get_pty: not enough ptys
34     ERROR_PTY_EXEC  waiting for initial map
35     ERROR_SETUID    spawn: setuid() failed
36     ERROR_INIT      spawn: can't initialize window
46     ERROR_TIOCKSET  spawn: ioctl() failed on TIOCKSET
47     ERROR_TIOCKSETC spawn: ioctl() failed on TIOCKSETC
49     ERROR_LUMALLOC  luit: command-line malloc failed
50     ERROR_SELECT    in_put: select() failed
54     ERROR_VINIT     VTInit: can't initialize window
57     ERROR_KMMALLOC1 HandleKeymapChange: malloc failed
60     ERROR_TSELECT   Tinput: select() failed
64     ERROR_TINIT     TekInit: can't initialize window
71     ERROR_BMALLOC2  SaltTextAway: malloc() failed
80     ERROR_LOGEXEC   StartLog: exec() failed
83     ERROR_XERROR    xerror: XError event
84     ERROR_XIOERROR  xioerror: X I/O error
85     ERROR_ICEERROR  ICE I/O error
90     ERROR_SCALLOC   Alloc: calloc() failed on base
91     ERROR_SCALLOC2  Alloc: calloc() failed on rows
102    ERROR_SAVE_PTR  ScrnPointers: malloc/realloc() failed
121    ERROR_MMALLOC   my_memmove: malloc/realloc failed

== Examples ==

=== xterm ===

Launches xterm in a new window running the default terminal shell as set in the
SHELL environment variable, or else /bin/sh (the Bourne Shell).

xterm csh

Launches xterm in a new window running the C Shell, csh.

xterm -e top

Launches xterm in a new window running the program top. When top is exited, the
xterm window will also close.

=== Related commands ===

X — Executable of the X Window System.

